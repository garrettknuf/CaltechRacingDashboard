
CaltechRacingDashboard.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000797c  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000bc  08007b40  08007b40  00017b40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08007bfc  08007bfc  00032c5c  2**0
                  CONTENTS
  4 .ARM          00000008  08007bfc  08007bfc  00017bfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08007c04  08007c04  00032c5c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08007c04  08007c04  00017c04  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007c08  08007c08  00017c08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00012c5c  20000000  08007c0c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002e4  20012c5c  0801a868  00032c5c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20012f40  0801a868  00032f40  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00032c5c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00015de6  00000000  00000000  00032c8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00003458  00000000  00000000  00048a72  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001410  00000000  00000000  0004bed0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001258  00000000  00000000  0004d2e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00022831  00000000  00000000  0004e538  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00019a7b  00000000  00000000  00070d69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cfc23  00000000  00000000  0008a7e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0015a407  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000529c  00000000  00000000  0015a458  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20012c5c 	.word	0x20012c5c
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08007b28 	.word	0x08007b28

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20012c60 	.word	0x20012c60
 8000200:	08007b28 	.word	0x08007b28

08000204 <__aeabi_uldivmod>:
 8000204:	b953      	cbnz	r3, 800021c <__aeabi_uldivmod+0x18>
 8000206:	b94a      	cbnz	r2, 800021c <__aeabi_uldivmod+0x18>
 8000208:	2900      	cmp	r1, #0
 800020a:	bf08      	it	eq
 800020c:	2800      	cmpeq	r0, #0
 800020e:	bf1c      	itt	ne
 8000210:	f04f 31ff 	movne.w	r1, #4294967295
 8000214:	f04f 30ff 	movne.w	r0, #4294967295
 8000218:	f000 b974 	b.w	8000504 <__aeabi_idiv0>
 800021c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000220:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000224:	f000 f806 	bl	8000234 <__udivmoddi4>
 8000228:	f8dd e004 	ldr.w	lr, [sp, #4]
 800022c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000230:	b004      	add	sp, #16
 8000232:	4770      	bx	lr

08000234 <__udivmoddi4>:
 8000234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000238:	9d08      	ldr	r5, [sp, #32]
 800023a:	4604      	mov	r4, r0
 800023c:	468e      	mov	lr, r1
 800023e:	2b00      	cmp	r3, #0
 8000240:	d14d      	bne.n	80002de <__udivmoddi4+0xaa>
 8000242:	428a      	cmp	r2, r1
 8000244:	4694      	mov	ip, r2
 8000246:	d969      	bls.n	800031c <__udivmoddi4+0xe8>
 8000248:	fab2 f282 	clz	r2, r2
 800024c:	b152      	cbz	r2, 8000264 <__udivmoddi4+0x30>
 800024e:	fa01 f302 	lsl.w	r3, r1, r2
 8000252:	f1c2 0120 	rsb	r1, r2, #32
 8000256:	fa20 f101 	lsr.w	r1, r0, r1
 800025a:	fa0c fc02 	lsl.w	ip, ip, r2
 800025e:	ea41 0e03 	orr.w	lr, r1, r3
 8000262:	4094      	lsls	r4, r2
 8000264:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000268:	0c21      	lsrs	r1, r4, #16
 800026a:	fbbe f6f8 	udiv	r6, lr, r8
 800026e:	fa1f f78c 	uxth.w	r7, ip
 8000272:	fb08 e316 	mls	r3, r8, r6, lr
 8000276:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800027a:	fb06 f107 	mul.w	r1, r6, r7
 800027e:	4299      	cmp	r1, r3
 8000280:	d90a      	bls.n	8000298 <__udivmoddi4+0x64>
 8000282:	eb1c 0303 	adds.w	r3, ip, r3
 8000286:	f106 30ff 	add.w	r0, r6, #4294967295
 800028a:	f080 811f 	bcs.w	80004cc <__udivmoddi4+0x298>
 800028e:	4299      	cmp	r1, r3
 8000290:	f240 811c 	bls.w	80004cc <__udivmoddi4+0x298>
 8000294:	3e02      	subs	r6, #2
 8000296:	4463      	add	r3, ip
 8000298:	1a5b      	subs	r3, r3, r1
 800029a:	b2a4      	uxth	r4, r4
 800029c:	fbb3 f0f8 	udiv	r0, r3, r8
 80002a0:	fb08 3310 	mls	r3, r8, r0, r3
 80002a4:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80002a8:	fb00 f707 	mul.w	r7, r0, r7
 80002ac:	42a7      	cmp	r7, r4
 80002ae:	d90a      	bls.n	80002c6 <__udivmoddi4+0x92>
 80002b0:	eb1c 0404 	adds.w	r4, ip, r4
 80002b4:	f100 33ff 	add.w	r3, r0, #4294967295
 80002b8:	f080 810a 	bcs.w	80004d0 <__udivmoddi4+0x29c>
 80002bc:	42a7      	cmp	r7, r4
 80002be:	f240 8107 	bls.w	80004d0 <__udivmoddi4+0x29c>
 80002c2:	4464      	add	r4, ip
 80002c4:	3802      	subs	r0, #2
 80002c6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80002ca:	1be4      	subs	r4, r4, r7
 80002cc:	2600      	movs	r6, #0
 80002ce:	b11d      	cbz	r5, 80002d8 <__udivmoddi4+0xa4>
 80002d0:	40d4      	lsrs	r4, r2
 80002d2:	2300      	movs	r3, #0
 80002d4:	e9c5 4300 	strd	r4, r3, [r5]
 80002d8:	4631      	mov	r1, r6
 80002da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002de:	428b      	cmp	r3, r1
 80002e0:	d909      	bls.n	80002f6 <__udivmoddi4+0xc2>
 80002e2:	2d00      	cmp	r5, #0
 80002e4:	f000 80ef 	beq.w	80004c6 <__udivmoddi4+0x292>
 80002e8:	2600      	movs	r6, #0
 80002ea:	e9c5 0100 	strd	r0, r1, [r5]
 80002ee:	4630      	mov	r0, r6
 80002f0:	4631      	mov	r1, r6
 80002f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002f6:	fab3 f683 	clz	r6, r3
 80002fa:	2e00      	cmp	r6, #0
 80002fc:	d14a      	bne.n	8000394 <__udivmoddi4+0x160>
 80002fe:	428b      	cmp	r3, r1
 8000300:	d302      	bcc.n	8000308 <__udivmoddi4+0xd4>
 8000302:	4282      	cmp	r2, r0
 8000304:	f200 80f9 	bhi.w	80004fa <__udivmoddi4+0x2c6>
 8000308:	1a84      	subs	r4, r0, r2
 800030a:	eb61 0303 	sbc.w	r3, r1, r3
 800030e:	2001      	movs	r0, #1
 8000310:	469e      	mov	lr, r3
 8000312:	2d00      	cmp	r5, #0
 8000314:	d0e0      	beq.n	80002d8 <__udivmoddi4+0xa4>
 8000316:	e9c5 4e00 	strd	r4, lr, [r5]
 800031a:	e7dd      	b.n	80002d8 <__udivmoddi4+0xa4>
 800031c:	b902      	cbnz	r2, 8000320 <__udivmoddi4+0xec>
 800031e:	deff      	udf	#255	; 0xff
 8000320:	fab2 f282 	clz	r2, r2
 8000324:	2a00      	cmp	r2, #0
 8000326:	f040 8092 	bne.w	800044e <__udivmoddi4+0x21a>
 800032a:	eba1 010c 	sub.w	r1, r1, ip
 800032e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000332:	fa1f fe8c 	uxth.w	lr, ip
 8000336:	2601      	movs	r6, #1
 8000338:	0c20      	lsrs	r0, r4, #16
 800033a:	fbb1 f3f7 	udiv	r3, r1, r7
 800033e:	fb07 1113 	mls	r1, r7, r3, r1
 8000342:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000346:	fb0e f003 	mul.w	r0, lr, r3
 800034a:	4288      	cmp	r0, r1
 800034c:	d908      	bls.n	8000360 <__udivmoddi4+0x12c>
 800034e:	eb1c 0101 	adds.w	r1, ip, r1
 8000352:	f103 38ff 	add.w	r8, r3, #4294967295
 8000356:	d202      	bcs.n	800035e <__udivmoddi4+0x12a>
 8000358:	4288      	cmp	r0, r1
 800035a:	f200 80cb 	bhi.w	80004f4 <__udivmoddi4+0x2c0>
 800035e:	4643      	mov	r3, r8
 8000360:	1a09      	subs	r1, r1, r0
 8000362:	b2a4      	uxth	r4, r4
 8000364:	fbb1 f0f7 	udiv	r0, r1, r7
 8000368:	fb07 1110 	mls	r1, r7, r0, r1
 800036c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000370:	fb0e fe00 	mul.w	lr, lr, r0
 8000374:	45a6      	cmp	lr, r4
 8000376:	d908      	bls.n	800038a <__udivmoddi4+0x156>
 8000378:	eb1c 0404 	adds.w	r4, ip, r4
 800037c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000380:	d202      	bcs.n	8000388 <__udivmoddi4+0x154>
 8000382:	45a6      	cmp	lr, r4
 8000384:	f200 80bb 	bhi.w	80004fe <__udivmoddi4+0x2ca>
 8000388:	4608      	mov	r0, r1
 800038a:	eba4 040e 	sub.w	r4, r4, lr
 800038e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000392:	e79c      	b.n	80002ce <__udivmoddi4+0x9a>
 8000394:	f1c6 0720 	rsb	r7, r6, #32
 8000398:	40b3      	lsls	r3, r6
 800039a:	fa22 fc07 	lsr.w	ip, r2, r7
 800039e:	ea4c 0c03 	orr.w	ip, ip, r3
 80003a2:	fa20 f407 	lsr.w	r4, r0, r7
 80003a6:	fa01 f306 	lsl.w	r3, r1, r6
 80003aa:	431c      	orrs	r4, r3
 80003ac:	40f9      	lsrs	r1, r7
 80003ae:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80003b2:	fa00 f306 	lsl.w	r3, r0, r6
 80003b6:	fbb1 f8f9 	udiv	r8, r1, r9
 80003ba:	0c20      	lsrs	r0, r4, #16
 80003bc:	fa1f fe8c 	uxth.w	lr, ip
 80003c0:	fb09 1118 	mls	r1, r9, r8, r1
 80003c4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003c8:	fb08 f00e 	mul.w	r0, r8, lr
 80003cc:	4288      	cmp	r0, r1
 80003ce:	fa02 f206 	lsl.w	r2, r2, r6
 80003d2:	d90b      	bls.n	80003ec <__udivmoddi4+0x1b8>
 80003d4:	eb1c 0101 	adds.w	r1, ip, r1
 80003d8:	f108 3aff 	add.w	sl, r8, #4294967295
 80003dc:	f080 8088 	bcs.w	80004f0 <__udivmoddi4+0x2bc>
 80003e0:	4288      	cmp	r0, r1
 80003e2:	f240 8085 	bls.w	80004f0 <__udivmoddi4+0x2bc>
 80003e6:	f1a8 0802 	sub.w	r8, r8, #2
 80003ea:	4461      	add	r1, ip
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f9 	udiv	r0, r1, r9
 80003f4:	fb09 1110 	mls	r1, r9, r0, r1
 80003f8:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80003fc:	fb00 fe0e 	mul.w	lr, r0, lr
 8000400:	458e      	cmp	lr, r1
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x1e2>
 8000404:	eb1c 0101 	adds.w	r1, ip, r1
 8000408:	f100 34ff 	add.w	r4, r0, #4294967295
 800040c:	d26c      	bcs.n	80004e8 <__udivmoddi4+0x2b4>
 800040e:	458e      	cmp	lr, r1
 8000410:	d96a      	bls.n	80004e8 <__udivmoddi4+0x2b4>
 8000412:	3802      	subs	r0, #2
 8000414:	4461      	add	r1, ip
 8000416:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800041a:	fba0 9402 	umull	r9, r4, r0, r2
 800041e:	eba1 010e 	sub.w	r1, r1, lr
 8000422:	42a1      	cmp	r1, r4
 8000424:	46c8      	mov	r8, r9
 8000426:	46a6      	mov	lr, r4
 8000428:	d356      	bcc.n	80004d8 <__udivmoddi4+0x2a4>
 800042a:	d053      	beq.n	80004d4 <__udivmoddi4+0x2a0>
 800042c:	b15d      	cbz	r5, 8000446 <__udivmoddi4+0x212>
 800042e:	ebb3 0208 	subs.w	r2, r3, r8
 8000432:	eb61 010e 	sbc.w	r1, r1, lr
 8000436:	fa01 f707 	lsl.w	r7, r1, r7
 800043a:	fa22 f306 	lsr.w	r3, r2, r6
 800043e:	40f1      	lsrs	r1, r6
 8000440:	431f      	orrs	r7, r3
 8000442:	e9c5 7100 	strd	r7, r1, [r5]
 8000446:	2600      	movs	r6, #0
 8000448:	4631      	mov	r1, r6
 800044a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800044e:	f1c2 0320 	rsb	r3, r2, #32
 8000452:	40d8      	lsrs	r0, r3
 8000454:	fa0c fc02 	lsl.w	ip, ip, r2
 8000458:	fa21 f303 	lsr.w	r3, r1, r3
 800045c:	4091      	lsls	r1, r2
 800045e:	4301      	orrs	r1, r0
 8000460:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000464:	fa1f fe8c 	uxth.w	lr, ip
 8000468:	fbb3 f0f7 	udiv	r0, r3, r7
 800046c:	fb07 3610 	mls	r6, r7, r0, r3
 8000470:	0c0b      	lsrs	r3, r1, #16
 8000472:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000476:	fb00 f60e 	mul.w	r6, r0, lr
 800047a:	429e      	cmp	r6, r3
 800047c:	fa04 f402 	lsl.w	r4, r4, r2
 8000480:	d908      	bls.n	8000494 <__udivmoddi4+0x260>
 8000482:	eb1c 0303 	adds.w	r3, ip, r3
 8000486:	f100 38ff 	add.w	r8, r0, #4294967295
 800048a:	d22f      	bcs.n	80004ec <__udivmoddi4+0x2b8>
 800048c:	429e      	cmp	r6, r3
 800048e:	d92d      	bls.n	80004ec <__udivmoddi4+0x2b8>
 8000490:	3802      	subs	r0, #2
 8000492:	4463      	add	r3, ip
 8000494:	1b9b      	subs	r3, r3, r6
 8000496:	b289      	uxth	r1, r1
 8000498:	fbb3 f6f7 	udiv	r6, r3, r7
 800049c:	fb07 3316 	mls	r3, r7, r6, r3
 80004a0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004a4:	fb06 f30e 	mul.w	r3, r6, lr
 80004a8:	428b      	cmp	r3, r1
 80004aa:	d908      	bls.n	80004be <__udivmoddi4+0x28a>
 80004ac:	eb1c 0101 	adds.w	r1, ip, r1
 80004b0:	f106 38ff 	add.w	r8, r6, #4294967295
 80004b4:	d216      	bcs.n	80004e4 <__udivmoddi4+0x2b0>
 80004b6:	428b      	cmp	r3, r1
 80004b8:	d914      	bls.n	80004e4 <__udivmoddi4+0x2b0>
 80004ba:	3e02      	subs	r6, #2
 80004bc:	4461      	add	r1, ip
 80004be:	1ac9      	subs	r1, r1, r3
 80004c0:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 80004c4:	e738      	b.n	8000338 <__udivmoddi4+0x104>
 80004c6:	462e      	mov	r6, r5
 80004c8:	4628      	mov	r0, r5
 80004ca:	e705      	b.n	80002d8 <__udivmoddi4+0xa4>
 80004cc:	4606      	mov	r6, r0
 80004ce:	e6e3      	b.n	8000298 <__udivmoddi4+0x64>
 80004d0:	4618      	mov	r0, r3
 80004d2:	e6f8      	b.n	80002c6 <__udivmoddi4+0x92>
 80004d4:	454b      	cmp	r3, r9
 80004d6:	d2a9      	bcs.n	800042c <__udivmoddi4+0x1f8>
 80004d8:	ebb9 0802 	subs.w	r8, r9, r2
 80004dc:	eb64 0e0c 	sbc.w	lr, r4, ip
 80004e0:	3801      	subs	r0, #1
 80004e2:	e7a3      	b.n	800042c <__udivmoddi4+0x1f8>
 80004e4:	4646      	mov	r6, r8
 80004e6:	e7ea      	b.n	80004be <__udivmoddi4+0x28a>
 80004e8:	4620      	mov	r0, r4
 80004ea:	e794      	b.n	8000416 <__udivmoddi4+0x1e2>
 80004ec:	4640      	mov	r0, r8
 80004ee:	e7d1      	b.n	8000494 <__udivmoddi4+0x260>
 80004f0:	46d0      	mov	r8, sl
 80004f2:	e77b      	b.n	80003ec <__udivmoddi4+0x1b8>
 80004f4:	3b02      	subs	r3, #2
 80004f6:	4461      	add	r1, ip
 80004f8:	e732      	b.n	8000360 <__udivmoddi4+0x12c>
 80004fa:	4630      	mov	r0, r6
 80004fc:	e709      	b.n	8000312 <__udivmoddi4+0xde>
 80004fe:	4464      	add	r4, ip
 8000500:	3802      	subs	r0, #2
 8000502:	e742      	b.n	800038a <__udivmoddi4+0x156>

08000504 <__aeabi_idiv0>:
 8000504:	4770      	bx	lr
 8000506:	bf00      	nop

08000508 <Button_Init>:
static button_t btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8;

/* List of button handles (order must match button_id_t enum) */
static button_t *button_list[BTN_CNT] = {&btn1, &btn2, &btn3, &btn4, &btn5, &btn6, &btn7, &btn8};

void Button_Init(void) {
 8000508:	b480      	push	{r7}
 800050a:	b099      	sub	sp, #100	; 0x64
 800050c:	af00      	add	r7, sp, #0
	btn1 = (button_t) {.id = BTN_ID_1, .counter = 0,
 800050e:	4b17      	ldr	r3, [pc, #92]	; (800056c <Button_Init+0x64>)
 8000510:	4a17      	ldr	r2, [pc, #92]	; (8000570 <Button_Init+0x68>)
 8000512:	ca07      	ldmia	r2, {r0, r1, r2}
 8000514:	e883 0007 	stmia.w	r3, {r0, r1, r2}
					   .port = BTN1_GPIO_Port, .pin = BTN1_Pin};
	btn2 = (button_t) {.id = BTN_ID_2, .counter = 0,
 8000518:	4b16      	ldr	r3, [pc, #88]	; (8000574 <Button_Init+0x6c>)
 800051a:	4a17      	ldr	r2, [pc, #92]	; (8000578 <Button_Init+0x70>)
 800051c:	ca07      	ldmia	r2, {r0, r1, r2}
 800051e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
					   .port = BTN2_GPIO_Port, .pin = BTN2_Pin};
	btn3 = (button_t) {.id = BTN_ID_3, .counter = 0,
 8000522:	4b16      	ldr	r3, [pc, #88]	; (800057c <Button_Init+0x74>)
 8000524:	4a16      	ldr	r2, [pc, #88]	; (8000580 <Button_Init+0x78>)
 8000526:	ca07      	ldmia	r2, {r0, r1, r2}
 8000528:	e883 0007 	stmia.w	r3, {r0, r1, r2}
					   .port = BTN3_GPIO_Port, .pin = BTN3_Pin};
	btn4 = (button_t) {.id = BTN_ID_4, .counter = 0,
 800052c:	4b15      	ldr	r3, [pc, #84]	; (8000584 <Button_Init+0x7c>)
 800052e:	4a16      	ldr	r2, [pc, #88]	; (8000588 <Button_Init+0x80>)
 8000530:	ca07      	ldmia	r2, {r0, r1, r2}
 8000532:	e883 0007 	stmia.w	r3, {r0, r1, r2}
					   .port = BTN4_GPIO_Port, .pin = BTN4_Pin};
	btn5 = (button_t) {.id = BTN_ID_5, .counter = 0,
 8000536:	4b15      	ldr	r3, [pc, #84]	; (800058c <Button_Init+0x84>)
 8000538:	4a15      	ldr	r2, [pc, #84]	; (8000590 <Button_Init+0x88>)
 800053a:	ca07      	ldmia	r2, {r0, r1, r2}
 800053c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
					   .port = BTN5_GPIO_Port, .pin = BTN5_Pin};
	btn6 = (button_t) {.id = BTN_ID_6, .counter = 0,
 8000540:	4b14      	ldr	r3, [pc, #80]	; (8000594 <Button_Init+0x8c>)
 8000542:	4a15      	ldr	r2, [pc, #84]	; (8000598 <Button_Init+0x90>)
 8000544:	ca07      	ldmia	r2, {r0, r1, r2}
 8000546:	e883 0007 	stmia.w	r3, {r0, r1, r2}
				       .port = BTN6_GPIO_Port, .pin = BTN6_Pin};
	btn7 = (button_t) {.id = BTN_ID_DEBUG1, .counter = 0,
 800054a:	4b14      	ldr	r3, [pc, #80]	; (800059c <Button_Init+0x94>)
 800054c:	4a14      	ldr	r2, [pc, #80]	; (80005a0 <Button_Init+0x98>)
 800054e:	ca07      	ldmia	r2, {r0, r1, r2}
 8000550:	e883 0007 	stmia.w	r3, {r0, r1, r2}
					   .port = DEBUG_BTN1_GPIO_Port, .pin = DEBUG_BTN1_Pin};
	btn8 = (button_t) {.id = BTN_ID_DEBUG2, .counter = 0,
 8000554:	4b13      	ldr	r3, [pc, #76]	; (80005a4 <Button_Init+0x9c>)
 8000556:	4a14      	ldr	r2, [pc, #80]	; (80005a8 <Button_Init+0xa0>)
 8000558:	ca07      	ldmia	r2, {r0, r1, r2}
 800055a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
					   .port = DEBUG_BTN2_GPIO_Port, .pin = DEBUG_BTN2_Pin};
}
 800055e:	bf00      	nop
 8000560:	3764      	adds	r7, #100	; 0x64
 8000562:	46bd      	mov	sp, r7
 8000564:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000568:	4770      	bx	lr
 800056a:	bf00      	nop
 800056c:	20012c78 	.word	0x20012c78
 8000570:	08007b40 	.word	0x08007b40
 8000574:	20012c84 	.word	0x20012c84
 8000578:	08007b4c 	.word	0x08007b4c
 800057c:	20012c90 	.word	0x20012c90
 8000580:	08007b58 	.word	0x08007b58
 8000584:	20012c9c 	.word	0x20012c9c
 8000588:	08007b64 	.word	0x08007b64
 800058c:	20012ca8 	.word	0x20012ca8
 8000590:	08007b70 	.word	0x08007b70
 8000594:	20012cb4 	.word	0x20012cb4
 8000598:	08007b7c 	.word	0x08007b7c
 800059c:	20012cc0 	.word	0x20012cc0
 80005a0:	08007b88 	.word	0x08007b88
 80005a4:	20012ccc 	.word	0x20012ccc
 80005a8:	08007b94 	.word	0x08007b94

080005ac <Button_PressedHandler>:

/**
 * @brief Callback function when button pressed
 * @param id (button_id_t) - id of button pressed
 */
static void Button_PressedHandler(button_id_t id) {
 80005ac:	b580      	push	{r7, lr}
 80005ae:	b082      	sub	sp, #8
 80005b0:	af00      	add	r7, sp, #0
 80005b2:	4603      	mov	r3, r0
 80005b4:	71fb      	strb	r3, [r7, #7]
	switch (id) {
 80005b6:	79fb      	ldrb	r3, [r7, #7]
 80005b8:	2b07      	cmp	r3, #7
 80005ba:	d817      	bhi.n	80005ec <Button_PressedHandler+0x40>
 80005bc:	a201      	add	r2, pc, #4	; (adr r2, 80005c4 <Button_PressedHandler+0x18>)
 80005be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80005c2:	bf00      	nop
 80005c4:	080005e5 	.word	0x080005e5
 80005c8:	080005ed 	.word	0x080005ed
 80005cc:	080005ed 	.word	0x080005ed
 80005d0:	080005ed 	.word	0x080005ed
 80005d4:	080005ed 	.word	0x080005ed
 80005d8:	080005ed 	.word	0x080005ed
 80005dc:	080005ed 	.word	0x080005ed
 80005e0:	080005ed 	.word	0x080005ed
		case BTN_ID_1:
			Led_Toggle(LED_ID_1);
 80005e4:	2000      	movs	r0, #0
 80005e6:	f001 f8b9 	bl	800175c <Led_Toggle>
			break;
 80005ea:	e000      	b.n	80005ee <Button_PressedHandler+0x42>
		case BTN_ID_DEBUG1:
			break;
		case BTN_ID_DEBUG2:
			break;
		default:
			break;
 80005ec:	bf00      	nop
	}
}
 80005ee:	bf00      	nop
 80005f0:	3708      	adds	r7, #8
 80005f2:	46bd      	mov	sp, r7
 80005f4:	bd80      	pop	{r7, pc}
 80005f6:	bf00      	nop

080005f8 <Button_ReleasedHandler>:

/**
 * @brief Callback function when button released
 * @param id (button_id_t) - id of button released
 */
static void Button_ReleasedHandler(button_id_t id) {
 80005f8:	b480      	push	{r7}
 80005fa:	b083      	sub	sp, #12
 80005fc:	af00      	add	r7, sp, #0
 80005fe:	4603      	mov	r3, r0
 8000600:	71fb      	strb	r3, [r7, #7]
	switch (id) {
 8000602:	79fb      	ldrb	r3, [r7, #7]
 8000604:	2b07      	cmp	r3, #7
 8000606:	d813      	bhi.n	8000630 <Button_ReleasedHandler+0x38>
 8000608:	a201      	add	r2, pc, #4	; (adr r2, 8000610 <Button_ReleasedHandler+0x18>)
 800060a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800060e:	bf00      	nop
 8000610:	08000631 	.word	0x08000631
 8000614:	08000631 	.word	0x08000631
 8000618:	08000631 	.word	0x08000631
 800061c:	08000631 	.word	0x08000631
 8000620:	08000631 	.word	0x08000631
 8000624:	08000631 	.word	0x08000631
 8000628:	08000631 	.word	0x08000631
 800062c:	08000631 	.word	0x08000631
		case BTN_ID_DEBUG1:
			break;
		case BTN_ID_DEBUG2:
			break;
		default:
			break;
 8000630:	bf00      	nop
	}
}
 8000632:	bf00      	nop
 8000634:	370c      	adds	r7, #12
 8000636:	46bd      	mov	sp, r7
 8000638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800063c:	4770      	bx	lr
 800063e:	bf00      	nop

08000640 <Button_Debounce>:

void Button_Debounce(void) {
 8000640:	b580      	push	{r7, lr}
 8000642:	b084      	sub	sp, #16
 8000644:	af00      	add	r7, sp, #0
	for (uint8_t i = 0; i < BTN_CNT; i++) {
 8000646:	2300      	movs	r3, #0
 8000648:	73fb      	strb	r3, [r7, #15]
 800064a:	e03c      	b.n	80006c6 <Button_Debounce+0x86>
		// Get next button to debounce
		button_t *btn = button_list[i];
 800064c:	7bfb      	ldrb	r3, [r7, #15]
 800064e:	4a22      	ldr	r2, [pc, #136]	; (80006d8 <Button_Debounce+0x98>)
 8000650:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000654:	60bb      	str	r3, [r7, #8]

		// Read current state of button
		bool pressed = !HAL_GPIO_ReadPin(btn->port, btn->pin);
 8000656:	68bb      	ldr	r3, [r7, #8]
 8000658:	685a      	ldr	r2, [r3, #4]
 800065a:	68bb      	ldr	r3, [r7, #8]
 800065c:	689b      	ldr	r3, [r3, #8]
 800065e:	b29b      	uxth	r3, r3
 8000660:	4619      	mov	r1, r3
 8000662:	4610      	mov	r0, r2
 8000664:	f003 f9e2 	bl	8003a2c <HAL_GPIO_ReadPin>
 8000668:	4603      	mov	r3, r0
 800066a:	2b00      	cmp	r3, #0
 800066c:	bf0c      	ite	eq
 800066e:	2301      	moveq	r3, #1
 8000670:	2300      	movne	r3, #0
 8000672:	71fb      	strb	r3, [r7, #7]

		if (!pressed) {
 8000674:	79fb      	ldrb	r3, [r7, #7]
 8000676:	f083 0301 	eor.w	r3, r3, #1
 800067a:	b2db      	uxtb	r3, r3
 800067c:	2b00      	cmp	r3, #0
 800067e:	d00c      	beq.n	800069a <Button_Debounce+0x5a>
			// If button released then call callback function if it exists
			if (btn->counter == DEBOUNCE_TIME + 1) {
 8000680:	68bb      	ldr	r3, [r7, #8]
 8000682:	785b      	ldrb	r3, [r3, #1]
 8000684:	2b15      	cmp	r3, #21
 8000686:	d104      	bne.n	8000692 <Button_Debounce+0x52>
				Button_PressedHandler(btn->id);
 8000688:	68bb      	ldr	r3, [r7, #8]
 800068a:	781b      	ldrb	r3, [r3, #0]
 800068c:	4618      	mov	r0, r3
 800068e:	f7ff ff8d 	bl	80005ac <Button_PressedHandler>
			}

			// Button not pressed so reset counter
			btn->counter = 0;
 8000692:	68bb      	ldr	r3, [r7, #8]
 8000694:	2200      	movs	r2, #0
 8000696:	705a      	strb	r2, [r3, #1]
 8000698:	e012      	b.n	80006c0 <Button_Debounce+0x80>
		} else {
			// Do not allow counter to overflow
			if (btn->counter <= DEBOUNCE_TIME) {
 800069a:	68bb      	ldr	r3, [r7, #8]
 800069c:	785b      	ldrb	r3, [r3, #1]
 800069e:	2b14      	cmp	r3, #20
 80006a0:	d80e      	bhi.n	80006c0 <Button_Debounce+0x80>
				btn->counter++;
 80006a2:	68bb      	ldr	r3, [r7, #8]
 80006a4:	785b      	ldrb	r3, [r3, #1]
 80006a6:	3301      	adds	r3, #1
 80006a8:	b2da      	uxtb	r2, r3
 80006aa:	68bb      	ldr	r3, [r7, #8]
 80006ac:	705a      	strb	r2, [r3, #1]
				// If counter reaches debounce time then register press
				if (btn->counter == DEBOUNCE_TIME) {
 80006ae:	68bb      	ldr	r3, [r7, #8]
 80006b0:	785b      	ldrb	r3, [r3, #1]
 80006b2:	2b14      	cmp	r3, #20
 80006b4:	d104      	bne.n	80006c0 <Button_Debounce+0x80>
					Button_ReleasedHandler(btn->id);
 80006b6:	68bb      	ldr	r3, [r7, #8]
 80006b8:	781b      	ldrb	r3, [r3, #0]
 80006ba:	4618      	mov	r0, r3
 80006bc:	f7ff ff9c 	bl	80005f8 <Button_ReleasedHandler>
	for (uint8_t i = 0; i < BTN_CNT; i++) {
 80006c0:	7bfb      	ldrb	r3, [r7, #15]
 80006c2:	3301      	adds	r3, #1
 80006c4:	73fb      	strb	r3, [r7, #15]
 80006c6:	7bfb      	ldrb	r3, [r7, #15]
 80006c8:	2b07      	cmp	r3, #7
 80006ca:	d9bf      	bls.n	800064c <Button_Debounce+0xc>
				}
			}
		}
	}
}
 80006cc:	bf00      	nop
 80006ce:	bf00      	nop
 80006d0:	3710      	adds	r7, #16
 80006d2:	46bd      	mov	sp, r7
 80006d4:	bd80      	pop	{r7, pc}
 80006d6:	bf00      	nop
 80006d8:	20000000 	.word	0x20000000

080006dc <Display_Init>:

/* External reference to display SPI handle */
extern SPI_HandleTypeDef hspi4;

void Display_Init(void)
{
 80006dc:	b580      	push	{r7, lr}
 80006de:	af00      	add	r7, sp, #0
	/* Hardware reset display */
	Display_HWReset();
 80006e0:	f000 f824 	bl	800072c <Display_HWReset>

	/* Software reset */
	Display_TransmitCmd(DISPLAY_SWRESET);
 80006e4:	2001      	movs	r0, #1
 80006e6:	f000 f839 	bl	800075c <Display_TransmitCmd>
	HAL_Delay(250);
 80006ea:	20fa      	movs	r0, #250	; 0xfa
 80006ec:	f001 ff9e 	bl	800262c <HAL_Delay>

	/* Exit sleep mode */
	Display_TransmitCmd(DISPLAY_SLEEPOUT);
 80006f0:	2011      	movs	r0, #17
 80006f2:	f000 f833 	bl	800075c <Display_TransmitCmd>
	HAL_Delay(100);
 80006f6:	2064      	movs	r0, #100	; 0x64
 80006f8:	f001 ff98 	bl	800262c <HAL_Delay>

	/* 4-line serial interface mode control */
	Display_TransmitCmdParam(DISPLAY_INTMCTRL, 0x00);
 80006fc:	2100      	movs	r1, #0
 80006fe:	20b0      	movs	r0, #176	; 0xb0
 8000700:	f000 f878 	bl	80007f4 <Display_TransmitCmdParam>

	/* 3-bit RGB interface pixel format */
	Display_TransmitCmdParam(DISPLAY_INTPXLFMT, 0x01);
 8000704:	2101      	movs	r1, #1
 8000706:	203a      	movs	r0, #58	; 0x3a
 8000708:	f000 f874 	bl	80007f4 <Display_TransmitCmdParam>

	/* Memory access control sets scanning direction of frame memory */
	// was 0x08
	Display_TransmitCmdParam(DISPLAY_MEMACTRL, 0x08);
 800070c:	2108      	movs	r1, #8
 800070e:	2036      	movs	r0, #54	; 0x36
 8000710:	f000 f870 	bl	80007f4 <Display_TransmitCmdParam>

	/* TODO modify positive, negative, and digital gamma settings */

	/* Exit sleep mode */
	Display_TransmitCmd(DISPLAY_SLEEPOUT);
 8000714:	2011      	movs	r0, #17
 8000716:	f000 f821 	bl	800075c <Display_TransmitCmd>
	HAL_Delay(250);
 800071a:	20fa      	movs	r0, #250	; 0xfa
 800071c:	f001 ff86 	bl	800262c <HAL_Delay>

	/* Turn display on */
	Display_TransmitCmd(DISPLAY_DISPON);
 8000720:	2029      	movs	r0, #41	; 0x29
 8000722:	f000 f81b 	bl	800075c <Display_TransmitCmd>
}
 8000726:	bf00      	nop
 8000728:	bd80      	pop	{r7, pc}
	...

0800072c <Display_HWReset>:

void Display_HWReset(void)
{
 800072c:	b580      	push	{r7, lr}
 800072e:	af00      	add	r7, sp, #0
	/* Hold RESET pin LOW with delay */
	HAL_GPIO_WritePin(DISP_RESET_GPIO_Port, DISP_RESET_Pin, GPIO_PIN_RESET);
 8000730:	2200      	movs	r2, #0
 8000732:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000736:	4808      	ldr	r0, [pc, #32]	; (8000758 <Display_HWReset+0x2c>)
 8000738:	f003 f990 	bl	8003a5c <HAL_GPIO_WritePin>
	HAL_Delay(DISPLAY_RESET_TIME_MS);
 800073c:	200a      	movs	r0, #10
 800073e:	f001 ff75 	bl	800262c <HAL_Delay>

	/* Set RESET pin HIGH and wait for system reset to complete */
	HAL_GPIO_WritePin(DISP_RESET_GPIO_Port, DISP_RESET_Pin, GPIO_PIN_SET);
 8000742:	2201      	movs	r2, #1
 8000744:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000748:	4803      	ldr	r0, [pc, #12]	; (8000758 <Display_HWReset+0x2c>)
 800074a:	f003 f987 	bl	8003a5c <HAL_GPIO_WritePin>
	HAL_Delay(DISPLAY_RESET_TIME_MS);
 800074e:	200a      	movs	r0, #10
 8000750:	f001 ff6c 	bl	800262c <HAL_Delay>
}
 8000754:	bf00      	nop
 8000756:	bd80      	pop	{r7, pc}
 8000758:	40020400 	.word	0x40020400

0800075c <Display_TransmitCmd>:

void Display_TransmitCmd(uint8_t cmd)
{
 800075c:	b580      	push	{r7, lr}
 800075e:	b082      	sub	sp, #8
 8000760:	af00      	add	r7, sp, #0
 8000762:	4603      	mov	r3, r0
 8000764:	71fb      	strb	r3, [r7, #7]
	/* DC/RS LOW since writing command */
	HAL_GPIO_WritePin(DISP_DCRS_GPIO_Port, DISP_DCRS_Pin, GPIO_PIN_RESET);
 8000766:	2200      	movs	r2, #0
 8000768:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800076c:	480c      	ldr	r0, [pc, #48]	; (80007a0 <Display_TransmitCmd+0x44>)
 800076e:	f003 f975 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Set CS LOW */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_RESET);
 8000772:	2200      	movs	r2, #0
 8000774:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000778:	4809      	ldr	r0, [pc, #36]	; (80007a0 <Display_TransmitCmd+0x44>)
 800077a:	f003 f96f 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Write SPI data */
	HAL_SPI_Transmit(&hspi4, &cmd, sizeof(uint8_t), SPI_TIMEOUT_MS);
 800077e:	1df9      	adds	r1, r7, #7
 8000780:	2364      	movs	r3, #100	; 0x64
 8000782:	2201      	movs	r2, #1
 8000784:	4807      	ldr	r0, [pc, #28]	; (80007a4 <Display_TransmitCmd+0x48>)
 8000786:	f005 fcd6 	bl	8006136 <HAL_SPI_Transmit>

	/* Set CS HIGH */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_SET);
 800078a:	2201      	movs	r2, #1
 800078c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000790:	4803      	ldr	r0, [pc, #12]	; (80007a0 <Display_TransmitCmd+0x44>)
 8000792:	f003 f963 	bl	8003a5c <HAL_GPIO_WritePin>
}
 8000796:	bf00      	nop
 8000798:	3708      	adds	r7, #8
 800079a:	46bd      	mov	sp, r7
 800079c:	bd80      	pop	{r7, pc}
 800079e:	bf00      	nop
 80007a0:	40021000 	.word	0x40021000
 80007a4:	20012db0 	.word	0x20012db0

080007a8 <Display_TransmitParam>:

void Display_TransmitParam(uint8_t param)
{
 80007a8:	b580      	push	{r7, lr}
 80007aa:	b082      	sub	sp, #8
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	4603      	mov	r3, r0
 80007b0:	71fb      	strb	r3, [r7, #7]
	/* DC/RS HIGH since writing data */
	HAL_GPIO_WritePin(DISP_DCRS_GPIO_Port, DISP_DCRS_Pin, GPIO_PIN_SET);
 80007b2:	2201      	movs	r2, #1
 80007b4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80007b8:	480c      	ldr	r0, [pc, #48]	; (80007ec <Display_TransmitParam+0x44>)
 80007ba:	f003 f94f 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Set CS LOW */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_RESET);
 80007be:	2200      	movs	r2, #0
 80007c0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80007c4:	4809      	ldr	r0, [pc, #36]	; (80007ec <Display_TransmitParam+0x44>)
 80007c6:	f003 f949 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Write SPI data */
	HAL_SPI_Transmit(&hspi4, &param, sizeof(uint8_t), SPI_TIMEOUT_MS);
 80007ca:	1df9      	adds	r1, r7, #7
 80007cc:	2364      	movs	r3, #100	; 0x64
 80007ce:	2201      	movs	r2, #1
 80007d0:	4807      	ldr	r0, [pc, #28]	; (80007f0 <Display_TransmitParam+0x48>)
 80007d2:	f005 fcb0 	bl	8006136 <HAL_SPI_Transmit>

	/* Set CS HIGH */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_SET);
 80007d6:	2201      	movs	r2, #1
 80007d8:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80007dc:	4803      	ldr	r0, [pc, #12]	; (80007ec <Display_TransmitParam+0x44>)
 80007de:	f003 f93d 	bl	8003a5c <HAL_GPIO_WritePin>
}
 80007e2:	bf00      	nop
 80007e4:	3708      	adds	r7, #8
 80007e6:	46bd      	mov	sp, r7
 80007e8:	bd80      	pop	{r7, pc}
 80007ea:	bf00      	nop
 80007ec:	40021000 	.word	0x40021000
 80007f0:	20012db0 	.word	0x20012db0

080007f4 <Display_TransmitCmdParam>:

void Display_TransmitCmdParam(uint8_t cmd, uint8_t param)
{
 80007f4:	b580      	push	{r7, lr}
 80007f6:	b082      	sub	sp, #8
 80007f8:	af00      	add	r7, sp, #0
 80007fa:	4603      	mov	r3, r0
 80007fc:	460a      	mov	r2, r1
 80007fe:	71fb      	strb	r3, [r7, #7]
 8000800:	4613      	mov	r3, r2
 8000802:	71bb      	strb	r3, [r7, #6]
	/* Send command */
	Display_TransmitCmd(cmd);
 8000804:	79fb      	ldrb	r3, [r7, #7]
 8000806:	4618      	mov	r0, r3
 8000808:	f7ff ffa8 	bl	800075c <Display_TransmitCmd>

	/* Send parameter */
	Display_TransmitParam(param);
 800080c:	79bb      	ldrb	r3, [r7, #6]
 800080e:	4618      	mov	r0, r3
 8000810:	f7ff ffca 	bl	80007a8 <Display_TransmitParam>
}
 8000814:	bf00      	nop
 8000816:	3708      	adds	r7, #8
 8000818:	46bd      	mov	sp, r7
 800081a:	bd80      	pop	{r7, pc}

0800081c <Display_SetWindow>:

void Display_SetWindow(uint16_t xs, uint16_t ys, uint16_t xe, uint16_t ye)
{
 800081c:	b590      	push	{r4, r7, lr}
 800081e:	b085      	sub	sp, #20
 8000820:	af00      	add	r7, sp, #0
 8000822:	4604      	mov	r4, r0
 8000824:	4608      	mov	r0, r1
 8000826:	4611      	mov	r1, r2
 8000828:	461a      	mov	r2, r3
 800082a:	4623      	mov	r3, r4
 800082c:	80fb      	strh	r3, [r7, #6]
 800082e:	4603      	mov	r3, r0
 8000830:	80bb      	strh	r3, [r7, #4]
 8000832:	460b      	mov	r3, r1
 8000834:	807b      	strh	r3, [r7, #2]
 8000836:	4613      	mov	r3, r2
 8000838:	803b      	strh	r3, [r7, #0]
	/* Check coordinate are not out of range */
	if ((xs > xe) || (xe > DISPLAY_MAX_X) || (ys > ye) || (ye > DISPLAY_MAX_Y)) {
 800083a:	88fa      	ldrh	r2, [r7, #6]
 800083c:	887b      	ldrh	r3, [r7, #2]
 800083e:	429a      	cmp	r2, r3
 8000840:	f200 8092 	bhi.w	8000968 <Display_SetWindow+0x14c>
 8000844:	887b      	ldrh	r3, [r7, #2]
 8000846:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 800084a:	f080 808d 	bcs.w	8000968 <Display_SetWindow+0x14c>
 800084e:	88ba      	ldrh	r2, [r7, #4]
 8000850:	883b      	ldrh	r3, [r7, #0]
 8000852:	429a      	cmp	r2, r3
 8000854:	f200 8088 	bhi.w	8000968 <Display_SetWindow+0x14c>
 8000858:	883b      	ldrh	r3, [r7, #0]
 800085a:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 800085e:	f080 8083 	bcs.w	8000968 <Display_SetWindow+0x14c>
		/* Error so do nothing */
		return;
	}

	/* Set column range */
	Display_TransmitCmd(DISPLAY_COLADDRSET);
 8000862:	202a      	movs	r0, #42	; 0x2a
 8000864:	f7ff ff7a 	bl	800075c <Display_TransmitCmd>

	/* Set DC/RS LOW since transmitting date */
	HAL_GPIO_WritePin(DISP_DCRS_GPIO_Port, DISP_DCRS_Pin, GPIO_PIN_SET);
 8000868:	2201      	movs	r2, #1
 800086a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800086e:	4840      	ldr	r0, [pc, #256]	; (8000970 <Display_SetWindow+0x154>)
 8000870:	f003 f8f4 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Hold CS LOW until all parameters have been sent */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_RESET);
 8000874:	2200      	movs	r2, #0
 8000876:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800087a:	483d      	ldr	r0, [pc, #244]	; (8000970 <Display_SetWindow+0x154>)
 800087c:	f003 f8ee 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Write column start and end data */
	uint8_t byte = ys >> 8;	// SC[15:8]
 8000880:	88bb      	ldrh	r3, [r7, #4]
 8000882:	0a1b      	lsrs	r3, r3, #8
 8000884:	b29b      	uxth	r3, r3
 8000886:	b2db      	uxtb	r3, r3
 8000888:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Transmit(&hspi4, &byte, sizeof(uint8_t), SPI_TIMEOUT_MS);
 800088a:	f107 010f 	add.w	r1, r7, #15
 800088e:	2364      	movs	r3, #100	; 0x64
 8000890:	2201      	movs	r2, #1
 8000892:	4838      	ldr	r0, [pc, #224]	; (8000974 <Display_SetWindow+0x158>)
 8000894:	f005 fc4f 	bl	8006136 <HAL_SPI_Transmit>
	byte = ys & 0xFF;		// SC[7:0]
 8000898:	88bb      	ldrh	r3, [r7, #4]
 800089a:	b2db      	uxtb	r3, r3
 800089c:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Transmit(&hspi4, &byte, sizeof(uint8_t), SPI_TIMEOUT_MS);
 800089e:	f107 010f 	add.w	r1, r7, #15
 80008a2:	2364      	movs	r3, #100	; 0x64
 80008a4:	2201      	movs	r2, #1
 80008a6:	4833      	ldr	r0, [pc, #204]	; (8000974 <Display_SetWindow+0x158>)
 80008a8:	f005 fc45 	bl	8006136 <HAL_SPI_Transmit>
	byte = ye >> 8;			// EC[15:8]
 80008ac:	883b      	ldrh	r3, [r7, #0]
 80008ae:	0a1b      	lsrs	r3, r3, #8
 80008b0:	b29b      	uxth	r3, r3
 80008b2:	b2db      	uxtb	r3, r3
 80008b4:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Transmit(&hspi4, &byte, sizeof(uint8_t), SPI_TIMEOUT_MS);
 80008b6:	f107 010f 	add.w	r1, r7, #15
 80008ba:	2364      	movs	r3, #100	; 0x64
 80008bc:	2201      	movs	r2, #1
 80008be:	482d      	ldr	r0, [pc, #180]	; (8000974 <Display_SetWindow+0x158>)
 80008c0:	f005 fc39 	bl	8006136 <HAL_SPI_Transmit>
	byte = ye & 0xFF;		// EC[7:0]
 80008c4:	883b      	ldrh	r3, [r7, #0]
 80008c6:	b2db      	uxtb	r3, r3
 80008c8:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Transmit(&hspi4, &byte, sizeof(uint8_t), SPI_TIMEOUT_MS);
 80008ca:	f107 010f 	add.w	r1, r7, #15
 80008ce:	2364      	movs	r3, #100	; 0x64
 80008d0:	2201      	movs	r2, #1
 80008d2:	4828      	ldr	r0, [pc, #160]	; (8000974 <Display_SetWindow+0x158>)
 80008d4:	f005 fc2f 	bl	8006136 <HAL_SPI_Transmit>

	/* Last parameter sent so end transaction */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_SET);
 80008d8:	2201      	movs	r2, #1
 80008da:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80008de:	4824      	ldr	r0, [pc, #144]	; (8000970 <Display_SetWindow+0x154>)
 80008e0:	f003 f8bc 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Set page range */
	Display_TransmitCmd(DISPLAY_PGADDRSET);
 80008e4:	202b      	movs	r0, #43	; 0x2b
 80008e6:	f7ff ff39 	bl	800075c <Display_TransmitCmd>

	/* Set DC/RS LOW since transmitting date */
	HAL_GPIO_WritePin(DISP_DCRS_GPIO_Port, DISP_DCRS_Pin, GPIO_PIN_SET);
 80008ea:	2201      	movs	r2, #1
 80008ec:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80008f0:	481f      	ldr	r0, [pc, #124]	; (8000970 <Display_SetWindow+0x154>)
 80008f2:	f003 f8b3 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Begin multi-parameter transaction */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_RESET);
 80008f6:	2200      	movs	r2, #0
 80008f8:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80008fc:	481c      	ldr	r0, [pc, #112]	; (8000970 <Display_SetWindow+0x154>)
 80008fe:	f003 f8ad 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Write page start and end data */
	byte = xs >> 8;		// SP[15:8]
 8000902:	88fb      	ldrh	r3, [r7, #6]
 8000904:	0a1b      	lsrs	r3, r3, #8
 8000906:	b29b      	uxth	r3, r3
 8000908:	b2db      	uxtb	r3, r3
 800090a:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Transmit(&hspi4, &byte, sizeof(uint8_t), SPI_TIMEOUT_MS);
 800090c:	f107 010f 	add.w	r1, r7, #15
 8000910:	2364      	movs	r3, #100	; 0x64
 8000912:	2201      	movs	r2, #1
 8000914:	4817      	ldr	r0, [pc, #92]	; (8000974 <Display_SetWindow+0x158>)
 8000916:	f005 fc0e 	bl	8006136 <HAL_SPI_Transmit>
	byte = xs & 0xFF;	// SP[7:0]
 800091a:	88fb      	ldrh	r3, [r7, #6]
 800091c:	b2db      	uxtb	r3, r3
 800091e:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Transmit(&hspi4, &byte, sizeof(uint8_t), SPI_TIMEOUT_MS);
 8000920:	f107 010f 	add.w	r1, r7, #15
 8000924:	2364      	movs	r3, #100	; 0x64
 8000926:	2201      	movs	r2, #1
 8000928:	4812      	ldr	r0, [pc, #72]	; (8000974 <Display_SetWindow+0x158>)
 800092a:	f005 fc04 	bl	8006136 <HAL_SPI_Transmit>
	byte = xe >> 8;		// EP[15:8]
 800092e:	887b      	ldrh	r3, [r7, #2]
 8000930:	0a1b      	lsrs	r3, r3, #8
 8000932:	b29b      	uxth	r3, r3
 8000934:	b2db      	uxtb	r3, r3
 8000936:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Transmit(&hspi4, &byte, sizeof(uint8_t), SPI_TIMEOUT_MS);
 8000938:	f107 010f 	add.w	r1, r7, #15
 800093c:	2364      	movs	r3, #100	; 0x64
 800093e:	2201      	movs	r2, #1
 8000940:	480c      	ldr	r0, [pc, #48]	; (8000974 <Display_SetWindow+0x158>)
 8000942:	f005 fbf8 	bl	8006136 <HAL_SPI_Transmit>
	byte = xe & 0xFF;	// EP[7:0]
 8000946:	887b      	ldrh	r3, [r7, #2]
 8000948:	b2db      	uxtb	r3, r3
 800094a:	73fb      	strb	r3, [r7, #15]
	HAL_SPI_Transmit(&hspi4, &byte, sizeof(uint8_t), SPI_TIMEOUT_MS);
 800094c:	f107 010f 	add.w	r1, r7, #15
 8000950:	2364      	movs	r3, #100	; 0x64
 8000952:	2201      	movs	r2, #1
 8000954:	4807      	ldr	r0, [pc, #28]	; (8000974 <Display_SetWindow+0x158>)
 8000956:	f005 fbee 	bl	8006136 <HAL_SPI_Transmit>

	/* Last parameter sent so end transaction */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_SET);
 800095a:	2201      	movs	r2, #1
 800095c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000960:	4803      	ldr	r0, [pc, #12]	; (8000970 <Display_SetWindow+0x154>)
 8000962:	f003 f87b 	bl	8003a5c <HAL_GPIO_WritePin>
 8000966:	e000      	b.n	800096a <Display_SetWindow+0x14e>
		return;
 8000968:	bf00      	nop
}
 800096a:	3714      	adds	r7, #20
 800096c:	46bd      	mov	sp, r7
 800096e:	bd90      	pop	{r4, r7, pc}
 8000970:	40021000 	.word	0x40021000
 8000974:	20012db0 	.word	0x20012db0

08000978 <Display_SendColor>:


void Display_SendColor(uint32_t npixels, uint8_t color) {
 8000978:	b580      	push	{r7, lr}
 800097a:	b084      	sub	sp, #16
 800097c:	af00      	add	r7, sp, #0
 800097e:	6078      	str	r0, [r7, #4]
 8000980:	460b      	mov	r3, r1
 8000982:	70fb      	strb	r3, [r7, #3]
	/* Set up writing to frame buffer */
	Display_TransmitCmd(DISPLAY_MEMWR);
 8000984:	202c      	movs	r0, #44	; 0x2c
 8000986:	f7ff fee9 	bl	800075c <Display_TransmitCmd>

	/* Set up sending data to display */
	HAL_GPIO_WritePin(DISP_DCRS_GPIO_Port, DISP_DCRS_Pin, GPIO_PIN_SET);
 800098a:	2201      	movs	r2, #1
 800098c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000990:	4815      	ldr	r0, [pc, #84]	; (80009e8 <Display_SendColor+0x70>)
 8000992:	f003 f863 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Set CS LOW to begin transaction */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_RESET);
 8000996:	2200      	movs	r2, #0
 8000998:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800099c:	4812      	ldr	r0, [pc, #72]	; (80009e8 <Display_SendColor+0x70>)
 800099e:	f003 f85d 	bl	8003a5c <HAL_GPIO_WritePin>

	/* If odd number of pixels pad a data byte to fill byte */
	if (npixels % 2 != 0) {
 80009a2:	687b      	ldr	r3, [r7, #4]
 80009a4:	f003 0301 	and.w	r3, r3, #1
 80009a8:	2b00      	cmp	r3, #0
 80009aa:	d002      	beq.n	80009b2 <Display_SendColor+0x3a>
		npixels++;
 80009ac:	687b      	ldr	r3, [r7, #4]
 80009ae:	3301      	adds	r3, #1
 80009b0:	607b      	str	r3, [r7, #4]
	}

	/* 2 pixel data stored per byte, so divide npixels by 2 */
	for (uint32_t i = 0; i < npixels / 2; i++) {
 80009b2:	2300      	movs	r3, #0
 80009b4:	60fb      	str	r3, [r7, #12]
 80009b6:	e008      	b.n	80009ca <Display_SendColor+0x52>
		HAL_SPI_Transmit(&hspi4, &color, sizeof(uint8_t), SPI_TIMEOUT_MS);
 80009b8:	1cf9      	adds	r1, r7, #3
 80009ba:	2364      	movs	r3, #100	; 0x64
 80009bc:	2201      	movs	r2, #1
 80009be:	480b      	ldr	r0, [pc, #44]	; (80009ec <Display_SendColor+0x74>)
 80009c0:	f005 fbb9 	bl	8006136 <HAL_SPI_Transmit>
	for (uint32_t i = 0; i < npixels / 2; i++) {
 80009c4:	68fb      	ldr	r3, [r7, #12]
 80009c6:	3301      	adds	r3, #1
 80009c8:	60fb      	str	r3, [r7, #12]
 80009ca:	687b      	ldr	r3, [r7, #4]
 80009cc:	085b      	lsrs	r3, r3, #1
 80009ce:	68fa      	ldr	r2, [r7, #12]
 80009d0:	429a      	cmp	r2, r3
 80009d2:	d3f1      	bcc.n	80009b8 <Display_SendColor+0x40>
	}

	/* Set CS HIGH to end transaction */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_SET);
 80009d4:	2201      	movs	r2, #1
 80009d6:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80009da:	4803      	ldr	r0, [pc, #12]	; (80009e8 <Display_SendColor+0x70>)
 80009dc:	f003 f83e 	bl	8003a5c <HAL_GPIO_WritePin>
}
 80009e0:	bf00      	nop
 80009e2:	3710      	adds	r7, #16
 80009e4:	46bd      	mov	sp, r7
 80009e6:	bd80      	pop	{r7, pc}
 80009e8:	40021000 	.word	0x40021000
 80009ec:	20012db0 	.word	0x20012db0

080009f0 <Display_SendData>:

void Display_SendData(uint32_t data_len, uint8_t *data) {
 80009f0:	b580      	push	{r7, lr}
 80009f2:	b084      	sub	sp, #16
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	6078      	str	r0, [r7, #4]
 80009f8:	6039      	str	r1, [r7, #0]

	/* Set up writing to frame buffer */
	Display_TransmitCmd(DISPLAY_MEMWR);
 80009fa:	202c      	movs	r0, #44	; 0x2c
 80009fc:	f7ff feae 	bl	800075c <Display_TransmitCmd>

	/* Set up sending data to display */
	HAL_GPIO_WritePin(DISP_DCRS_GPIO_Port, DISP_DCRS_Pin, GPIO_PIN_SET);
 8000a00:	2201      	movs	r2, #1
 8000a02:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000a06:	4812      	ldr	r0, [pc, #72]	; (8000a50 <Display_SendData+0x60>)
 8000a08:	f003 f828 	bl	8003a5c <HAL_GPIO_WritePin>

	/* Set CS LOW to begin transaction */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_RESET);
 8000a0c:	2200      	movs	r2, #0
 8000a0e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000a12:	480f      	ldr	r0, [pc, #60]	; (8000a50 <Display_SendData+0x60>)
 8000a14:	f003 f822 	bl	8003a5c <HAL_GPIO_WritePin>

	for (uint32_t i = 0; i < data_len; i++) {
 8000a18:	2300      	movs	r3, #0
 8000a1a:	60fb      	str	r3, [r7, #12]
 8000a1c:	e00a      	b.n	8000a34 <Display_SendData+0x44>
		HAL_SPI_Transmit(&hspi4, &(data[i]), sizeof(uint8_t), SPI_TIMEOUT_MS);
 8000a1e:	683a      	ldr	r2, [r7, #0]
 8000a20:	68fb      	ldr	r3, [r7, #12]
 8000a22:	18d1      	adds	r1, r2, r3
 8000a24:	2364      	movs	r3, #100	; 0x64
 8000a26:	2201      	movs	r2, #1
 8000a28:	480a      	ldr	r0, [pc, #40]	; (8000a54 <Display_SendData+0x64>)
 8000a2a:	f005 fb84 	bl	8006136 <HAL_SPI_Transmit>
	for (uint32_t i = 0; i < data_len; i++) {
 8000a2e:	68fb      	ldr	r3, [r7, #12]
 8000a30:	3301      	adds	r3, #1
 8000a32:	60fb      	str	r3, [r7, #12]
 8000a34:	68fa      	ldr	r2, [r7, #12]
 8000a36:	687b      	ldr	r3, [r7, #4]
 8000a38:	429a      	cmp	r2, r3
 8000a3a:	d3f0      	bcc.n	8000a1e <Display_SendData+0x2e>
	}

	/* Set CS HIGH to end transaction */
	HAL_GPIO_WritePin(DISP_CS_GPIO_Port, DISP_CS_Pin, GPIO_PIN_SET);
 8000a3c:	2201      	movs	r2, #1
 8000a3e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000a42:	4803      	ldr	r0, [pc, #12]	; (8000a50 <Display_SendData+0x60>)
 8000a44:	f003 f80a 	bl	8003a5c <HAL_GPIO_WritePin>
}
 8000a48:	bf00      	nop
 8000a4a:	3710      	adds	r7, #16
 8000a4c:	46bd      	mov	sp, r7
 8000a4e:	bd80      	pop	{r7, pc}
 8000a50:	40021000 	.word	0x40021000
 8000a54:	20012db0 	.word	0x20012db0

08000a58 <Encoder_ReadBinary>:
} encoder_t;

static encoder_t enc1;
static encoder_t *encoder_list[ENC_CNT] = {&enc1};

static int8_t Encoder_ReadBinary(encoder_t *enc) {
 8000a58:	b580      	push	{r7, lr}
 8000a5a:	b084      	sub	sp, #16
 8000a5c:	af00      	add	r7, sp, #0
 8000a5e:	6078      	str	r0, [r7, #4]
	/* Get gray code */
	GPIO_PinState pinA = HAL_GPIO_ReadPin(enc->port, enc->pinA);
 8000a60:	687b      	ldr	r3, [r7, #4]
 8000a62:	685a      	ldr	r2, [r3, #4]
 8000a64:	687b      	ldr	r3, [r7, #4]
 8000a66:	689b      	ldr	r3, [r3, #8]
 8000a68:	b29b      	uxth	r3, r3
 8000a6a:	4619      	mov	r1, r3
 8000a6c:	4610      	mov	r0, r2
 8000a6e:	f002 ffdd 	bl	8003a2c <HAL_GPIO_ReadPin>
 8000a72:	4603      	mov	r3, r0
 8000a74:	73fb      	strb	r3, [r7, #15]
	GPIO_PinState pinB = HAL_GPIO_ReadPin(enc->port, enc->pinB);
 8000a76:	687b      	ldr	r3, [r7, #4]
 8000a78:	685a      	ldr	r2, [r3, #4]
 8000a7a:	687b      	ldr	r3, [r7, #4]
 8000a7c:	68db      	ldr	r3, [r3, #12]
 8000a7e:	b29b      	uxth	r3, r3
 8000a80:	4619      	mov	r1, r3
 8000a82:	4610      	mov	r0, r2
 8000a84:	f002 ffd2 	bl	8003a2c <HAL_GPIO_ReadPin>
 8000a88:	4603      	mov	r3, r0
 8000a8a:	73bb      	strb	r3, [r7, #14]

	/* Convert gray code to binary */
	int8_t binary = 0;
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	737b      	strb	r3, [r7, #13]
	binary |= (pinA << 1);
 8000a90:	7bfb      	ldrb	r3, [r7, #15]
 8000a92:	005b      	lsls	r3, r3, #1
 8000a94:	b25a      	sxtb	r2, r3
 8000a96:	7b7b      	ldrb	r3, [r7, #13]
 8000a98:	4313      	orrs	r3, r2
 8000a9a:	737b      	strb	r3, [r7, #13]
	binary |= (pinB << 0);
 8000a9c:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8000aa0:	7b7b      	ldrb	r3, [r7, #13]
 8000aa2:	4313      	orrs	r3, r2
 8000aa4:	737b      	strb	r3, [r7, #13]
	return binary;
 8000aa6:	f997 300d 	ldrsb.w	r3, [r7, #13]
}
 8000aaa:	4618      	mov	r0, r3
 8000aac:	3710      	adds	r7, #16
 8000aae:	46bd      	mov	sp, r7
 8000ab0:	bd80      	pop	{r7, pc}
	...

08000ab4 <Encoder_Init>:

void Encoder_Init(void) {
 8000ab4:	b590      	push	{r4, r7, lr}
 8000ab6:	b085      	sub	sp, #20
 8000ab8:	af00      	add	r7, sp, #0
	enc1 = (encoder_t) {.id = ENC_ID_1, .last_code = 0, .port = ROT_ENC_A_GPIO_Port,
 8000aba:	4a08      	ldr	r2, [pc, #32]	; (8000adc <Encoder_Init+0x28>)
 8000abc:	4b08      	ldr	r3, [pc, #32]	; (8000ae0 <Encoder_Init+0x2c>)
 8000abe:	4614      	mov	r4, r2
 8000ac0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000ac2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						.pinA = ROT_ENC_A_Pin, .pinB = ROT_ENC_B_Pin};
	enc1.last_code = Encoder_ReadBinary(&enc1);
 8000ac6:	4805      	ldr	r0, [pc, #20]	; (8000adc <Encoder_Init+0x28>)
 8000ac8:	f7ff ffc6 	bl	8000a58 <Encoder_ReadBinary>
 8000acc:	4603      	mov	r3, r0
 8000ace:	b2da      	uxtb	r2, r3
 8000ad0:	4b02      	ldr	r3, [pc, #8]	; (8000adc <Encoder_Init+0x28>)
 8000ad2:	705a      	strb	r2, [r3, #1]
}
 8000ad4:	bf00      	nop
 8000ad6:	3714      	adds	r7, #20
 8000ad8:	46bd      	mov	sp, r7
 8000ada:	bd90      	pop	{r4, r7, pc}
 8000adc:	20012cd8 	.word	0x20012cd8
 8000ae0:	08007ba0 	.word	0x08007ba0

08000ae4 <Encoder_CWHandler>:

/**
 * @brief Callback function when encoder turned clockwise
 * @param id (encoder_id_t) - id of encoder rotated
 */
static void Encoder_CWHandler(encoder_id_t id) {
 8000ae4:	b480      	push	{r7}
 8000ae6:	b083      	sub	sp, #12
 8000ae8:	af00      	add	r7, sp, #0
 8000aea:	4603      	mov	r3, r0
 8000aec:	71fb      	strb	r3, [r7, #7]
	switch (id) {
 8000aee:	79fb      	ldrb	r3, [r7, #7]
 8000af0:	2b00      	cmp	r3, #0
		case ENC_ID_1:
			break;
		default:
			break;
 8000af2:	bf00      	nop
	}
}
 8000af4:	bf00      	nop
 8000af6:	370c      	adds	r7, #12
 8000af8:	46bd      	mov	sp, r7
 8000afa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000afe:	4770      	bx	lr

08000b00 <Encoder_CCWHandler>:

/**
 * @brief Callback function when encoder turned counter-clockwise
 * @param id (encoder_id_t) - id of encoder rotated
 */
static void Encoder_CCWHandler(encoder_id_t id) {
 8000b00:	b480      	push	{r7}
 8000b02:	b083      	sub	sp, #12
 8000b04:	af00      	add	r7, sp, #0
 8000b06:	4603      	mov	r3, r0
 8000b08:	71fb      	strb	r3, [r7, #7]
	switch (id) {
 8000b0a:	79fb      	ldrb	r3, [r7, #7]
 8000b0c:	2b00      	cmp	r3, #0
		case ENC_ID_1:
			break;
		default:
			break;
 8000b0e:	bf00      	nop
	}
}
 8000b10:	bf00      	nop
 8000b12:	370c      	adds	r7, #12
 8000b14:	46bd      	mov	sp, r7
 8000b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b1a:	4770      	bx	lr

08000b1c <Encoder_Debounce>:

void Encoder_Debounce(void) {
 8000b1c:	b580      	push	{r7, lr}
 8000b1e:	b084      	sub	sp, #16
 8000b20:	af00      	add	r7, sp, #0
	/* Iterate through all encoders */
	for (uint8_t i = 0; i < ENC_CNT; i++) {
 8000b22:	2300      	movs	r3, #0
 8000b24:	73fb      	strb	r3, [r7, #15]
 8000b26:	e02b      	b.n	8000b80 <Encoder_Debounce+0x64>
		encoder_t *enc = encoder_list[i];
 8000b28:	7bfb      	ldrb	r3, [r7, #15]
 8000b2a:	4a19      	ldr	r2, [pc, #100]	; (8000b90 <Encoder_Debounce+0x74>)
 8000b2c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000b30:	60bb      	str	r3, [r7, #8]

		// Get binary reading of encoder
		int8_t binary = Encoder_ReadBinary(enc);
 8000b32:	68b8      	ldr	r0, [r7, #8]
 8000b34:	f7ff ff90 	bl	8000a58 <Encoder_ReadBinary>
 8000b38:	4603      	mov	r3, r0
 8000b3a:	71fb      	strb	r3, [r7, #7]

		/* Check if encoder state has changed */
		if (binary != enc->last_code) {
 8000b3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000b40:	68ba      	ldr	r2, [r7, #8]
 8000b42:	7852      	ldrb	r2, [r2, #1]
 8000b44:	4293      	cmp	r3, r2
 8000b46:	d015      	beq.n	8000b74 <Encoder_Debounce+0x58>
			uint8_t diff = enc->last_code - binary;
 8000b48:	68bb      	ldr	r3, [r7, #8]
 8000b4a:	785a      	ldrb	r2, [r3, #1]
 8000b4c:	79fb      	ldrb	r3, [r7, #7]
 8000b4e:	1ad3      	subs	r3, r2, r3
 8000b50:	71bb      	strb	r3, [r7, #6]
			if (diff == -1 || diff == 3) {
 8000b52:	79bb      	ldrb	r3, [r7, #6]
 8000b54:	2b03      	cmp	r3, #3
 8000b56:	d105      	bne.n	8000b64 <Encoder_Debounce+0x48>
				Encoder_CWHandler(enc->id);
 8000b58:	68bb      	ldr	r3, [r7, #8]
 8000b5a:	781b      	ldrb	r3, [r3, #0]
 8000b5c:	4618      	mov	r0, r3
 8000b5e:	f7ff ffc1 	bl	8000ae4 <Encoder_CWHandler>
 8000b62:	e007      	b.n	8000b74 <Encoder_Debounce+0x58>
			} else if (diff == 1 || diff == -3) {
 8000b64:	79bb      	ldrb	r3, [r7, #6]
 8000b66:	2b01      	cmp	r3, #1
 8000b68:	d104      	bne.n	8000b74 <Encoder_Debounce+0x58>
				Encoder_CCWHandler(enc->id);
 8000b6a:	68bb      	ldr	r3, [r7, #8]
 8000b6c:	781b      	ldrb	r3, [r3, #0]
 8000b6e:	4618      	mov	r0, r3
 8000b70:	f7ff ffc6 	bl	8000b00 <Encoder_CCWHandler>
			}
		}

		/* Update state */
		enc->last_code = binary;
 8000b74:	79fa      	ldrb	r2, [r7, #7]
 8000b76:	68bb      	ldr	r3, [r7, #8]
 8000b78:	705a      	strb	r2, [r3, #1]
	for (uint8_t i = 0; i < ENC_CNT; i++) {
 8000b7a:	7bfb      	ldrb	r3, [r7, #15]
 8000b7c:	3301      	adds	r3, #1
 8000b7e:	73fb      	strb	r3, [r7, #15]
 8000b80:	7bfb      	ldrb	r3, [r7, #15]
 8000b82:	2b00      	cmp	r3, #0
 8000b84:	d0d0      	beq.n	8000b28 <Encoder_Debounce+0xc>
	}
}
 8000b86:	bf00      	nop
 8000b88:	bf00      	nop
 8000b8a:	3710      	adds	r7, #16
 8000b8c:	46bd      	mov	sp, r7
 8000b8e:	bd80      	pop	{r7, pc}
 8000b90:	20000020 	.word	0x20000020

08000b94 <Gfx_Init>:
	0b1110000, // 7
	0b1111111, // 8
	0b1110011  // 9
};

void Gfx_Init(void) {
 8000b94:	b580      	push	{r7, lr}
 8000b96:	af00      	add	r7, sp, #0
	Gfx_SetBackground(COLOR_BLACK);
 8000b98:	2000      	movs	r0, #0
 8000b9a:	f000 f803 	bl	8000ba4 <Gfx_SetBackground>
}
 8000b9e:	bf00      	nop
 8000ba0:	bd80      	pop	{r7, pc}
	...

08000ba4 <Gfx_SetBackground>:

void Gfx_SetBackground(uint8_t color) {
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	b084      	sub	sp, #16
 8000ba8:	af02      	add	r7, sp, #8
 8000baa:	4603      	mov	r3, r0
 8000bac:	71fb      	strb	r3, [r7, #7]
	background_color = color;
 8000bae:	4a08      	ldr	r2, [pc, #32]	; (8000bd0 <Gfx_SetBackground+0x2c>)
 8000bb0:	79fb      	ldrb	r3, [r7, #7]
 8000bb2:	7013      	strb	r3, [r2, #0]
	Gfx_DrawFilledRect(0, 0, DISPLAY_SIZE_X, DISPLAY_SIZE_Y, color);
 8000bb4:	79fb      	ldrb	r3, [r7, #7]
 8000bb6:	9300      	str	r3, [sp, #0]
 8000bb8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000bbc:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8000bc0:	2100      	movs	r1, #0
 8000bc2:	2000      	movs	r0, #0
 8000bc4:	f000 f806 	bl	8000bd4 <Gfx_DrawFilledRect>
}
 8000bc8:	bf00      	nop
 8000bca:	3708      	adds	r7, #8
 8000bcc:	46bd      	mov	sp, r7
 8000bce:	bd80      	pop	{r7, pc}
 8000bd0:	20012ce8 	.word	0x20012ce8

08000bd4 <Gfx_DrawFilledRect>:

void Gfx_DrawFilledRect(uint16_t x, uint16_t y, uint16_t w, uint16_t h, uint8_t color) {
 8000bd4:	b590      	push	{r4, r7, lr}
 8000bd6:	b083      	sub	sp, #12
 8000bd8:	af00      	add	r7, sp, #0
 8000bda:	4604      	mov	r4, r0
 8000bdc:	4608      	mov	r0, r1
 8000bde:	4611      	mov	r1, r2
 8000be0:	461a      	mov	r2, r3
 8000be2:	4623      	mov	r3, r4
 8000be4:	80fb      	strh	r3, [r7, #6]
 8000be6:	4603      	mov	r3, r0
 8000be8:	80bb      	strh	r3, [r7, #4]
 8000bea:	460b      	mov	r3, r1
 8000bec:	807b      	strh	r3, [r7, #2]
 8000bee:	4613      	mov	r3, r2
 8000bf0:	803b      	strh	r3, [r7, #0]
	if (x + w > DISPLAY_SIZE_X || y + h > DISPLAY_SIZE_Y) {
 8000bf2:	88fa      	ldrh	r2, [r7, #6]
 8000bf4:	887b      	ldrh	r3, [r7, #2]
 8000bf6:	4413      	add	r3, r2
 8000bf8:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8000bfc:	dc21      	bgt.n	8000c42 <Gfx_DrawFilledRect+0x6e>
 8000bfe:	88ba      	ldrh	r2, [r7, #4]
 8000c00:	883b      	ldrh	r3, [r7, #0]
 8000c02:	4413      	add	r3, r2
 8000c04:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 8000c08:	dc1b      	bgt.n	8000c42 <Gfx_DrawFilledRect+0x6e>
		/* Do nothing if arguments are invalid */
		return;
	}

	/* Set window of rectangle */
	Display_SetWindow(x, y, x + w - 1, y + h - 1);
 8000c0a:	88fa      	ldrh	r2, [r7, #6]
 8000c0c:	887b      	ldrh	r3, [r7, #2]
 8000c0e:	4413      	add	r3, r2
 8000c10:	b29b      	uxth	r3, r3
 8000c12:	3b01      	subs	r3, #1
 8000c14:	b29c      	uxth	r4, r3
 8000c16:	88ba      	ldrh	r2, [r7, #4]
 8000c18:	883b      	ldrh	r3, [r7, #0]
 8000c1a:	4413      	add	r3, r2
 8000c1c:	b29b      	uxth	r3, r3
 8000c1e:	3b01      	subs	r3, #1
 8000c20:	b29b      	uxth	r3, r3
 8000c22:	88b9      	ldrh	r1, [r7, #4]
 8000c24:	88f8      	ldrh	r0, [r7, #6]
 8000c26:	4622      	mov	r2, r4
 8000c28:	f7ff fdf8 	bl	800081c <Display_SetWindow>

	/* Send pixel data */
	Display_SendColor(w * h, color);
 8000c2c:	887b      	ldrh	r3, [r7, #2]
 8000c2e:	883a      	ldrh	r2, [r7, #0]
 8000c30:	fb02 f303 	mul.w	r3, r2, r3
 8000c34:	461a      	mov	r2, r3
 8000c36:	7e3b      	ldrb	r3, [r7, #24]
 8000c38:	4619      	mov	r1, r3
 8000c3a:	4610      	mov	r0, r2
 8000c3c:	f7ff fe9c 	bl	8000978 <Display_SendColor>
 8000c40:	e000      	b.n	8000c44 <Gfx_DrawFilledRect+0x70>
		return;
 8000c42:	bf00      	nop
}
 8000c44:	370c      	adds	r7, #12
 8000c46:	46bd      	mov	sp, r7
 8000c48:	bd90      	pop	{r4, r7, pc}

08000c4a <Gfx_DrawImage>:
void Gfx_DrawNumber(uint16_t x, uint16_t y, uint8_t number, uint8_t font_height, uint8_t color) {
	Gfx_Draw7SegDigit(x, y, number % 10, font_height, color);
	Gfx_Draw7SegDigit(x + (font_height * 3 / 2), y, number / 10, font_height, color);
}

void Gfx_DrawImage(image_t *img, uint16_t x, uint16_t y) {
 8000c4a:	b590      	push	{r4, r7, lr}
 8000c4c:	b083      	sub	sp, #12
 8000c4e:	af00      	add	r7, sp, #0
 8000c50:	6078      	str	r0, [r7, #4]
 8000c52:	460b      	mov	r3, r1
 8000c54:	807b      	strh	r3, [r7, #2]
 8000c56:	4613      	mov	r3, r2
 8000c58:	803b      	strh	r3, [r7, #0]
	/* Set window to display image */
	Display_SetWindow(x, y, x + img->w -1, y + img->h - 1);
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	889a      	ldrh	r2, [r3, #4]
 8000c5e:	887b      	ldrh	r3, [r7, #2]
 8000c60:	4413      	add	r3, r2
 8000c62:	b29b      	uxth	r3, r3
 8000c64:	3b01      	subs	r3, #1
 8000c66:	b29c      	uxth	r4, r3
 8000c68:	687b      	ldr	r3, [r7, #4]
 8000c6a:	88da      	ldrh	r2, [r3, #6]
 8000c6c:	883b      	ldrh	r3, [r7, #0]
 8000c6e:	4413      	add	r3, r2
 8000c70:	b29b      	uxth	r3, r3
 8000c72:	3b01      	subs	r3, #1
 8000c74:	b29b      	uxth	r3, r3
 8000c76:	8839      	ldrh	r1, [r7, #0]
 8000c78:	8878      	ldrh	r0, [r7, #2]
 8000c7a:	4622      	mov	r2, r4
 8000c7c:	f7ff fdce 	bl	800081c <Display_SetWindow>

	/* Send image data */
	Display_SendData(img->data_len, img->data);
 8000c80:	687b      	ldr	r3, [r7, #4]
 8000c82:	68da      	ldr	r2, [r3, #12]
 8000c84:	687b      	ldr	r3, [r7, #4]
 8000c86:	689b      	ldr	r3, [r3, #8]
 8000c88:	4619      	mov	r1, r3
 8000c8a:	4610      	mov	r0, r2
 8000c8c:	f7ff feb0 	bl	80009f0 <Display_SendData>
}
 8000c90:	bf00      	nop
 8000c92:	370c      	adds	r7, #12
 8000c94:	46bd      	mov	sp, r7
 8000c96:	bd90      	pop	{r4, r7, pc}

08000c98 <Gfx_Draw7SegDigit>:


void Gfx_Draw7SegDigit(uint16_t x, uint16_t y, int8_t digit, uint8_t font_height, uint8_t color) {
 8000c98:	b590      	push	{r4, r7, lr}
 8000c9a:	b087      	sub	sp, #28
 8000c9c:	af02      	add	r7, sp, #8
 8000c9e:	4604      	mov	r4, r0
 8000ca0:	4608      	mov	r0, r1
 8000ca2:	4611      	mov	r1, r2
 8000ca4:	461a      	mov	r2, r3
 8000ca6:	4623      	mov	r3, r4
 8000ca8:	80fb      	strh	r3, [r7, #6]
 8000caa:	4603      	mov	r3, r0
 8000cac:	80bb      	strh	r3, [r7, #4]
 8000cae:	460b      	mov	r3, r1
 8000cb0:	70fb      	strb	r3, [r7, #3]
 8000cb2:	4613      	mov	r3, r2
 8000cb4:	70bb      	strb	r3, [r7, #2]
	/* Digits 0-9 will map directly to display that digit, -1 will delete the digit */
	if (digit != -1 && (digit < 0 || digit > 9)) {
 8000cb6:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000cba:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000cbe:	d009      	beq.n	8000cd4 <Gfx_Draw7SegDigit+0x3c>
 8000cc0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	f2c0 810a 	blt.w	8000ede <Gfx_Draw7SegDigit+0x246>
 8000cca:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000cce:	2b09      	cmp	r3, #9
 8000cd0:	f300 8105 	bgt.w	8000ede <Gfx_Draw7SegDigit+0x246>
		// Do nothing if digit is not a valid value
		return;
	}

	/* Thickness of each segment */
	uint8_t thickness = font_height / 10;
 8000cd4:	78bb      	ldrb	r3, [r7, #2]
 8000cd6:	4a84      	ldr	r2, [pc, #528]	; (8000ee8 <Gfx_Draw7SegDigit+0x250>)
 8000cd8:	fba2 2303 	umull	r2, r3, r2, r3
 8000cdc:	08db      	lsrs	r3, r3, #3
 8000cde:	73fb      	strb	r3, [r7, #15]

	/* Length of each segment */
	uint8_t seg_len = (font_height - (thickness * 2)) / 2;
 8000ce0:	78ba      	ldrb	r2, [r7, #2]
 8000ce2:	7bfb      	ldrb	r3, [r7, #15]
 8000ce4:	005b      	lsls	r3, r3, #1
 8000ce6:	1ad3      	subs	r3, r2, r3
 8000ce8:	0fda      	lsrs	r2, r3, #31
 8000cea:	4413      	add	r3, r2
 8000cec:	105b      	asrs	r3, r3, #1
 8000cee:	73bb      	strb	r3, [r7, #14]

	/* For small fonts make the segments slightly thicker */
	if (font_height < 40) {
 8000cf0:	78bb      	ldrb	r3, [r7, #2]
 8000cf2:	2b27      	cmp	r3, #39	; 0x27
 8000cf4:	d802      	bhi.n	8000cfc <Gfx_Draw7SegDigit+0x64>
		thickness += 2;
 8000cf6:	7bfb      	ldrb	r3, [r7, #15]
 8000cf8:	3302      	adds	r3, #2
 8000cfa:	73fb      	strb	r3, [r7, #15]
	}

	/* Get ABCDEFG pattern for digit (or zero if digit == -1)*/
	uint8_t pattern = (digit == -1) ? 0 : digit_patterns[digit];
 8000cfc:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000d00:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000d04:	d004      	beq.n	8000d10 <Gfx_Draw7SegDigit+0x78>
 8000d06:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8000d0a:	4a78      	ldr	r2, [pc, #480]	; (8000eec <Gfx_Draw7SegDigit+0x254>)
 8000d0c:	5cd3      	ldrb	r3, [r2, r3]
 8000d0e:	e000      	b.n	8000d12 <Gfx_Draw7SegDigit+0x7a>
 8000d10:	2300      	movs	r3, #0
 8000d12:	737b      	strb	r3, [r7, #13]
	/* Active segments are set to color */
	/* Inactive segments are set to background color */
	uint8_t new_color;

	// Segment A
	new_color = ((pattern & SEG_A_MASK) ? color : background_color);
 8000d14:	7b7b      	ldrb	r3, [r7, #13]
 8000d16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000d1a:	2b00      	cmp	r3, #0
 8000d1c:	d002      	beq.n	8000d24 <Gfx_Draw7SegDigit+0x8c>
 8000d1e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000d22:	e001      	b.n	8000d28 <Gfx_Draw7SegDigit+0x90>
 8000d24:	4b72      	ldr	r3, [pc, #456]	; (8000ef0 <Gfx_Draw7SegDigit+0x258>)
 8000d26:	781b      	ldrb	r3, [r3, #0]
 8000d28:	733b      	strb	r3, [r7, #12]
	Gfx_DrawFilledRect(x+thickness, y, seg_len, thickness, new_color);
 8000d2a:	7bfb      	ldrb	r3, [r7, #15]
 8000d2c:	b29a      	uxth	r2, r3
 8000d2e:	88fb      	ldrh	r3, [r7, #6]
 8000d30:	4413      	add	r3, r2
 8000d32:	b298      	uxth	r0, r3
 8000d34:	7bbb      	ldrb	r3, [r7, #14]
 8000d36:	b29a      	uxth	r2, r3
 8000d38:	7bfb      	ldrb	r3, [r7, #15]
 8000d3a:	b29c      	uxth	r4, r3
 8000d3c:	88b9      	ldrh	r1, [r7, #4]
 8000d3e:	7b3b      	ldrb	r3, [r7, #12]
 8000d40:	9300      	str	r3, [sp, #0]
 8000d42:	4623      	mov	r3, r4
 8000d44:	f7ff ff46 	bl	8000bd4 <Gfx_DrawFilledRect>

	// Segment B
	new_color = ((pattern & SEG_B_MASK) ? color : background_color);
 8000d48:	7b7b      	ldrb	r3, [r7, #13]
 8000d4a:	f003 0320 	and.w	r3, r3, #32
 8000d4e:	2b00      	cmp	r3, #0
 8000d50:	d002      	beq.n	8000d58 <Gfx_Draw7SegDigit+0xc0>
 8000d52:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000d56:	e001      	b.n	8000d5c <Gfx_Draw7SegDigit+0xc4>
 8000d58:	4b65      	ldr	r3, [pc, #404]	; (8000ef0 <Gfx_Draw7SegDigit+0x258>)
 8000d5a:	781b      	ldrb	r3, [r3, #0]
 8000d5c:	733b      	strb	r3, [r7, #12]
	Gfx_DrawFilledRect(x+seg_len+thickness, y+thickness, thickness, seg_len, new_color);
 8000d5e:	7bbb      	ldrb	r3, [r7, #14]
 8000d60:	b29a      	uxth	r2, r3
 8000d62:	88fb      	ldrh	r3, [r7, #6]
 8000d64:	4413      	add	r3, r2
 8000d66:	b29a      	uxth	r2, r3
 8000d68:	7bfb      	ldrb	r3, [r7, #15]
 8000d6a:	b29b      	uxth	r3, r3
 8000d6c:	4413      	add	r3, r2
 8000d6e:	b298      	uxth	r0, r3
 8000d70:	7bfb      	ldrb	r3, [r7, #15]
 8000d72:	b29a      	uxth	r2, r3
 8000d74:	88bb      	ldrh	r3, [r7, #4]
 8000d76:	4413      	add	r3, r2
 8000d78:	b299      	uxth	r1, r3
 8000d7a:	7bfb      	ldrb	r3, [r7, #15]
 8000d7c:	b29a      	uxth	r2, r3
 8000d7e:	7bbb      	ldrb	r3, [r7, #14]
 8000d80:	b29c      	uxth	r4, r3
 8000d82:	7b3b      	ldrb	r3, [r7, #12]
 8000d84:	9300      	str	r3, [sp, #0]
 8000d86:	4623      	mov	r3, r4
 8000d88:	f7ff ff24 	bl	8000bd4 <Gfx_DrawFilledRect>

	// Segment C
	new_color = ((pattern & SEG_C_MASK) ? color : background_color);
 8000d8c:	7b7b      	ldrb	r3, [r7, #13]
 8000d8e:	f003 0310 	and.w	r3, r3, #16
 8000d92:	2b00      	cmp	r3, #0
 8000d94:	d002      	beq.n	8000d9c <Gfx_Draw7SegDigit+0x104>
 8000d96:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000d9a:	e001      	b.n	8000da0 <Gfx_Draw7SegDigit+0x108>
 8000d9c:	4b54      	ldr	r3, [pc, #336]	; (8000ef0 <Gfx_Draw7SegDigit+0x258>)
 8000d9e:	781b      	ldrb	r3, [r3, #0]
 8000da0:	733b      	strb	r3, [r7, #12]
	Gfx_DrawFilledRect(x+seg_len+thickness, y+(2*thickness)+seg_len, thickness, seg_len, new_color);
 8000da2:	7bbb      	ldrb	r3, [r7, #14]
 8000da4:	b29a      	uxth	r2, r3
 8000da6:	88fb      	ldrh	r3, [r7, #6]
 8000da8:	4413      	add	r3, r2
 8000daa:	b29a      	uxth	r2, r3
 8000dac:	7bfb      	ldrb	r3, [r7, #15]
 8000dae:	b29b      	uxth	r3, r3
 8000db0:	4413      	add	r3, r2
 8000db2:	b298      	uxth	r0, r3
 8000db4:	7bfb      	ldrb	r3, [r7, #15]
 8000db6:	b29b      	uxth	r3, r3
 8000db8:	005b      	lsls	r3, r3, #1
 8000dba:	b29a      	uxth	r2, r3
 8000dbc:	88bb      	ldrh	r3, [r7, #4]
 8000dbe:	4413      	add	r3, r2
 8000dc0:	b29a      	uxth	r2, r3
 8000dc2:	7bbb      	ldrb	r3, [r7, #14]
 8000dc4:	b29b      	uxth	r3, r3
 8000dc6:	4413      	add	r3, r2
 8000dc8:	b299      	uxth	r1, r3
 8000dca:	7bfb      	ldrb	r3, [r7, #15]
 8000dcc:	b29a      	uxth	r2, r3
 8000dce:	7bbb      	ldrb	r3, [r7, #14]
 8000dd0:	b29c      	uxth	r4, r3
 8000dd2:	7b3b      	ldrb	r3, [r7, #12]
 8000dd4:	9300      	str	r3, [sp, #0]
 8000dd6:	4623      	mov	r3, r4
 8000dd8:	f7ff fefc 	bl	8000bd4 <Gfx_DrawFilledRect>

	// Segment D
	new_color = ((pattern & SEG_D_MASK) ? color : background_color);
 8000ddc:	7b7b      	ldrb	r3, [r7, #13]
 8000dde:	f003 0308 	and.w	r3, r3, #8
 8000de2:	2b00      	cmp	r3, #0
 8000de4:	d002      	beq.n	8000dec <Gfx_Draw7SegDigit+0x154>
 8000de6:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000dea:	e001      	b.n	8000df0 <Gfx_Draw7SegDigit+0x158>
 8000dec:	4b40      	ldr	r3, [pc, #256]	; (8000ef0 <Gfx_Draw7SegDigit+0x258>)
 8000dee:	781b      	ldrb	r3, [r3, #0]
 8000df0:	733b      	strb	r3, [r7, #12]
	Gfx_DrawFilledRect(x+thickness, y+(2*thickness)+(2*seg_len), seg_len, thickness, new_color);
 8000df2:	7bfb      	ldrb	r3, [r7, #15]
 8000df4:	b29a      	uxth	r2, r3
 8000df6:	88fb      	ldrh	r3, [r7, #6]
 8000df8:	4413      	add	r3, r2
 8000dfa:	b298      	uxth	r0, r3
 8000dfc:	7bfb      	ldrb	r3, [r7, #15]
 8000dfe:	b29a      	uxth	r2, r3
 8000e00:	7bbb      	ldrb	r3, [r7, #14]
 8000e02:	b29b      	uxth	r3, r3
 8000e04:	4413      	add	r3, r2
 8000e06:	b29b      	uxth	r3, r3
 8000e08:	005b      	lsls	r3, r3, #1
 8000e0a:	b29a      	uxth	r2, r3
 8000e0c:	88bb      	ldrh	r3, [r7, #4]
 8000e0e:	4413      	add	r3, r2
 8000e10:	b299      	uxth	r1, r3
 8000e12:	7bbb      	ldrb	r3, [r7, #14]
 8000e14:	b29a      	uxth	r2, r3
 8000e16:	7bfb      	ldrb	r3, [r7, #15]
 8000e18:	b29c      	uxth	r4, r3
 8000e1a:	7b3b      	ldrb	r3, [r7, #12]
 8000e1c:	9300      	str	r3, [sp, #0]
 8000e1e:	4623      	mov	r3, r4
 8000e20:	f7ff fed8 	bl	8000bd4 <Gfx_DrawFilledRect>

	// Segment E
	new_color = ((pattern & SEG_E_MASK) ? color : background_color);
 8000e24:	7b7b      	ldrb	r3, [r7, #13]
 8000e26:	f003 0304 	and.w	r3, r3, #4
 8000e2a:	2b00      	cmp	r3, #0
 8000e2c:	d002      	beq.n	8000e34 <Gfx_Draw7SegDigit+0x19c>
 8000e2e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000e32:	e001      	b.n	8000e38 <Gfx_Draw7SegDigit+0x1a0>
 8000e34:	4b2e      	ldr	r3, [pc, #184]	; (8000ef0 <Gfx_Draw7SegDigit+0x258>)
 8000e36:	781b      	ldrb	r3, [r3, #0]
 8000e38:	733b      	strb	r3, [r7, #12]
	Gfx_DrawFilledRect(x, y+(2*thickness)+seg_len, thickness, seg_len, new_color);
 8000e3a:	7bfb      	ldrb	r3, [r7, #15]
 8000e3c:	b29b      	uxth	r3, r3
 8000e3e:	005b      	lsls	r3, r3, #1
 8000e40:	b29a      	uxth	r2, r3
 8000e42:	88bb      	ldrh	r3, [r7, #4]
 8000e44:	4413      	add	r3, r2
 8000e46:	b29a      	uxth	r2, r3
 8000e48:	7bbb      	ldrb	r3, [r7, #14]
 8000e4a:	b29b      	uxth	r3, r3
 8000e4c:	4413      	add	r3, r2
 8000e4e:	b299      	uxth	r1, r3
 8000e50:	7bfb      	ldrb	r3, [r7, #15]
 8000e52:	b29a      	uxth	r2, r3
 8000e54:	7bbb      	ldrb	r3, [r7, #14]
 8000e56:	b29c      	uxth	r4, r3
 8000e58:	88f8      	ldrh	r0, [r7, #6]
 8000e5a:	7b3b      	ldrb	r3, [r7, #12]
 8000e5c:	9300      	str	r3, [sp, #0]
 8000e5e:	4623      	mov	r3, r4
 8000e60:	f7ff feb8 	bl	8000bd4 <Gfx_DrawFilledRect>

	// Segment F
	new_color = ((pattern & SEG_F_MASK) ? color : background_color);
 8000e64:	7b7b      	ldrb	r3, [r7, #13]
 8000e66:	f003 0302 	and.w	r3, r3, #2
 8000e6a:	2b00      	cmp	r3, #0
 8000e6c:	d002      	beq.n	8000e74 <Gfx_Draw7SegDigit+0x1dc>
 8000e6e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000e72:	e001      	b.n	8000e78 <Gfx_Draw7SegDigit+0x1e0>
 8000e74:	4b1e      	ldr	r3, [pc, #120]	; (8000ef0 <Gfx_Draw7SegDigit+0x258>)
 8000e76:	781b      	ldrb	r3, [r3, #0]
 8000e78:	733b      	strb	r3, [r7, #12]
	Gfx_DrawFilledRect(x, y+thickness, thickness, seg_len, new_color);
 8000e7a:	7bfb      	ldrb	r3, [r7, #15]
 8000e7c:	b29a      	uxth	r2, r3
 8000e7e:	88bb      	ldrh	r3, [r7, #4]
 8000e80:	4413      	add	r3, r2
 8000e82:	b299      	uxth	r1, r3
 8000e84:	7bfb      	ldrb	r3, [r7, #15]
 8000e86:	b29a      	uxth	r2, r3
 8000e88:	7bbb      	ldrb	r3, [r7, #14]
 8000e8a:	b29c      	uxth	r4, r3
 8000e8c:	88f8      	ldrh	r0, [r7, #6]
 8000e8e:	7b3b      	ldrb	r3, [r7, #12]
 8000e90:	9300      	str	r3, [sp, #0]
 8000e92:	4623      	mov	r3, r4
 8000e94:	f7ff fe9e 	bl	8000bd4 <Gfx_DrawFilledRect>

	// Segment G
	new_color = ((pattern & SEG_G_MASK) ? color : background_color);
 8000e98:	7b7b      	ldrb	r3, [r7, #13]
 8000e9a:	f003 0301 	and.w	r3, r3, #1
 8000e9e:	2b00      	cmp	r3, #0
 8000ea0:	d002      	beq.n	8000ea8 <Gfx_Draw7SegDigit+0x210>
 8000ea2:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000ea6:	e001      	b.n	8000eac <Gfx_Draw7SegDigit+0x214>
 8000ea8:	4b11      	ldr	r3, [pc, #68]	; (8000ef0 <Gfx_Draw7SegDigit+0x258>)
 8000eaa:	781b      	ldrb	r3, [r3, #0]
 8000eac:	733b      	strb	r3, [r7, #12]
	Gfx_DrawFilledRect(x+thickness, y+thickness+seg_len, seg_len, thickness, new_color);
 8000eae:	7bfb      	ldrb	r3, [r7, #15]
 8000eb0:	b29a      	uxth	r2, r3
 8000eb2:	88fb      	ldrh	r3, [r7, #6]
 8000eb4:	4413      	add	r3, r2
 8000eb6:	b298      	uxth	r0, r3
 8000eb8:	7bfb      	ldrb	r3, [r7, #15]
 8000eba:	b29a      	uxth	r2, r3
 8000ebc:	88bb      	ldrh	r3, [r7, #4]
 8000ebe:	4413      	add	r3, r2
 8000ec0:	b29a      	uxth	r2, r3
 8000ec2:	7bbb      	ldrb	r3, [r7, #14]
 8000ec4:	b29b      	uxth	r3, r3
 8000ec6:	4413      	add	r3, r2
 8000ec8:	b299      	uxth	r1, r3
 8000eca:	7bbb      	ldrb	r3, [r7, #14]
 8000ecc:	b29a      	uxth	r2, r3
 8000ece:	7bfb      	ldrb	r3, [r7, #15]
 8000ed0:	b29c      	uxth	r4, r3
 8000ed2:	7b3b      	ldrb	r3, [r7, #12]
 8000ed4:	9300      	str	r3, [sp, #0]
 8000ed6:	4623      	mov	r3, r4
 8000ed8:	f7ff fe7c 	bl	8000bd4 <Gfx_DrawFilledRect>
 8000edc:	e000      	b.n	8000ee0 <Gfx_Draw7SegDigit+0x248>
		return;
 8000ede:	bf00      	nop
}
 8000ee0:	3714      	adds	r7, #20
 8000ee2:	46bd      	mov	sp, r7
 8000ee4:	bd90      	pop	{r4, r7, pc}
 8000ee6:	bf00      	nop
 8000ee8:	cccccccd 	.word	0xcccccccd
 8000eec:	20000024 	.word	0x20000024
 8000ef0:	20012ce8 	.word	0x20012ce8

08000ef4 <HVIL_Init>:
 */

#include "hvil.h"
#include "main.h"

void HVIL_Init(void) {
 8000ef4:	b480      	push	{r7}
 8000ef6:	af00      	add	r7, sp, #0

}
 8000ef8:	bf00      	nop
 8000efa:	46bd      	mov	sp, r7
 8000efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f00:	4770      	bx	lr
	...

08000f04 <SystemClock_Config>:
TIM_HandleTypeDef htim2;
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim8;

void SystemClock_Config(void)
{
 8000f04:	b580      	push	{r7, lr}
 8000f06:	b094      	sub	sp, #80	; 0x50
 8000f08:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000f0a:	f107 031c 	add.w	r3, r7, #28
 8000f0e:	2234      	movs	r2, #52	; 0x34
 8000f10:	2100      	movs	r1, #0
 8000f12:	4618      	mov	r0, r3
 8000f14:	f006 fe00 	bl	8007b18 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000f18:	f107 0308 	add.w	r3, r7, #8
 8000f1c:	2200      	movs	r2, #0
 8000f1e:	601a      	str	r2, [r3, #0]
 8000f20:	605a      	str	r2, [r3, #4]
 8000f22:	609a      	str	r2, [r3, #8]
 8000f24:	60da      	str	r2, [r3, #12]
 8000f26:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000f28:	2300      	movs	r3, #0
 8000f2a:	607b      	str	r3, [r7, #4]
 8000f2c:	4b2a      	ldr	r3, [pc, #168]	; (8000fd8 <SystemClock_Config+0xd4>)
 8000f2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f30:	4a29      	ldr	r2, [pc, #164]	; (8000fd8 <SystemClock_Config+0xd4>)
 8000f32:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000f36:	6413      	str	r3, [r2, #64]	; 0x40
 8000f38:	4b27      	ldr	r3, [pc, #156]	; (8000fd8 <SystemClock_Config+0xd4>)
 8000f3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f3c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000f40:	607b      	str	r3, [r7, #4]
 8000f42:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000f44:	2300      	movs	r3, #0
 8000f46:	603b      	str	r3, [r7, #0]
 8000f48:	4b24      	ldr	r3, [pc, #144]	; (8000fdc <SystemClock_Config+0xd8>)
 8000f4a:	681b      	ldr	r3, [r3, #0]
 8000f4c:	4a23      	ldr	r2, [pc, #140]	; (8000fdc <SystemClock_Config+0xd8>)
 8000f4e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000f52:	6013      	str	r3, [r2, #0]
 8000f54:	4b21      	ldr	r3, [pc, #132]	; (8000fdc <SystemClock_Config+0xd8>)
 8000f56:	681b      	ldr	r3, [r3, #0]
 8000f58:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000f5c:	603b      	str	r3, [r7, #0]
 8000f5e:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 8000f60:	2303      	movs	r3, #3
 8000f62:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000f64:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000f68:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000f6a:	2301      	movs	r3, #1
 8000f6c:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000f6e:	2310      	movs	r3, #16
 8000f70:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000f72:	2302      	movs	r3, #2
 8000f74:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000f76:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000f7a:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000f7c:	2304      	movs	r3, #4
 8000f7e:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 72;
 8000f80:	2348      	movs	r3, #72	; 0x48
 8000f82:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000f84:	2302      	movs	r3, #2
 8000f86:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = 3;
 8000f88:	2303      	movs	r3, #3
 8000f8a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000f8c:	2302      	movs	r3, #2
 8000f8e:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000f90:	f107 031c 	add.w	r3, r7, #28
 8000f94:	4618      	mov	r0, r3
 8000f96:	f004 fdc1 	bl	8005b1c <HAL_RCC_OscConfig>
 8000f9a:	4603      	mov	r3, r0
 8000f9c:	2b00      	cmp	r3, #0
 8000f9e:	d001      	beq.n	8000fa4 <SystemClock_Config+0xa0>
  {
    Error_Handler();
 8000fa0:	f000 fc53 	bl	800184a <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000fa4:	230f      	movs	r3, #15
 8000fa6:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000fa8:	2300      	movs	r3, #0
 8000faa:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000fac:	2300      	movs	r3, #0
 8000fae:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000fb0:	2300      	movs	r3, #0
 8000fb2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000fb4:	2300      	movs	r3, #0
 8000fb6:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000fb8:	f107 0308 	add.w	r3, r7, #8
 8000fbc:	2100      	movs	r1, #0
 8000fbe:	4618      	mov	r0, r3
 8000fc0:	f004 fba0 	bl	8005704 <HAL_RCC_ClockConfig>
 8000fc4:	4603      	mov	r3, r0
 8000fc6:	2b00      	cmp	r3, #0
 8000fc8:	d001      	beq.n	8000fce <SystemClock_Config+0xca>
  {
    Error_Handler();
 8000fca:	f000 fc3e 	bl	800184a <Error_Handler>
  }
}
 8000fce:	bf00      	nop
 8000fd0:	3750      	adds	r7, #80	; 0x50
 8000fd2:	46bd      	mov	sp, r7
 8000fd4:	bd80      	pop	{r7, pc}
 8000fd6:	bf00      	nop
 8000fd8:	40023800 	.word	0x40023800
 8000fdc:	40007000 	.word	0x40007000

08000fe0 <MX_ADC1_Init>:

void MX_ADC1_Init(void)
{
 8000fe0:	b580      	push	{r7, lr}
 8000fe2:	b084      	sub	sp, #16
 8000fe4:	af00      	add	r7, sp, #0

  ADC_ChannelConfTypeDef sConfig = {0};
 8000fe6:	463b      	mov	r3, r7
 8000fe8:	2200      	movs	r2, #0
 8000fea:	601a      	str	r2, [r3, #0]
 8000fec:	605a      	str	r2, [r3, #4]
 8000fee:	609a      	str	r2, [r3, #8]
 8000ff0:	60da      	str	r2, [r3, #12]

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8000ff2:	4b21      	ldr	r3, [pc, #132]	; (8001078 <MX_ADC1_Init+0x98>)
 8000ff4:	4a21      	ldr	r2, [pc, #132]	; (800107c <MX_ADC1_Init+0x9c>)
 8000ff6:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8000ff8:	4b1f      	ldr	r3, [pc, #124]	; (8001078 <MX_ADC1_Init+0x98>)
 8000ffa:	2200      	movs	r2, #0
 8000ffc:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000ffe:	4b1e      	ldr	r3, [pc, #120]	; (8001078 <MX_ADC1_Init+0x98>)
 8001000:	2200      	movs	r2, #0
 8001002:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001004:	4b1c      	ldr	r3, [pc, #112]	; (8001078 <MX_ADC1_Init+0x98>)
 8001006:	2200      	movs	r2, #0
 8001008:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 800100a:	4b1b      	ldr	r3, [pc, #108]	; (8001078 <MX_ADC1_Init+0x98>)
 800100c:	2200      	movs	r2, #0
 800100e:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001010:	4b19      	ldr	r3, [pc, #100]	; (8001078 <MX_ADC1_Init+0x98>)
 8001012:	2200      	movs	r2, #0
 8001014:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001018:	4b17      	ldr	r3, [pc, #92]	; (8001078 <MX_ADC1_Init+0x98>)
 800101a:	2200      	movs	r2, #0
 800101c:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800101e:	4b16      	ldr	r3, [pc, #88]	; (8001078 <MX_ADC1_Init+0x98>)
 8001020:	4a17      	ldr	r2, [pc, #92]	; (8001080 <MX_ADC1_Init+0xa0>)
 8001022:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001024:	4b14      	ldr	r3, [pc, #80]	; (8001078 <MX_ADC1_Init+0x98>)
 8001026:	2200      	movs	r2, #0
 8001028:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 800102a:	4b13      	ldr	r3, [pc, #76]	; (8001078 <MX_ADC1_Init+0x98>)
 800102c:	2201      	movs	r2, #1
 800102e:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001030:	4b11      	ldr	r3, [pc, #68]	; (8001078 <MX_ADC1_Init+0x98>)
 8001032:	2200      	movs	r2, #0
 8001034:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001038:	4b0f      	ldr	r3, [pc, #60]	; (8001078 <MX_ADC1_Init+0x98>)
 800103a:	2201      	movs	r2, #1
 800103c:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800103e:	480e      	ldr	r0, [pc, #56]	; (8001078 <MX_ADC1_Init+0x98>)
 8001040:	f001 fb18 	bl	8002674 <HAL_ADC_Init>
 8001044:	4603      	mov	r3, r0
 8001046:	2b00      	cmp	r3, #0
 8001048:	d001      	beq.n	800104e <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 800104a:	f000 fbfe 	bl	800184a <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 800104e:	2300      	movs	r3, #0
 8001050:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001052:	2301      	movs	r3, #1
 8001054:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001056:	2300      	movs	r3, #0
 8001058:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800105a:	463b      	mov	r3, r7
 800105c:	4619      	mov	r1, r3
 800105e:	4806      	ldr	r0, [pc, #24]	; (8001078 <MX_ADC1_Init+0x98>)
 8001060:	f001 fccc 	bl	80029fc <HAL_ADC_ConfigChannel>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	d001      	beq.n	800106e <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 800106a:	f000 fbee 	bl	800184a <Error_Handler>
  }
}
 800106e:	bf00      	nop
 8001070:	3710      	adds	r7, #16
 8001072:	46bd      	mov	sp, r7
 8001074:	bd80      	pop	{r7, pc}
 8001076:	bf00      	nop
 8001078:	20012cec 	.word	0x20012cec
 800107c:	40012000 	.word	0x40012000
 8001080:	0f000001 	.word	0x0f000001

08001084 <MX_CAN1_Init>:


void MX_CAN1_Init(void)
{
 8001084:	b580      	push	{r7, lr}
 8001086:	af00      	add	r7, sp, #0
  hcan1.Instance = CAN1;
 8001088:	4b16      	ldr	r3, [pc, #88]	; (80010e4 <MX_CAN1_Init+0x60>)
 800108a:	4a17      	ldr	r2, [pc, #92]	; (80010e8 <MX_CAN1_Init+0x64>)
 800108c:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 16;
 800108e:	4b15      	ldr	r3, [pc, #84]	; (80010e4 <MX_CAN1_Init+0x60>)
 8001090:	2210      	movs	r2, #16
 8001092:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 8001094:	4b13      	ldr	r3, [pc, #76]	; (80010e4 <MX_CAN1_Init+0x60>)
 8001096:	2200      	movs	r2, #0
 8001098:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 800109a:	4b12      	ldr	r3, [pc, #72]	; (80010e4 <MX_CAN1_Init+0x60>)
 800109c:	2200      	movs	r2, #0
 800109e:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_1TQ;
 80010a0:	4b10      	ldr	r3, [pc, #64]	; (80010e4 <MX_CAN1_Init+0x60>)
 80010a2:	2200      	movs	r2, #0
 80010a4:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 80010a6:	4b0f      	ldr	r3, [pc, #60]	; (80010e4 <MX_CAN1_Init+0x60>)
 80010a8:	2200      	movs	r2, #0
 80010aa:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 80010ac:	4b0d      	ldr	r3, [pc, #52]	; (80010e4 <MX_CAN1_Init+0x60>)
 80010ae:	2200      	movs	r2, #0
 80010b0:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 80010b2:	4b0c      	ldr	r3, [pc, #48]	; (80010e4 <MX_CAN1_Init+0x60>)
 80010b4:	2200      	movs	r2, #0
 80010b6:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 80010b8:	4b0a      	ldr	r3, [pc, #40]	; (80010e4 <MX_CAN1_Init+0x60>)
 80010ba:	2200      	movs	r2, #0
 80010bc:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 80010be:	4b09      	ldr	r3, [pc, #36]	; (80010e4 <MX_CAN1_Init+0x60>)
 80010c0:	2200      	movs	r2, #0
 80010c2:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 80010c4:	4b07      	ldr	r3, [pc, #28]	; (80010e4 <MX_CAN1_Init+0x60>)
 80010c6:	2200      	movs	r2, #0
 80010c8:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 80010ca:	4b06      	ldr	r3, [pc, #24]	; (80010e4 <MX_CAN1_Init+0x60>)
 80010cc:	2200      	movs	r2, #0
 80010ce:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 80010d0:	4804      	ldr	r0, [pc, #16]	; (80010e4 <MX_CAN1_Init+0x60>)
 80010d2:	f001 feb1 	bl	8002e38 <HAL_CAN_Init>
 80010d6:	4603      	mov	r3, r0
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d001      	beq.n	80010e0 <MX_CAN1_Init+0x5c>
  {
    Error_Handler();
 80010dc:	f000 fbb5 	bl	800184a <Error_Handler>
  }

}
 80010e0:	bf00      	nop
 80010e2:	bd80      	pop	{r7, pc}
 80010e4:	20012d34 	.word	0x20012d34
 80010e8:	40006400 	.word	0x40006400

080010ec <MX_I2C1_Init>:

void MX_I2C1_Init(void)
{
 80010ec:	b580      	push	{r7, lr}
 80010ee:	af00      	add	r7, sp, #0
  hi2c1.Instance = I2C1;
 80010f0:	4b12      	ldr	r3, [pc, #72]	; (800113c <MX_I2C1_Init+0x50>)
 80010f2:	4a13      	ldr	r2, [pc, #76]	; (8001140 <MX_I2C1_Init+0x54>)
 80010f4:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80010f6:	4b11      	ldr	r3, [pc, #68]	; (800113c <MX_I2C1_Init+0x50>)
 80010f8:	4a12      	ldr	r2, [pc, #72]	; (8001144 <MX_I2C1_Init+0x58>)
 80010fa:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80010fc:	4b0f      	ldr	r3, [pc, #60]	; (800113c <MX_I2C1_Init+0x50>)
 80010fe:	2200      	movs	r2, #0
 8001100:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001102:	4b0e      	ldr	r3, [pc, #56]	; (800113c <MX_I2C1_Init+0x50>)
 8001104:	2200      	movs	r2, #0
 8001106:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001108:	4b0c      	ldr	r3, [pc, #48]	; (800113c <MX_I2C1_Init+0x50>)
 800110a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800110e:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001110:	4b0a      	ldr	r3, [pc, #40]	; (800113c <MX_I2C1_Init+0x50>)
 8001112:	2200      	movs	r2, #0
 8001114:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001116:	4b09      	ldr	r3, [pc, #36]	; (800113c <MX_I2C1_Init+0x50>)
 8001118:	2200      	movs	r2, #0
 800111a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800111c:	4b07      	ldr	r3, [pc, #28]	; (800113c <MX_I2C1_Init+0x50>)
 800111e:	2200      	movs	r2, #0
 8001120:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001122:	4b06      	ldr	r3, [pc, #24]	; (800113c <MX_I2C1_Init+0x50>)
 8001124:	2200      	movs	r2, #0
 8001126:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001128:	4804      	ldr	r0, [pc, #16]	; (800113c <MX_I2C1_Init+0x50>)
 800112a:	f002 fccb 	bl	8003ac4 <HAL_I2C_Init>
 800112e:	4603      	mov	r3, r0
 8001130:	2b00      	cmp	r3, #0
 8001132:	d001      	beq.n	8001138 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001134:	f000 fb89 	bl	800184a <Error_Handler>
  }
}
 8001138:	bf00      	nop
 800113a:	bd80      	pop	{r7, pc}
 800113c:	20012d5c 	.word	0x20012d5c
 8001140:	40005400 	.word	0x40005400
 8001144:	000186a0 	.word	0x000186a0

08001148 <MX_SPI4_Init>:

void MX_SPI4_Init(void)
{
 8001148:	b580      	push	{r7, lr}
 800114a:	af00      	add	r7, sp, #0
  /* SPI4 parameter configuration*/
  hspi4.Instance = SPI4;
 800114c:	4b17      	ldr	r3, [pc, #92]	; (80011ac <MX_SPI4_Init+0x64>)
 800114e:	4a18      	ldr	r2, [pc, #96]	; (80011b0 <MX_SPI4_Init+0x68>)
 8001150:	601a      	str	r2, [r3, #0]
  hspi4.Init.Mode = SPI_MODE_MASTER;
 8001152:	4b16      	ldr	r3, [pc, #88]	; (80011ac <MX_SPI4_Init+0x64>)
 8001154:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001158:	605a      	str	r2, [r3, #4]
  hspi4.Init.Direction = SPI_DIRECTION_2LINES;
 800115a:	4b14      	ldr	r3, [pc, #80]	; (80011ac <MX_SPI4_Init+0x64>)
 800115c:	2200      	movs	r2, #0
 800115e:	609a      	str	r2, [r3, #8]
  hspi4.Init.DataSize = SPI_DATASIZE_8BIT;
 8001160:	4b12      	ldr	r3, [pc, #72]	; (80011ac <MX_SPI4_Init+0x64>)
 8001162:	2200      	movs	r2, #0
 8001164:	60da      	str	r2, [r3, #12]
  hspi4.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001166:	4b11      	ldr	r3, [pc, #68]	; (80011ac <MX_SPI4_Init+0x64>)
 8001168:	2200      	movs	r2, #0
 800116a:	611a      	str	r2, [r3, #16]
  hspi4.Init.CLKPhase = SPI_PHASE_1EDGE;
 800116c:	4b0f      	ldr	r3, [pc, #60]	; (80011ac <MX_SPI4_Init+0x64>)
 800116e:	2200      	movs	r2, #0
 8001170:	615a      	str	r2, [r3, #20]
  hspi4.Init.NSS = SPI_NSS_SOFT;
 8001172:	4b0e      	ldr	r3, [pc, #56]	; (80011ac <MX_SPI4_Init+0x64>)
 8001174:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001178:	619a      	str	r2, [r3, #24]
  hspi4.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800117a:	4b0c      	ldr	r3, [pc, #48]	; (80011ac <MX_SPI4_Init+0x64>)
 800117c:	2200      	movs	r2, #0
 800117e:	61da      	str	r2, [r3, #28]
  hspi4.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001180:	4b0a      	ldr	r3, [pc, #40]	; (80011ac <MX_SPI4_Init+0x64>)
 8001182:	2200      	movs	r2, #0
 8001184:	621a      	str	r2, [r3, #32]
  hspi4.Init.TIMode = SPI_TIMODE_DISABLE;
 8001186:	4b09      	ldr	r3, [pc, #36]	; (80011ac <MX_SPI4_Init+0x64>)
 8001188:	2200      	movs	r2, #0
 800118a:	625a      	str	r2, [r3, #36]	; 0x24
  hspi4.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800118c:	4b07      	ldr	r3, [pc, #28]	; (80011ac <MX_SPI4_Init+0x64>)
 800118e:	2200      	movs	r2, #0
 8001190:	629a      	str	r2, [r3, #40]	; 0x28
  hspi4.Init.CRCPolynomial = 10;
 8001192:	4b06      	ldr	r3, [pc, #24]	; (80011ac <MX_SPI4_Init+0x64>)
 8001194:	220a      	movs	r2, #10
 8001196:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi4) != HAL_OK)
 8001198:	4804      	ldr	r0, [pc, #16]	; (80011ac <MX_SPI4_Init+0x64>)
 800119a:	f004 ff43 	bl	8006024 <HAL_SPI_Init>
 800119e:	4603      	mov	r3, r0
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d001      	beq.n	80011a8 <MX_SPI4_Init+0x60>
  {
    Error_Handler();
 80011a4:	f000 fb51 	bl	800184a <Error_Handler>
  }
}
 80011a8:	bf00      	nop
 80011aa:	bd80      	pop	{r7, pc}
 80011ac:	20012db0 	.word	0x20012db0
 80011b0:	40013400 	.word	0x40013400

080011b4 <MX_TIM2_Init>:

void MX_TIM2_Init(void)
{
 80011b4:	b580      	push	{r7, lr}
 80011b6:	b08a      	sub	sp, #40	; 0x28
 80011b8:	af00      	add	r7, sp, #0

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011ba:	f107 0320 	add.w	r3, r7, #32
 80011be:	2200      	movs	r2, #0
 80011c0:	601a      	str	r2, [r3, #0]
 80011c2:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80011c4:	1d3b      	adds	r3, r7, #4
 80011c6:	2200      	movs	r2, #0
 80011c8:	601a      	str	r2, [r3, #0]
 80011ca:	605a      	str	r2, [r3, #4]
 80011cc:	609a      	str	r2, [r3, #8]
 80011ce:	60da      	str	r2, [r3, #12]
 80011d0:	611a      	str	r2, [r3, #16]
 80011d2:	615a      	str	r2, [r3, #20]
 80011d4:	619a      	str	r2, [r3, #24]

  htim2.Instance = TIM2;
 80011d6:	4b21      	ldr	r3, [pc, #132]	; (800125c <MX_TIM2_Init+0xa8>)
 80011d8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80011dc:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 15999;
 80011de:	4b1f      	ldr	r3, [pc, #124]	; (800125c <MX_TIM2_Init+0xa8>)
 80011e0:	f643 627f 	movw	r2, #15999	; 0x3e7f
 80011e4:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011e6:	4b1d      	ldr	r3, [pc, #116]	; (800125c <MX_TIM2_Init+0xa8>)
 80011e8:	2200      	movs	r2, #0
 80011ea:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 1000;
 80011ec:	4b1b      	ldr	r3, [pc, #108]	; (800125c <MX_TIM2_Init+0xa8>)
 80011ee:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80011f2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80011f4:	4b19      	ldr	r3, [pc, #100]	; (800125c <MX_TIM2_Init+0xa8>)
 80011f6:	2200      	movs	r2, #0
 80011f8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80011fa:	4b18      	ldr	r3, [pc, #96]	; (800125c <MX_TIM2_Init+0xa8>)
 80011fc:	2200      	movs	r2, #0
 80011fe:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 8001200:	4816      	ldr	r0, [pc, #88]	; (800125c <MX_TIM2_Init+0xa8>)
 8001202:	f005 fb7d 	bl	8006900 <HAL_TIM_OC_Init>
 8001206:	4603      	mov	r3, r0
 8001208:	2b00      	cmp	r3, #0
 800120a:	d001      	beq.n	8001210 <MX_TIM2_Init+0x5c>
  {
    Error_Handler();
 800120c:	f000 fb1d 	bl	800184a <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001210:	2300      	movs	r3, #0
 8001212:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001214:	2300      	movs	r3, #0
 8001216:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001218:	f107 0320 	add.w	r3, r7, #32
 800121c:	4619      	mov	r1, r3
 800121e:	480f      	ldr	r0, [pc, #60]	; (800125c <MX_TIM2_Init+0xa8>)
 8001220:	f006 fb74 	bl	800790c <HAL_TIMEx_MasterConfigSynchronization>
 8001224:	4603      	mov	r3, r0
 8001226:	2b00      	cmp	r3, #0
 8001228:	d001      	beq.n	800122e <MX_TIM2_Init+0x7a>
  {
    Error_Handler();
 800122a:	f000 fb0e 	bl	800184a <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_TIMING;
 800122e:	2300      	movs	r3, #0
 8001230:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001232:	2300      	movs	r3, #0
 8001234:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001236:	2300      	movs	r3, #0
 8001238:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800123a:	2300      	movs	r3, #0
 800123c:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800123e:	1d3b      	adds	r3, r7, #4
 8001240:	2200      	movs	r2, #0
 8001242:	4619      	mov	r1, r3
 8001244:	4805      	ldr	r0, [pc, #20]	; (800125c <MX_TIM2_Init+0xa8>)
 8001246:	f005 fe43 	bl	8006ed0 <HAL_TIM_OC_ConfigChannel>
 800124a:	4603      	mov	r3, r0
 800124c:	2b00      	cmp	r3, #0
 800124e:	d001      	beq.n	8001254 <MX_TIM2_Init+0xa0>
  {
    Error_Handler();
 8001250:	f000 fafb 	bl	800184a <Error_Handler>
  }
}
 8001254:	bf00      	nop
 8001256:	3728      	adds	r7, #40	; 0x28
 8001258:	46bd      	mov	sp, r7
 800125a:	bd80      	pop	{r7, pc}
 800125c:	20012e08 	.word	0x20012e08

08001260 <MX_TIM3_Init>:

void MX_TIM3_Init(void)
{
 8001260:	b580      	push	{r7, lr}
 8001262:	b08a      	sub	sp, #40	; 0x28
 8001264:	af00      	add	r7, sp, #0
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001266:	f107 0320 	add.w	r3, r7, #32
 800126a:	2200      	movs	r2, #0
 800126c:	601a      	str	r2, [r3, #0]
 800126e:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001270:	1d3b      	adds	r3, r7, #4
 8001272:	2200      	movs	r2, #0
 8001274:	601a      	str	r2, [r3, #0]
 8001276:	605a      	str	r2, [r3, #4]
 8001278:	609a      	str	r2, [r3, #8]
 800127a:	60da      	str	r2, [r3, #12]
 800127c:	611a      	str	r2, [r3, #16]
 800127e:	615a      	str	r2, [r3, #20]
 8001280:	619a      	str	r2, [r3, #24]

  htim3.Instance = TIM3;
 8001282:	4b20      	ldr	r3, [pc, #128]	; (8001304 <MX_TIM3_Init+0xa4>)
 8001284:	4a20      	ldr	r2, [pc, #128]	; (8001308 <MX_TIM3_Init+0xa8>)
 8001286:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 15;
 8001288:	4b1e      	ldr	r3, [pc, #120]	; (8001304 <MX_TIM3_Init+0xa4>)
 800128a:	220f      	movs	r2, #15
 800128c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800128e:	4b1d      	ldr	r3, [pc, #116]	; (8001304 <MX_TIM3_Init+0xa4>)
 8001290:	2200      	movs	r2, #0
 8001292:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8001294:	4b1b      	ldr	r3, [pc, #108]	; (8001304 <MX_TIM3_Init+0xa4>)
 8001296:	f240 32e7 	movw	r2, #999	; 0x3e7
 800129a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800129c:	4b19      	ldr	r3, [pc, #100]	; (8001304 <MX_TIM3_Init+0xa4>)
 800129e:	2200      	movs	r2, #0
 80012a0:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80012a2:	4b18      	ldr	r3, [pc, #96]	; (8001304 <MX_TIM3_Init+0xa4>)
 80012a4:	2200      	movs	r2, #0
 80012a6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 80012a8:	4816      	ldr	r0, [pc, #88]	; (8001304 <MX_TIM3_Init+0xa4>)
 80012aa:	f005 fb29 	bl	8006900 <HAL_TIM_OC_Init>
 80012ae:	4603      	mov	r3, r0
 80012b0:	2b00      	cmp	r3, #0
 80012b2:	d001      	beq.n	80012b8 <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 80012b4:	f000 fac9 	bl	800184a <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80012b8:	2300      	movs	r3, #0
 80012ba:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80012bc:	2300      	movs	r3, #0
 80012be:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80012c0:	f107 0320 	add.w	r3, r7, #32
 80012c4:	4619      	mov	r1, r3
 80012c6:	480f      	ldr	r0, [pc, #60]	; (8001304 <MX_TIM3_Init+0xa4>)
 80012c8:	f006 fb20 	bl	800790c <HAL_TIMEx_MasterConfigSynchronization>
 80012cc:	4603      	mov	r3, r0
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	d001      	beq.n	80012d6 <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 80012d2:	f000 faba 	bl	800184a <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_TIMING;
 80012d6:	2300      	movs	r3, #0
 80012d8:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80012da:	2300      	movs	r3, #0
 80012dc:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80012de:	2300      	movs	r3, #0
 80012e0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80012e2:	2300      	movs	r3, #0
 80012e4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_OC_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80012e6:	1d3b      	adds	r3, r7, #4
 80012e8:	2200      	movs	r2, #0
 80012ea:	4619      	mov	r1, r3
 80012ec:	4805      	ldr	r0, [pc, #20]	; (8001304 <MX_TIM3_Init+0xa4>)
 80012ee:	f005 fdef 	bl	8006ed0 <HAL_TIM_OC_ConfigChannel>
 80012f2:	4603      	mov	r3, r0
 80012f4:	2b00      	cmp	r3, #0
 80012f6:	d001      	beq.n	80012fc <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 80012f8:	f000 faa7 	bl	800184a <Error_Handler>
  }

}
 80012fc:	bf00      	nop
 80012fe:	3728      	adds	r7, #40	; 0x28
 8001300:	46bd      	mov	sp, r7
 8001302:	bd80      	pop	{r7, pc}
 8001304:	20012e50 	.word	0x20012e50
 8001308:	40000400 	.word	0x40000400

0800130c <MX_TIM8_Init>:

void MX_TIM8_Init(void)
{
 800130c:	b580      	push	{r7, lr}
 800130e:	b096      	sub	sp, #88	; 0x58
 8001310:	af00      	add	r7, sp, #0
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001312:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001316:	2200      	movs	r2, #0
 8001318:	601a      	str	r2, [r3, #0]
 800131a:	605a      	str	r2, [r3, #4]
 800131c:	609a      	str	r2, [r3, #8]
 800131e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001320:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001324:	2200      	movs	r2, #0
 8001326:	601a      	str	r2, [r3, #0]
 8001328:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800132a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800132e:	2200      	movs	r2, #0
 8001330:	601a      	str	r2, [r3, #0]
 8001332:	605a      	str	r2, [r3, #4]
 8001334:	609a      	str	r2, [r3, #8]
 8001336:	60da      	str	r2, [r3, #12]
 8001338:	611a      	str	r2, [r3, #16]
 800133a:	615a      	str	r2, [r3, #20]
 800133c:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800133e:	1d3b      	adds	r3, r7, #4
 8001340:	2220      	movs	r2, #32
 8001342:	2100      	movs	r1, #0
 8001344:	4618      	mov	r0, r3
 8001346:	f006 fbe7 	bl	8007b18 <memset>

  htim8.Instance = TIM8;
 800134a:	4b3f      	ldr	r3, [pc, #252]	; (8001448 <MX_TIM8_Init+0x13c>)
 800134c:	4a3f      	ldr	r2, [pc, #252]	; (800144c <MX_TIM8_Init+0x140>)
 800134e:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 399;
 8001350:	4b3d      	ldr	r3, [pc, #244]	; (8001448 <MX_TIM8_Init+0x13c>)
 8001352:	f240 128f 	movw	r2, #399	; 0x18f
 8001356:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001358:	4b3b      	ldr	r3, [pc, #236]	; (8001448 <MX_TIM8_Init+0x13c>)
 800135a:	2200      	movs	r2, #0
 800135c:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 800135e:	4b3a      	ldr	r3, [pc, #232]	; (8001448 <MX_TIM8_Init+0x13c>)
 8001360:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001364:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001366:	4b38      	ldr	r3, [pc, #224]	; (8001448 <MX_TIM8_Init+0x13c>)
 8001368:	2200      	movs	r2, #0
 800136a:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 800136c:	4b36      	ldr	r3, [pc, #216]	; (8001448 <MX_TIM8_Init+0x13c>)
 800136e:	2200      	movs	r2, #0
 8001370:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001372:	4b35      	ldr	r3, [pc, #212]	; (8001448 <MX_TIM8_Init+0x13c>)
 8001374:	2200      	movs	r2, #0
 8001376:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 8001378:	4833      	ldr	r0, [pc, #204]	; (8001448 <MX_TIM8_Init+0x13c>)
 800137a:	f005 fa01 	bl	8006780 <HAL_TIM_Base_Init>
 800137e:	4603      	mov	r3, r0
 8001380:	2b00      	cmp	r3, #0
 8001382:	d001      	beq.n	8001388 <MX_TIM8_Init+0x7c>
  {
    Error_Handler();
 8001384:	f000 fa61 	bl	800184a <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001388:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800138c:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 800138e:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8001392:	4619      	mov	r1, r3
 8001394:	482c      	ldr	r0, [pc, #176]	; (8001448 <MX_TIM8_Init+0x13c>)
 8001396:	f005 feb9 	bl	800710c <HAL_TIM_ConfigClockSource>
 800139a:	4603      	mov	r3, r0
 800139c:	2b00      	cmp	r3, #0
 800139e:	d001      	beq.n	80013a4 <MX_TIM8_Init+0x98>
  {
    Error_Handler();
 80013a0:	f000 fa53 	bl	800184a <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 80013a4:	4828      	ldr	r0, [pc, #160]	; (8001448 <MX_TIM8_Init+0x13c>)
 80013a6:	f005 fafa 	bl	800699e <HAL_TIM_PWM_Init>
 80013aa:	4603      	mov	r3, r0
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d001      	beq.n	80013b4 <MX_TIM8_Init+0xa8>
  {
    Error_Handler();
 80013b0:	f000 fa4b 	bl	800184a <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80013b4:	2300      	movs	r3, #0
 80013b6:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80013b8:	2300      	movs	r3, #0
 80013ba:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 80013bc:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80013c0:	4619      	mov	r1, r3
 80013c2:	4821      	ldr	r0, [pc, #132]	; (8001448 <MX_TIM8_Init+0x13c>)
 80013c4:	f006 faa2 	bl	800790c <HAL_TIMEx_MasterConfigSynchronization>
 80013c8:	4603      	mov	r3, r0
 80013ca:	2b00      	cmp	r3, #0
 80013cc:	d001      	beq.n	80013d2 <MX_TIM8_Init+0xc6>
  {
    Error_Handler();
 80013ce:	f000 fa3c 	bl	800184a <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80013d2:	2360      	movs	r3, #96	; 0x60
 80013d4:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 80013d6:	2300      	movs	r3, #0
 80013d8:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80013da:	2300      	movs	r3, #0
 80013dc:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80013de:	2300      	movs	r3, #0
 80013e0:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80013e2:	2300      	movs	r3, #0
 80013e4:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80013e6:	2300      	movs	r3, #0
 80013e8:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80013ea:	2300      	movs	r3, #0
 80013ec:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80013ee:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80013f2:	2200      	movs	r2, #0
 80013f4:	4619      	mov	r1, r3
 80013f6:	4814      	ldr	r0, [pc, #80]	; (8001448 <MX_TIM8_Init+0x13c>)
 80013f8:	f005 fdc6 	bl	8006f88 <HAL_TIM_PWM_ConfigChannel>
 80013fc:	4603      	mov	r3, r0
 80013fe:	2b00      	cmp	r3, #0
 8001400:	d001      	beq.n	8001406 <MX_TIM8_Init+0xfa>
  {
    Error_Handler();
 8001402:	f000 fa22 	bl	800184a <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001406:	2300      	movs	r3, #0
 8001408:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 800140a:	2300      	movs	r3, #0
 800140c:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800140e:	2300      	movs	r3, #0
 8001410:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001412:	2300      	movs	r3, #0
 8001414:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001416:	2300      	movs	r3, #0
 8001418:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 800141a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800141e:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001420:	2300      	movs	r3, #0
 8001422:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 8001424:	1d3b      	adds	r3, r7, #4
 8001426:	4619      	mov	r1, r3
 8001428:	4807      	ldr	r0, [pc, #28]	; (8001448 <MX_TIM8_Init+0x13c>)
 800142a:	f006 faeb 	bl	8007a04 <HAL_TIMEx_ConfigBreakDeadTime>
 800142e:	4603      	mov	r3, r0
 8001430:	2b00      	cmp	r3, #0
 8001432:	d001      	beq.n	8001438 <MX_TIM8_Init+0x12c>
  {
    Error_Handler();
 8001434:	f000 fa09 	bl	800184a <Error_Handler>
  }

  HAL_TIM_MspPostInit(&htim8);
 8001438:	4803      	ldr	r0, [pc, #12]	; (8001448 <MX_TIM8_Init+0x13c>)
 800143a:	f000 fce7 	bl	8001e0c <HAL_TIM_MspPostInit>

}
 800143e:	bf00      	nop
 8001440:	3758      	adds	r7, #88	; 0x58
 8001442:	46bd      	mov	sp, r7
 8001444:	bd80      	pop	{r7, pc}
 8001446:	bf00      	nop
 8001448:	20012e98 	.word	0x20012e98
 800144c:	40010400 	.word	0x40010400

08001450 <MX_USB_OTG_FS_USB_Init>:

void MX_USB_OTG_FS_USB_Init(void)
{
 8001450:	b480      	push	{r7}
 8001452:	af00      	add	r7, sp, #0

}
 8001454:	bf00      	nop
 8001456:	46bd      	mov	sp, r7
 8001458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800145c:	4770      	bx	lr
	...

08001460 <MX_GPIO_Init>:

void MX_GPIO_Init(void)
{
 8001460:	b580      	push	{r7, lr}
 8001462:	b08c      	sub	sp, #48	; 0x30
 8001464:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001466:	f107 031c 	add.w	r3, r7, #28
 800146a:	2200      	movs	r2, #0
 800146c:	601a      	str	r2, [r3, #0]
 800146e:	605a      	str	r2, [r3, #4]
 8001470:	609a      	str	r2, [r3, #8]
 8001472:	60da      	str	r2, [r3, #12]
 8001474:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001476:	2300      	movs	r3, #0
 8001478:	61bb      	str	r3, [r7, #24]
 800147a:	4b7c      	ldr	r3, [pc, #496]	; (800166c <MX_GPIO_Init+0x20c>)
 800147c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800147e:	4a7b      	ldr	r2, [pc, #492]	; (800166c <MX_GPIO_Init+0x20c>)
 8001480:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001484:	6313      	str	r3, [r2, #48]	; 0x30
 8001486:	4b79      	ldr	r3, [pc, #484]	; (800166c <MX_GPIO_Init+0x20c>)
 8001488:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800148a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800148e:	61bb      	str	r3, [r7, #24]
 8001490:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001492:	2300      	movs	r3, #0
 8001494:	617b      	str	r3, [r7, #20]
 8001496:	4b75      	ldr	r3, [pc, #468]	; (800166c <MX_GPIO_Init+0x20c>)
 8001498:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800149a:	4a74      	ldr	r2, [pc, #464]	; (800166c <MX_GPIO_Init+0x20c>)
 800149c:	f043 0304 	orr.w	r3, r3, #4
 80014a0:	6313      	str	r3, [r2, #48]	; 0x30
 80014a2:	4b72      	ldr	r3, [pc, #456]	; (800166c <MX_GPIO_Init+0x20c>)
 80014a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014a6:	f003 0304 	and.w	r3, r3, #4
 80014aa:	617b      	str	r3, [r7, #20]
 80014ac:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014ae:	2300      	movs	r3, #0
 80014b0:	613b      	str	r3, [r7, #16]
 80014b2:	4b6e      	ldr	r3, [pc, #440]	; (800166c <MX_GPIO_Init+0x20c>)
 80014b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014b6:	4a6d      	ldr	r2, [pc, #436]	; (800166c <MX_GPIO_Init+0x20c>)
 80014b8:	f043 0301 	orr.w	r3, r3, #1
 80014bc:	6313      	str	r3, [r2, #48]	; 0x30
 80014be:	4b6b      	ldr	r3, [pc, #428]	; (800166c <MX_GPIO_Init+0x20c>)
 80014c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014c2:	f003 0301 	and.w	r3, r3, #1
 80014c6:	613b      	str	r3, [r7, #16]
 80014c8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ca:	2300      	movs	r3, #0
 80014cc:	60fb      	str	r3, [r7, #12]
 80014ce:	4b67      	ldr	r3, [pc, #412]	; (800166c <MX_GPIO_Init+0x20c>)
 80014d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014d2:	4a66      	ldr	r2, [pc, #408]	; (800166c <MX_GPIO_Init+0x20c>)
 80014d4:	f043 0310 	orr.w	r3, r3, #16
 80014d8:	6313      	str	r3, [r2, #48]	; 0x30
 80014da:	4b64      	ldr	r3, [pc, #400]	; (800166c <MX_GPIO_Init+0x20c>)
 80014dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014de:	f003 0310 	and.w	r3, r3, #16
 80014e2:	60fb      	str	r3, [r7, #12]
 80014e4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014e6:	2300      	movs	r3, #0
 80014e8:	60bb      	str	r3, [r7, #8]
 80014ea:	4b60      	ldr	r3, [pc, #384]	; (800166c <MX_GPIO_Init+0x20c>)
 80014ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014ee:	4a5f      	ldr	r2, [pc, #380]	; (800166c <MX_GPIO_Init+0x20c>)
 80014f0:	f043 0302 	orr.w	r3, r3, #2
 80014f4:	6313      	str	r3, [r2, #48]	; 0x30
 80014f6:	4b5d      	ldr	r3, [pc, #372]	; (800166c <MX_GPIO_Init+0x20c>)
 80014f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014fa:	f003 0302 	and.w	r3, r3, #2
 80014fe:	60bb      	str	r3, [r7, #8]
 8001500:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001502:	2300      	movs	r3, #0
 8001504:	607b      	str	r3, [r7, #4]
 8001506:	4b59      	ldr	r3, [pc, #356]	; (800166c <MX_GPIO_Init+0x20c>)
 8001508:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800150a:	4a58      	ldr	r2, [pc, #352]	; (800166c <MX_GPIO_Init+0x20c>)
 800150c:	f043 0308 	orr.w	r3, r3, #8
 8001510:	6313      	str	r3, [r2, #48]	; 0x30
 8001512:	4b56      	ldr	r3, [pc, #344]	; (800166c <MX_GPIO_Init+0x20c>)
 8001514:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001516:	f003 0308 	and.w	r3, r3, #8
 800151a:	607b      	str	r3, [r7, #4]
 800151c:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, DISP_CS_Pin|DISP_DCRS_Pin|CAN_STBY_Pin, GPIO_PIN_RESET);
 800151e:	2200      	movs	r2, #0
 8001520:	f648 0101 	movw	r1, #34817	; 0x8801
 8001524:	4852      	ldr	r0, [pc, #328]	; (8001670 <MX_GPIO_Init+0x210>)
 8001526:	f002 fa99 	bl	8003a5c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DISP_RESET_Pin|DISP_ST_LED1_Pin|DISP_ST_LED2_Pin, GPIO_PIN_RESET);
 800152a:	2200      	movs	r2, #0
 800152c:	f44f 5150 	mov.w	r1, #13312	; 0x3400
 8001530:	4850      	ldr	r0, [pc, #320]	; (8001674 <MX_GPIO_Init+0x214>)
 8001532:	f002 fa93 	bl	8003a5c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DEBUG_LED1_GPIO_Port, DEBUG_LED1_Pin, GPIO_PIN_RESET);
 8001536:	2200      	movs	r2, #0
 8001538:	f44f 7180 	mov.w	r1, #256	; 0x100
 800153c:	484e      	ldr	r0, [pc, #312]	; (8001678 <MX_GPIO_Init+0x218>)
 800153e:	f002 fa8d 	bl	8003a5c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, LED4_Pin|LED5_Pin|LED3_Pin|LED2_Pin
 8001542:	2200      	movs	r2, #0
 8001544:	21f8      	movs	r1, #248	; 0xf8
 8001546:	484d      	ldr	r0, [pc, #308]	; (800167c <MX_GPIO_Init+0x21c>)
 8001548:	f002 fa88 	bl	8003a5c <HAL_GPIO_WritePin>
                          |LED1_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : HVIL_CURRENT_Pin DEBUG_BTN1_Pin */
  GPIO_InitStruct.Pin = HVIL_CURRENT_Pin|DEBUG_BTN1_Pin;
 800154c:	f240 2301 	movw	r3, #513	; 0x201
 8001550:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001552:	2300      	movs	r3, #0
 8001554:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001556:	2300      	movs	r3, #0
 8001558:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800155a:	f107 031c 	add.w	r3, r7, #28
 800155e:	4619      	mov	r1, r3
 8001560:	4845      	ldr	r0, [pc, #276]	; (8001678 <MX_GPIO_Init+0x218>)
 8001562:	f002 f8df 	bl	8003724 <HAL_GPIO_Init>

  /*Configure GPIO pins : DISP_CS_Pin DISP_DCRS_Pin CAN_STBY_Pin */
  GPIO_InitStruct.Pin = DISP_CS_Pin|DISP_DCRS_Pin|CAN_STBY_Pin;
 8001566:	f648 0301 	movw	r3, #34817	; 0x8801
 800156a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800156c:	2301      	movs	r3, #1
 800156e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001570:	2300      	movs	r3, #0
 8001572:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001574:	2300      	movs	r3, #0
 8001576:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001578:	f107 031c 	add.w	r3, r7, #28
 800157c:	4619      	mov	r1, r3
 800157e:	483c      	ldr	r0, [pc, #240]	; (8001670 <MX_GPIO_Init+0x210>)
 8001580:	f002 f8d0 	bl	8003724 <HAL_GPIO_Init>

  /*Configure GPIO pins : DISP_RESET_Pin DISP_ST_LED1_Pin DISP_ST_LED2_Pin */
  GPIO_InitStruct.Pin = DISP_RESET_Pin|DISP_ST_LED1_Pin|DISP_ST_LED2_Pin;
 8001584:	f44f 5350 	mov.w	r3, #13312	; 0x3400
 8001588:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800158a:	2301      	movs	r3, #1
 800158c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800158e:	2300      	movs	r3, #0
 8001590:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001592:	2300      	movs	r3, #0
 8001594:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001596:	f107 031c 	add.w	r3, r7, #28
 800159a:	4619      	mov	r1, r3
 800159c:	4835      	ldr	r0, [pc, #212]	; (8001674 <MX_GPIO_Init+0x214>)
 800159e:	f002 f8c1 	bl	8003724 <HAL_GPIO_Init>

  /*Configure GPIO pins : BTN6_Pin BTN5_Pin */
  GPIO_InitStruct.Pin = BTN6_Pin|BTN5_Pin;
 80015a2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 80015a6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80015a8:	2300      	movs	r3, #0
 80015aa:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015ac:	2300      	movs	r3, #0
 80015ae:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015b0:	f107 031c 	add.w	r3, r7, #28
 80015b4:	4619      	mov	r1, r3
 80015b6:	482f      	ldr	r0, [pc, #188]	; (8001674 <MX_GPIO_Init+0x214>)
 80015b8:	f002 f8b4 	bl	8003724 <HAL_GPIO_Init>

  /*Configure GPIO pins : BTN4_Pin BTN3_Pin BTN2_Pin BTN1_Pin
                           ROT_ENC_A_Pin ROT_ENC_B_Pin */
  GPIO_InitStruct.Pin = BTN4_Pin|BTN3_Pin|BTN2_Pin|BTN1_Pin
 80015bc:	f44f 537c 	mov.w	r3, #16128	; 0x3f00
 80015c0:	61fb      	str	r3, [r7, #28]
                          |ROT_ENC_A_Pin|ROT_ENC_B_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80015c2:	2300      	movs	r3, #0
 80015c4:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015c6:	2300      	movs	r3, #0
 80015c8:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ca:	f107 031c 	add.w	r3, r7, #28
 80015ce:	4619      	mov	r1, r3
 80015d0:	482a      	ldr	r0, [pc, #168]	; (800167c <MX_GPIO_Init+0x21c>)
 80015d2:	f002 f8a7 	bl	8003724 <HAL_GPIO_Init>

  /*Configure GPIO pin : DEBUG_LED1_Pin */
  GPIO_InitStruct.Pin = DEBUG_LED1_Pin;
 80015d6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80015da:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015dc:	2301      	movs	r3, #1
 80015de:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e0:	2300      	movs	r3, #0
 80015e2:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015e4:	2300      	movs	r3, #0
 80015e6:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(DEBUG_LED1_GPIO_Port, &GPIO_InitStruct);
 80015e8:	f107 031c 	add.w	r3, r7, #28
 80015ec:	4619      	mov	r1, r3
 80015ee:	4822      	ldr	r0, [pc, #136]	; (8001678 <MX_GPIO_Init+0x218>)
 80015f0:	f002 f898 	bl	8003724 <HAL_GPIO_Init>

  /*Configure GPIO pins : DEBUG_BTN2_Pin DEBUG_LED2_Pin */
  GPIO_InitStruct.Pin = DEBUG_BTN2_Pin|DEBUG_LED2_Pin;
 80015f4:	f44f 7340 	mov.w	r3, #768	; 0x300
 80015f8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80015fa:	2300      	movs	r3, #0
 80015fc:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015fe:	2300      	movs	r3, #0
 8001600:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001602:	f107 031c 	add.w	r3, r7, #28
 8001606:	4619      	mov	r1, r3
 8001608:	481d      	ldr	r0, [pc, #116]	; (8001680 <MX_GPIO_Init+0x220>)
 800160a:	f002 f88b 	bl	8003724 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA10 PA11 PA12 */
  GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 800160e:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 8001612:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001614:	2302      	movs	r3, #2
 8001616:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001618:	2300      	movs	r3, #0
 800161a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800161c:	2303      	movs	r3, #3
 800161e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 8001620:	230a      	movs	r3, #10
 8001622:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001624:	f107 031c 	add.w	r3, r7, #28
 8001628:	4619      	mov	r1, r3
 800162a:	4815      	ldr	r0, [pc, #84]	; (8001680 <MX_GPIO_Init+0x220>)
 800162c:	f002 f87a 	bl	8003724 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED4_Pin LED5_Pin LED3_Pin LED2_Pin
                           LED1_Pin */
  GPIO_InitStruct.Pin = LED4_Pin|LED5_Pin|LED3_Pin|LED2_Pin
 8001630:	23f8      	movs	r3, #248	; 0xf8
 8001632:	61fb      	str	r3, [r7, #28]
                          |LED1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001634:	2301      	movs	r3, #1
 8001636:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001638:	2300      	movs	r3, #0
 800163a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800163c:	2300      	movs	r3, #0
 800163e:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001640:	f107 031c 	add.w	r3, r7, #28
 8001644:	4619      	mov	r1, r3
 8001646:	480d      	ldr	r0, [pc, #52]	; (800167c <MX_GPIO_Init+0x21c>)
 8001648:	f002 f86c 	bl	8003724 <HAL_GPIO_Init>

  /*Configure GPIO pin : HVIL_FAULT_Pin */
  GPIO_InitStruct.Pin = HVIL_FAULT_Pin;
 800164c:	2302      	movs	r3, #2
 800164e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001650:	2300      	movs	r3, #0
 8001652:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001654:	2300      	movs	r3, #0
 8001656:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(HVIL_FAULT_GPIO_Port, &GPIO_InitStruct);
 8001658:	f107 031c 	add.w	r3, r7, #28
 800165c:	4619      	mov	r1, r3
 800165e:	4804      	ldr	r0, [pc, #16]	; (8001670 <MX_GPIO_Init+0x210>)
 8001660:	f002 f860 	bl	8003724 <HAL_GPIO_Init>

}
 8001664:	bf00      	nop
 8001666:	3730      	adds	r7, #48	; 0x30
 8001668:	46bd      	mov	sp, r7
 800166a:	bd80      	pop	{r7, pc}
 800166c:	40023800 	.word	0x40023800
 8001670:	40021000 	.word	0x40021000
 8001674:	40020400 	.word	0x40020400
 8001678:	40020800 	.word	0x40020800
 800167c:	40020c00 	.word	0x40020c00
 8001680:	40020000 	.word	0x40020000

08001684 <Led_Init>:
 */

#include "led.h"
#include "main.h"

void Led_Init(void) {
 8001684:	b580      	push	{r7, lr}
 8001686:	af00      	add	r7, sp, #0
	Led_Off(LED_ID_1);
 8001688:	2000      	movs	r0, #0
 800168a:	f000 f815 	bl	80016b8 <Led_Off>
	Led_Off(LED_ID_2);
 800168e:	2001      	movs	r0, #1
 8001690:	f000 f812 	bl	80016b8 <Led_Off>
	Led_Off(LED_ID_3);
 8001694:	2002      	movs	r0, #2
 8001696:	f000 f80f 	bl	80016b8 <Led_Off>
	Led_Off(LED_ID_4);
 800169a:	2003      	movs	r0, #3
 800169c:	f000 f80c 	bl	80016b8 <Led_Off>
	Led_Off(LED_ID_5);
 80016a0:	2004      	movs	r0, #4
 80016a2:	f000 f809 	bl	80016b8 <Led_Off>
	Led_Off(LED_ID_DEBUG1);
 80016a6:	2005      	movs	r0, #5
 80016a8:	f000 f806 	bl	80016b8 <Led_Off>
	Led_Off(LED_ID_DEBUG2);
 80016ac:	2006      	movs	r0, #6
 80016ae:	f000 f803 	bl	80016b8 <Led_Off>
}
 80016b2:	bf00      	nop
 80016b4:	bd80      	pop	{r7, pc}
	...

080016b8 <Led_Off>:
		default:
			break;
	}
}

void Led_Off(led_id_t led_id) {
 80016b8:	b580      	push	{r7, lr}
 80016ba:	b082      	sub	sp, #8
 80016bc:	af00      	add	r7, sp, #0
 80016be:	4603      	mov	r3, r0
 80016c0:	71fb      	strb	r3, [r7, #7]
	switch (led_id) {
 80016c2:	79fb      	ldrb	r3, [r7, #7]
 80016c4:	2b06      	cmp	r3, #6
 80016c6:	d83d      	bhi.n	8001744 <Led_Off+0x8c>
 80016c8:	a201      	add	r2, pc, #4	; (adr r2, 80016d0 <Led_Off+0x18>)
 80016ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80016ce:	bf00      	nop
 80016d0:	080016ed 	.word	0x080016ed
 80016d4:	080016f9 	.word	0x080016f9
 80016d8:	08001705 	.word	0x08001705
 80016dc:	08001711 	.word	0x08001711
 80016e0:	0800171d 	.word	0x0800171d
 80016e4:	08001729 	.word	0x08001729
 80016e8:	08001737 	.word	0x08001737
			case LED_ID_1:
				HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET);
 80016ec:	2200      	movs	r2, #0
 80016ee:	2180      	movs	r1, #128	; 0x80
 80016f0:	4817      	ldr	r0, [pc, #92]	; (8001750 <Led_Off+0x98>)
 80016f2:	f002 f9b3 	bl	8003a5c <HAL_GPIO_WritePin>
				break;
 80016f6:	e026      	b.n	8001746 <Led_Off+0x8e>
			case LED_ID_2:
				HAL_GPIO_WritePin(LED2_GPIO_Port, LED2_Pin, GPIO_PIN_RESET);
 80016f8:	2200      	movs	r2, #0
 80016fa:	2140      	movs	r1, #64	; 0x40
 80016fc:	4814      	ldr	r0, [pc, #80]	; (8001750 <Led_Off+0x98>)
 80016fe:	f002 f9ad 	bl	8003a5c <HAL_GPIO_WritePin>
				break;
 8001702:	e020      	b.n	8001746 <Led_Off+0x8e>
			case LED_ID_3:
				HAL_GPIO_WritePin(LED3_GPIO_Port, LED3_Pin, GPIO_PIN_RESET);
 8001704:	2200      	movs	r2, #0
 8001706:	2120      	movs	r1, #32
 8001708:	4811      	ldr	r0, [pc, #68]	; (8001750 <Led_Off+0x98>)
 800170a:	f002 f9a7 	bl	8003a5c <HAL_GPIO_WritePin>
				break;
 800170e:	e01a      	b.n	8001746 <Led_Off+0x8e>
			case LED_ID_4:
				HAL_GPIO_WritePin(LED4_GPIO_Port, LED4_Pin, GPIO_PIN_RESET);
 8001710:	2200      	movs	r2, #0
 8001712:	2108      	movs	r1, #8
 8001714:	480e      	ldr	r0, [pc, #56]	; (8001750 <Led_Off+0x98>)
 8001716:	f002 f9a1 	bl	8003a5c <HAL_GPIO_WritePin>
				break;
 800171a:	e014      	b.n	8001746 <Led_Off+0x8e>
			case LED_ID_5:
				HAL_GPIO_WritePin(LED5_GPIO_Port, LED5_Pin, GPIO_PIN_RESET);
 800171c:	2200      	movs	r2, #0
 800171e:	2110      	movs	r1, #16
 8001720:	480b      	ldr	r0, [pc, #44]	; (8001750 <Led_Off+0x98>)
 8001722:	f002 f99b 	bl	8003a5c <HAL_GPIO_WritePin>
				break;
 8001726:	e00e      	b.n	8001746 <Led_Off+0x8e>
			case LED_ID_DEBUG1:
				HAL_GPIO_WritePin(DEBUG_LED1_GPIO_Port, DEBUG_LED1_Pin, GPIO_PIN_RESET);
 8001728:	2200      	movs	r2, #0
 800172a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800172e:	4809      	ldr	r0, [pc, #36]	; (8001754 <Led_Off+0x9c>)
 8001730:	f002 f994 	bl	8003a5c <HAL_GPIO_WritePin>
				break;
 8001734:	e007      	b.n	8001746 <Led_Off+0x8e>
			case LED_ID_DEBUG2:
				HAL_GPIO_WritePin(DEBUG_LED2_GPIO_Port, DEBUG_LED2_Pin, GPIO_PIN_RESET);
 8001736:	2200      	movs	r2, #0
 8001738:	f44f 7100 	mov.w	r1, #512	; 0x200
 800173c:	4806      	ldr	r0, [pc, #24]	; (8001758 <Led_Off+0xa0>)
 800173e:	f002 f98d 	bl	8003a5c <HAL_GPIO_WritePin>
				break;
 8001742:	e000      	b.n	8001746 <Led_Off+0x8e>
			default:
				break;
 8001744:	bf00      	nop
		}
}
 8001746:	bf00      	nop
 8001748:	3708      	adds	r7, #8
 800174a:	46bd      	mov	sp, r7
 800174c:	bd80      	pop	{r7, pc}
 800174e:	bf00      	nop
 8001750:	40020c00 	.word	0x40020c00
 8001754:	40020800 	.word	0x40020800
 8001758:	40020000 	.word	0x40020000

0800175c <Led_Toggle>:

void Led_Toggle(led_id_t led_id) {
 800175c:	b580      	push	{r7, lr}
 800175e:	b082      	sub	sp, #8
 8001760:	af00      	add	r7, sp, #0
 8001762:	4603      	mov	r3, r0
 8001764:	71fb      	strb	r3, [r7, #7]
	switch (led_id) {
 8001766:	79fb      	ldrb	r3, [r7, #7]
 8001768:	2b06      	cmp	r3, #6
 800176a:	d836      	bhi.n	80017da <Led_Toggle+0x7e>
 800176c:	a201      	add	r2, pc, #4	; (adr r2, 8001774 <Led_Toggle+0x18>)
 800176e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001772:	bf00      	nop
 8001774:	08001791 	.word	0x08001791
 8001778:	0800179b 	.word	0x0800179b
 800177c:	080017a5 	.word	0x080017a5
 8001780:	080017af 	.word	0x080017af
 8001784:	080017b9 	.word	0x080017b9
 8001788:	080017c3 	.word	0x080017c3
 800178c:	080017cf 	.word	0x080017cf
		case LED_ID_1:
			HAL_GPIO_TogglePin(LED1_GPIO_Port, LED1_Pin);
 8001790:	2180      	movs	r1, #128	; 0x80
 8001792:	4814      	ldr	r0, [pc, #80]	; (80017e4 <Led_Toggle+0x88>)
 8001794:	f002 f97b 	bl	8003a8e <HAL_GPIO_TogglePin>
			break;
 8001798:	e020      	b.n	80017dc <Led_Toggle+0x80>
		case LED_ID_2:
			HAL_GPIO_TogglePin(LED2_GPIO_Port, LED2_Pin);
 800179a:	2140      	movs	r1, #64	; 0x40
 800179c:	4811      	ldr	r0, [pc, #68]	; (80017e4 <Led_Toggle+0x88>)
 800179e:	f002 f976 	bl	8003a8e <HAL_GPIO_TogglePin>
			break;
 80017a2:	e01b      	b.n	80017dc <Led_Toggle+0x80>
		case LED_ID_3:
			HAL_GPIO_TogglePin(LED3_GPIO_Port, LED3_Pin);
 80017a4:	2120      	movs	r1, #32
 80017a6:	480f      	ldr	r0, [pc, #60]	; (80017e4 <Led_Toggle+0x88>)
 80017a8:	f002 f971 	bl	8003a8e <HAL_GPIO_TogglePin>
			break;
 80017ac:	e016      	b.n	80017dc <Led_Toggle+0x80>
		case LED_ID_4:
			HAL_GPIO_TogglePin(LED4_GPIO_Port, LED4_Pin);
 80017ae:	2108      	movs	r1, #8
 80017b0:	480c      	ldr	r0, [pc, #48]	; (80017e4 <Led_Toggle+0x88>)
 80017b2:	f002 f96c 	bl	8003a8e <HAL_GPIO_TogglePin>
			break;
 80017b6:	e011      	b.n	80017dc <Led_Toggle+0x80>
		case LED_ID_5:
			HAL_GPIO_TogglePin(LED5_GPIO_Port, LED5_Pin);
 80017b8:	2110      	movs	r1, #16
 80017ba:	480a      	ldr	r0, [pc, #40]	; (80017e4 <Led_Toggle+0x88>)
 80017bc:	f002 f967 	bl	8003a8e <HAL_GPIO_TogglePin>
			break;
 80017c0:	e00c      	b.n	80017dc <Led_Toggle+0x80>
		case LED_ID_DEBUG1:
			HAL_GPIO_TogglePin(DEBUG_LED1_GPIO_Port, DEBUG_LED1_Pin);
 80017c2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80017c6:	4808      	ldr	r0, [pc, #32]	; (80017e8 <Led_Toggle+0x8c>)
 80017c8:	f002 f961 	bl	8003a8e <HAL_GPIO_TogglePin>
			break;
 80017cc:	e006      	b.n	80017dc <Led_Toggle+0x80>
		case LED_ID_DEBUG2:
			HAL_GPIO_TogglePin(DEBUG_LED2_GPIO_Port, DEBUG_LED2_Pin);
 80017ce:	f44f 7100 	mov.w	r1, #512	; 0x200
 80017d2:	4806      	ldr	r0, [pc, #24]	; (80017ec <Led_Toggle+0x90>)
 80017d4:	f002 f95b 	bl	8003a8e <HAL_GPIO_TogglePin>
			break;
 80017d8:	e000      	b.n	80017dc <Led_Toggle+0x80>
		default:
			break;
 80017da:	bf00      	nop
	}
}
 80017dc:	bf00      	nop
 80017de:	3708      	adds	r7, #8
 80017e0:	46bd      	mov	sp, r7
 80017e2:	bd80      	pop	{r7, pc}
 80017e4:	40020c00 	.word	0x40020c00
 80017e8:	40020800 	.word	0x40020800
 80017ec:	40020000 	.word	0x40020000

080017f0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80017f0:	b580      	push	{r7, lr}
 80017f2:	af00      	add	r7, sp, #0

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 80017f4:	f000 fea8 	bl	8002548 <HAL_Init>

	/* Configure the system clock */
	SystemClock_Config();
 80017f8:	f7ff fb84 	bl	8000f04 <SystemClock_Config>

	/* Initialize all configured peripherals */
	MX_GPIO_Init();				// GPIO pins
 80017fc:	f7ff fe30 	bl	8001460 <MX_GPIO_Init>
	MX_ADC1_Init();				// potentiometers
 8001800:	f7ff fbee 	bl	8000fe0 <MX_ADC1_Init>
	MX_CAN1_Init();				// CAN bus
 8001804:	f7ff fc3e 	bl	8001084 <MX_CAN1_Init>
	MX_USB_OTG_FS_USB_Init();	// USB interface
 8001808:	f7ff fe22 	bl	8001450 <MX_USB_OTG_FS_USB_Init>
	MX_I2C1_Init();				// Segmented display
 800180c:	f7ff fc6e 	bl	80010ec <MX_I2C1_Init>
	MX_SPI4_Init();				// LCD display
 8001810:	f7ff fc9a 	bl	8001148 <MX_SPI4_Init>
	MX_TIM2_Init();				// 1s interrupt timer
 8001814:	f7ff fcce 	bl	80011b4 <MX_TIM2_Init>
	MX_TIM3_Init();				// 1ms interrupt timer
 8001818:	f7ff fd22 	bl	8001260 <MX_TIM3_Init>
	MX_TIM8_Init();				// Speaker PWM
 800181c:	f7ff fd76 	bl	800130c <MX_TIM8_Init>

	/* Turn off all LEDs */
	Led_Init();
 8001820:	f7ff ff30 	bl	8001684 <Led_Init>

	/* Reset button controllers */
	Button_Init();
 8001824:	f7fe fe70 	bl	8000508 <Button_Init>

	/* Initialize rotary encoder controllers */
	Encoder_Init();
 8001828:	f7ff f944 	bl	8000ab4 <Encoder_Init>

	/* Initialize potentiometer controllers */
	Pot_Init();
 800182c:	f000 f812 	bl	8001854 <Pot_Init>

	/* Initialize display */
	Display_Init();
 8001830:	f7fe ff54 	bl	80006dc <Display_Init>

	/* Initialize graphics unit */
	Gfx_Init();
 8001834:	f7ff f9ae 	bl	8000b94 <Gfx_Init>

	/* Initialize UI */
	UI_Init();
 8001838:	f000 fc0c 	bl	8002054 <UI_Init>

	/* Turn off speaker */
	Speaker_Init();
 800183c:	f000 f8c4 	bl	80019c8 <Speaker_Init>

	/* Initialize CAN bus communication */
	//CAN_Init();

	/* Initialize HVIL */
	HVIL_Init();
 8001840:	f7ff fb58 	bl	8000ef4 <HVIL_Init>

	/* Start interrupts from timer */
	Timer_EnableInterrupts();
 8001844:	f000 fb94 	bl	8001f70 <Timer_EnableInterrupts>


	while (1)
 8001848:	e7fe      	b.n	8001848 <main+0x58>

0800184a <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800184a:	b480      	push	{r7}
 800184c:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800184e:	b672      	cpsid	i
}
 8001850:	bf00      	nop
  __disable_irq();
  while (1)
 8001852:	e7fe      	b.n	8001852 <Error_Handler+0x8>

08001854 <Pot_Init>:
static pot_id_t current_pot = 0;

extern ADC_HandleTypeDef hadc1;
ADC_ChannelConfTypeDef sConfig = {0};

void Pot_Init(void) {
 8001854:	b480      	push	{r7}
 8001856:	b089      	sub	sp, #36	; 0x24
 8001858:	af00      	add	r7, sp, #0

	sConfig.Channel = ADC_CHANNEL_0;
 800185a:	4b15      	ldr	r3, [pc, #84]	; (80018b0 <Pot_Init+0x5c>)
 800185c:	2200      	movs	r2, #0
 800185e:	601a      	str	r2, [r3, #0]
	sConfig.Rank = 1;
 8001860:	4b13      	ldr	r3, [pc, #76]	; (80018b0 <Pot_Init+0x5c>)
 8001862:	2201      	movs	r2, #1
 8001864:	605a      	str	r2, [r3, #4]
	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001866:	4b12      	ldr	r3, [pc, #72]	; (80018b0 <Pot_Init+0x5c>)
 8001868:	2200      	movs	r2, #0
 800186a:	609a      	str	r2, [r3, #8]


	pot1 = (pot_t) {.id = POT_ID_1, .last_reading = 0, .adc_channel = ADC_CHANNEL_0};
 800186c:	4b11      	ldr	r3, [pc, #68]	; (80018b4 <Pot_Init+0x60>)
 800186e:	2200      	movs	r2, #0
 8001870:	701a      	strb	r2, [r3, #0]
 8001872:	4b10      	ldr	r3, [pc, #64]	; (80018b4 <Pot_Init+0x60>)
 8001874:	2200      	movs	r2, #0
 8001876:	805a      	strh	r2, [r3, #2]
 8001878:	4b0e      	ldr	r3, [pc, #56]	; (80018b4 <Pot_Init+0x60>)
 800187a:	2200      	movs	r2, #0
 800187c:	605a      	str	r2, [r3, #4]
	pot2 = (pot_t) {.id = POT_ID_2, .last_reading = 0, .adc_channel = ADC_CHANNEL_1};
 800187e:	4b0e      	ldr	r3, [pc, #56]	; (80018b8 <Pot_Init+0x64>)
 8001880:	4a0e      	ldr	r2, [pc, #56]	; (80018bc <Pot_Init+0x68>)
 8001882:	e892 0003 	ldmia.w	r2, {r0, r1}
 8001886:	e883 0003 	stmia.w	r3, {r0, r1}
	pot3 = (pot_t) {.id = POT_ID_3, .last_reading = 0, .adc_channel = ADC_CHANNEL_2};
 800188a:	4b0d      	ldr	r3, [pc, #52]	; (80018c0 <Pot_Init+0x6c>)
 800188c:	4a0d      	ldr	r2, [pc, #52]	; (80018c4 <Pot_Init+0x70>)
 800188e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8001892:	e883 0003 	stmia.w	r3, {r0, r1}
	pot4 = (pot_t) {.id = POT_ID_4, .last_reading = 0, .adc_channel = ADC_CHANNEL_3};
 8001896:	4b0c      	ldr	r3, [pc, #48]	; (80018c8 <Pot_Init+0x74>)
 8001898:	4a0c      	ldr	r2, [pc, #48]	; (80018cc <Pot_Init+0x78>)
 800189a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800189e:	e883 0003 	stmia.w	r3, {r0, r1}
}
 80018a2:	bf00      	nop
 80018a4:	3724      	adds	r7, #36	; 0x24
 80018a6:	46bd      	mov	sp, r7
 80018a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ac:	4770      	bx	lr
 80018ae:	bf00      	nop
 80018b0:	20012f04 	.word	0x20012f04
 80018b4:	20012ee0 	.word	0x20012ee0
 80018b8:	20012ee8 	.word	0x20012ee8
 80018bc:	08007bb0 	.word	0x08007bb0
 80018c0:	20012ef0 	.word	0x20012ef0
 80018c4:	08007bb8 	.word	0x08007bb8
 80018c8:	20012ef8 	.word	0x20012ef8
 80018cc:	08007bc0 	.word	0x08007bc0

080018d0 <Pot_EventHandler>:
/**
 * @brief Event handler for changes in pot values
 * @param id (pot_id_t) - id of pot that changed
 * @param sample (int16_t) - new value of pot
 */
static void Pot_EventHandler(pot_id_t id, int16_t sample) {
 80018d0:	b480      	push	{r7}
 80018d2:	b083      	sub	sp, #12
 80018d4:	af00      	add	r7, sp, #0
 80018d6:	4603      	mov	r3, r0
 80018d8:	460a      	mov	r2, r1
 80018da:	71fb      	strb	r3, [r7, #7]
 80018dc:	4613      	mov	r3, r2
 80018de:	80bb      	strh	r3, [r7, #4]
	switch (id) {
 80018e0:	79fb      	ldrb	r3, [r7, #7]
 80018e2:	2b03      	cmp	r3, #3
 80018e4:	d80a      	bhi.n	80018fc <Pot_EventHandler+0x2c>
 80018e6:	a201      	add	r2, pc, #4	; (adr r2, 80018ec <Pot_EventHandler+0x1c>)
 80018e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80018ec:	080018fd 	.word	0x080018fd
 80018f0:	080018fd 	.word	0x080018fd
 80018f4:	080018fd 	.word	0x080018fd
 80018f8:	080018fd 	.word	0x080018fd
		case POT_ID_3:
			break;
		case POT_ID_4:
			break;
		default:
			break;
 80018fc:	bf00      	nop
	}
}
 80018fe:	bf00      	nop
 8001900:	370c      	adds	r7, #12
 8001902:	46bd      	mov	sp, r7
 8001904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001908:	4770      	bx	lr
 800190a:	bf00      	nop

0800190c <Pot_Sample>:

void Pot_Sample(void) {
 800190c:	b580      	push	{r7, lr}
 800190e:	b082      	sub	sp, #8
 8001910:	af00      	add	r7, sp, #0
	// Get next pot to sample
	pot_t *pot = pot_list[current_pot];
 8001912:	4b29      	ldr	r3, [pc, #164]	; (80019b8 <Pot_Sample+0xac>)
 8001914:	781b      	ldrb	r3, [r3, #0]
 8001916:	461a      	mov	r2, r3
 8001918:	4b28      	ldr	r3, [pc, #160]	; (80019bc <Pot_Sample+0xb0>)
 800191a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800191e:	607b      	str	r3, [r7, #4]

	// Configure ADC channel for pot
	sConfig.Channel = pot->adc_channel;
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	685b      	ldr	r3, [r3, #4]
 8001924:	461a      	mov	r2, r3
 8001926:	4b26      	ldr	r3, [pc, #152]	; (80019c0 <Pot_Sample+0xb4>)
 8001928:	601a      	str	r2, [r3, #0]
	HAL_ADC_ConfigChannel(&hadc1, &sConfig);
 800192a:	4925      	ldr	r1, [pc, #148]	; (80019c0 <Pot_Sample+0xb4>)
 800192c:	4825      	ldr	r0, [pc, #148]	; (80019c4 <Pot_Sample+0xb8>)
 800192e:	f001 f865 	bl	80029fc <HAL_ADC_ConfigChannel>

	// Start blocking ADC conversion
	HAL_ADC_Start(&hadc1);
 8001932:	4824      	ldr	r0, [pc, #144]	; (80019c4 <Pot_Sample+0xb8>)
 8001934:	f000 fee2 	bl	80026fc <HAL_ADC_Start>
	HAL_ADC_PollForConversion(&hadc1, 100);
 8001938:	2164      	movs	r1, #100	; 0x64
 800193a:	4822      	ldr	r0, [pc, #136]	; (80019c4 <Pot_Sample+0xb8>)
 800193c:	f000 ffc5 	bl	80028ca <HAL_ADC_PollForConversion>
	int16_t sample = HAL_ADC_GetValue(&hadc1);
 8001940:	4820      	ldr	r0, [pc, #128]	; (80019c4 <Pot_Sample+0xb8>)
 8001942:	f001 f84d 	bl	80029e0 <HAL_ADC_GetValue>
 8001946:	4603      	mov	r3, r0
 8001948:	807b      	strh	r3, [r7, #2]
	HAL_ADC_Stop(&hadc1);
 800194a:	481e      	ldr	r0, [pc, #120]	; (80019c4 <Pot_Sample+0xb8>)
 800194c:	f000 ff8a 	bl	8002864 <HAL_ADC_Stop>

	// Only call event handler if pot changed value greater than noise threshold
	if (sample - pot->last_reading > ADC_NOISE_DELTA ||
 8001950:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001954:	687a      	ldr	r2, [r7, #4]
 8001956:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800195a:	1a9b      	subs	r3, r3, r2
 800195c:	2b64      	cmp	r3, #100	; 0x64
 800195e:	dc08      	bgt.n	8001972 <Pot_Sample+0x66>
		sample - pot->last_reading < -ADC_NOISE_DELTA) {
 8001960:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001964:	687a      	ldr	r2, [r7, #4]
 8001966:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 800196a:	1a9b      	subs	r3, r3, r2
	if (sample - pot->last_reading > ADC_NOISE_DELTA ||
 800196c:	f113 0f64 	cmn.w	r3, #100	; 0x64
 8001970:	da0a      	bge.n	8001988 <Pot_Sample+0x7c>
		pot->last_reading = sample;
 8001972:	687b      	ldr	r3, [r7, #4]
 8001974:	887a      	ldrh	r2, [r7, #2]
 8001976:	805a      	strh	r2, [r3, #2]
		Pot_EventHandler(pot->id, sample);
 8001978:	687b      	ldr	r3, [r7, #4]
 800197a:	781b      	ldrb	r3, [r3, #0]
 800197c:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8001980:	4611      	mov	r1, r2
 8001982:	4618      	mov	r0, r3
 8001984:	f7ff ffa4 	bl	80018d0 <Pot_EventHandler>
	}

	// Trigger sampling for next pot
	current_pot = (current_pot + 1) % POT_CNT;
 8001988:	4b0b      	ldr	r3, [pc, #44]	; (80019b8 <Pot_Sample+0xac>)
 800198a:	781b      	ldrb	r3, [r3, #0]
 800198c:	3301      	adds	r3, #1
 800198e:	425a      	negs	r2, r3
 8001990:	f003 0303 	and.w	r3, r3, #3
 8001994:	f002 0203 	and.w	r2, r2, #3
 8001998:	bf58      	it	pl
 800199a:	4253      	negpl	r3, r2
 800199c:	b2da      	uxtb	r2, r3
 800199e:	4b06      	ldr	r3, [pc, #24]	; (80019b8 <Pot_Sample+0xac>)
 80019a0:	701a      	strb	r2, [r3, #0]
	pot = pot_list[current_pot];
 80019a2:	4b05      	ldr	r3, [pc, #20]	; (80019b8 <Pot_Sample+0xac>)
 80019a4:	781b      	ldrb	r3, [r3, #0]
 80019a6:	461a      	mov	r2, r3
 80019a8:	4b04      	ldr	r3, [pc, #16]	; (80019bc <Pot_Sample+0xb0>)
 80019aa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80019ae:	607b      	str	r3, [r7, #4]
}
 80019b0:	bf00      	nop
 80019b2:	3708      	adds	r7, #8
 80019b4:	46bd      	mov	sp, r7
 80019b6:	bd80      	pop	{r7, pc}
 80019b8:	20012f00 	.word	0x20012f00
 80019bc:	20012c30 	.word	0x20012c30
 80019c0:	20012f04 	.word	0x20012f04
 80019c4:	20012cec 	.word	0x20012cec

080019c8 <Speaker_Init>:
    440,    // NOTE_A4
    466,    // NOTE_A4_SHARP
    494,    // NOTE_B4
};

void Speaker_Init(void) {
 80019c8:	b580      	push	{r7, lr}
 80019ca:	af00      	add	r7, sp, #0
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80019cc:	4b0c      	ldr	r3, [pc, #48]	; (8001a00 <Speaker_Init+0x38>)
 80019ce:	2260      	movs	r2, #96	; 0x60
 80019d0:	601a      	str	r2, [r3, #0]
	sConfigOC.Pulse = 0;
 80019d2:	4b0b      	ldr	r3, [pc, #44]	; (8001a00 <Speaker_Init+0x38>)
 80019d4:	2200      	movs	r2, #0
 80019d6:	605a      	str	r2, [r3, #4]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80019d8:	4b09      	ldr	r3, [pc, #36]	; (8001a00 <Speaker_Init+0x38>)
 80019da:	2200      	movs	r2, #0
 80019dc:	609a      	str	r2, [r3, #8]
	sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80019de:	4b08      	ldr	r3, [pc, #32]	; (8001a00 <Speaker_Init+0x38>)
 80019e0:	2200      	movs	r2, #0
 80019e2:	60da      	str	r2, [r3, #12]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80019e4:	4b06      	ldr	r3, [pc, #24]	; (8001a00 <Speaker_Init+0x38>)
 80019e6:	2200      	movs	r2, #0
 80019e8:	611a      	str	r2, [r3, #16]
	sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80019ea:	4b05      	ldr	r3, [pc, #20]	; (8001a00 <Speaker_Init+0x38>)
 80019ec:	2200      	movs	r2, #0
 80019ee:	615a      	str	r2, [r3, #20]
	sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80019f0:	4b03      	ldr	r3, [pc, #12]	; (8001a00 <Speaker_Init+0x38>)
 80019f2:	2200      	movs	r2, #0
 80019f4:	619a      	str	r2, [r3, #24]

	Speaker_SetTone(NOTE_OFF);
 80019f6:	2000      	movs	r0, #0
 80019f8:	f000 f804 	bl	8001a04 <Speaker_SetTone>
}
 80019fc:	bf00      	nop
 80019fe:	bd80      	pop	{r7, pc}
 8001a00:	20012f14 	.word	0x20012f14

08001a04 <Speaker_SetTone>:

void Speaker_SetTone(note_t note) {
 8001a04:	b580      	push	{r7, lr}
 8001a06:	b084      	sub	sp, #16
 8001a08:	af00      	add	r7, sp, #0
 8001a0a:	4603      	mov	r3, r0
 8001a0c:	71fb      	strb	r3, [r7, #7]
	if (note != NOTE_OFF) {
 8001a0e:	79fb      	ldrb	r3, [r7, #7]
 8001a10:	2b00      	cmp	r3, #0
 8001a12:	d023      	beq.n	8001a5c <Speaker_SetTone+0x58>
		HAL_TIM_PWM_Stop(&htim8, TIM_CHANNEL_1);
 8001a14:	2100      	movs	r1, #0
 8001a16:	4815      	ldr	r0, [pc, #84]	; (8001a6c <Speaker_SetTone+0x68>)
 8001a18:	f005 f8e2 	bl	8006be0 <HAL_TIM_PWM_Stop>

		// Update period of PWM
		uint16_t period = 40000 / note_frequencies[note];
 8001a1c:	79fb      	ldrb	r3, [r7, #7]
 8001a1e:	4a14      	ldr	r2, [pc, #80]	; (8001a70 <Speaker_SetTone+0x6c>)
 8001a20:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001a24:	461a      	mov	r2, r3
 8001a26:	f649 4340 	movw	r3, #40000	; 0x9c40
 8001a2a:	fb93 f3f2 	sdiv	r3, r3, r2
 8001a2e:	81fb      	strh	r3, [r7, #14]
		htim8.Init.Period = period;
 8001a30:	89fb      	ldrh	r3, [r7, #14]
 8001a32:	4a0e      	ldr	r2, [pc, #56]	; (8001a6c <Speaker_SetTone+0x68>)
 8001a34:	60d3      	str	r3, [r2, #12]
		HAL_TIM_Base_Init(&htim8);
 8001a36:	480d      	ldr	r0, [pc, #52]	; (8001a6c <Speaker_SetTone+0x68>)
 8001a38:	f004 fea2 	bl	8006780 <HAL_TIM_Base_Init>

		// Update duty cycle (50%)
		sConfigOC.Pulse = period / 2;
 8001a3c:	89fb      	ldrh	r3, [r7, #14]
 8001a3e:	085b      	lsrs	r3, r3, #1
 8001a40:	b29b      	uxth	r3, r3
 8001a42:	461a      	mov	r2, r3
 8001a44:	4b0b      	ldr	r3, [pc, #44]	; (8001a74 <Speaker_SetTone+0x70>)
 8001a46:	605a      	str	r2, [r3, #4]
		HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1);
 8001a48:	2200      	movs	r2, #0
 8001a4a:	490a      	ldr	r1, [pc, #40]	; (8001a74 <Speaker_SetTone+0x70>)
 8001a4c:	4807      	ldr	r0, [pc, #28]	; (8001a6c <Speaker_SetTone+0x68>)
 8001a4e:	f005 fa9b 	bl	8006f88 <HAL_TIM_PWM_ConfigChannel>

		// Start tone
		HAL_TIM_PWM_Start(&htim8, TIM_CHANNEL_1);
 8001a52:	2100      	movs	r1, #0
 8001a54:	4805      	ldr	r0, [pc, #20]	; (8001a6c <Speaker_SetTone+0x68>)
 8001a56:	f004 fffb 	bl	8006a50 <HAL_TIM_PWM_Start>
	} else {
		// Stop tone
		HAL_TIM_PWM_Stop(&htim8, TIM_CHANNEL_1);
	}
}
 8001a5a:	e003      	b.n	8001a64 <Speaker_SetTone+0x60>
		HAL_TIM_PWM_Stop(&htim8, TIM_CHANNEL_1);
 8001a5c:	2100      	movs	r1, #0
 8001a5e:	4803      	ldr	r0, [pc, #12]	; (8001a6c <Speaker_SetTone+0x68>)
 8001a60:	f005 f8be 	bl	8006be0 <HAL_TIM_PWM_Stop>
}
 8001a64:	bf00      	nop
 8001a66:	3710      	adds	r7, #16
 8001a68:	46bd      	mov	sp, r7
 8001a6a:	bd80      	pop	{r7, pc}
 8001a6c:	20012e98 	.word	0x20012e98
 8001a70:	08007bc8 	.word	0x08007bc8
 8001a74:	20012f14 	.word	0x20012f14

08001a78 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a78:	b480      	push	{r7}
 8001a7a:	b083      	sub	sp, #12
 8001a7c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a7e:	2300      	movs	r3, #0
 8001a80:	607b      	str	r3, [r7, #4]
 8001a82:	4b10      	ldr	r3, [pc, #64]	; (8001ac4 <HAL_MspInit+0x4c>)
 8001a84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a86:	4a0f      	ldr	r2, [pc, #60]	; (8001ac4 <HAL_MspInit+0x4c>)
 8001a88:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001a8c:	6453      	str	r3, [r2, #68]	; 0x44
 8001a8e:	4b0d      	ldr	r3, [pc, #52]	; (8001ac4 <HAL_MspInit+0x4c>)
 8001a90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a92:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001a96:	607b      	str	r3, [r7, #4]
 8001a98:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a9a:	2300      	movs	r3, #0
 8001a9c:	603b      	str	r3, [r7, #0]
 8001a9e:	4b09      	ldr	r3, [pc, #36]	; (8001ac4 <HAL_MspInit+0x4c>)
 8001aa0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001aa2:	4a08      	ldr	r2, [pc, #32]	; (8001ac4 <HAL_MspInit+0x4c>)
 8001aa4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001aa8:	6413      	str	r3, [r2, #64]	; 0x40
 8001aaa:	4b06      	ldr	r3, [pc, #24]	; (8001ac4 <HAL_MspInit+0x4c>)
 8001aac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001aae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ab2:	603b      	str	r3, [r7, #0]
 8001ab4:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001ab6:	bf00      	nop
 8001ab8:	370c      	adds	r7, #12
 8001aba:	46bd      	mov	sp, r7
 8001abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ac0:	4770      	bx	lr
 8001ac2:	bf00      	nop
 8001ac4:	40023800 	.word	0x40023800

08001ac8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001ac8:	b580      	push	{r7, lr}
 8001aca:	b08a      	sub	sp, #40	; 0x28
 8001acc:	af00      	add	r7, sp, #0
 8001ace:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ad0:	f107 0314 	add.w	r3, r7, #20
 8001ad4:	2200      	movs	r2, #0
 8001ad6:	601a      	str	r2, [r3, #0]
 8001ad8:	605a      	str	r2, [r3, #4]
 8001ada:	609a      	str	r2, [r3, #8]
 8001adc:	60da      	str	r2, [r3, #12]
 8001ade:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	4a17      	ldr	r2, [pc, #92]	; (8001b44 <HAL_ADC_MspInit+0x7c>)
 8001ae6:	4293      	cmp	r3, r2
 8001ae8:	d127      	bne.n	8001b3a <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001aea:	2300      	movs	r3, #0
 8001aec:	613b      	str	r3, [r7, #16]
 8001aee:	4b16      	ldr	r3, [pc, #88]	; (8001b48 <HAL_ADC_MspInit+0x80>)
 8001af0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001af2:	4a15      	ldr	r2, [pc, #84]	; (8001b48 <HAL_ADC_MspInit+0x80>)
 8001af4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001af8:	6453      	str	r3, [r2, #68]	; 0x44
 8001afa:	4b13      	ldr	r3, [pc, #76]	; (8001b48 <HAL_ADC_MspInit+0x80>)
 8001afc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001afe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b02:	613b      	str	r3, [r7, #16]
 8001b04:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b06:	2300      	movs	r3, #0
 8001b08:	60fb      	str	r3, [r7, #12]
 8001b0a:	4b0f      	ldr	r3, [pc, #60]	; (8001b48 <HAL_ADC_MspInit+0x80>)
 8001b0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b0e:	4a0e      	ldr	r2, [pc, #56]	; (8001b48 <HAL_ADC_MspInit+0x80>)
 8001b10:	f043 0301 	orr.w	r3, r3, #1
 8001b14:	6313      	str	r3, [r2, #48]	; 0x30
 8001b16:	4b0c      	ldr	r3, [pc, #48]	; (8001b48 <HAL_ADC_MspInit+0x80>)
 8001b18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b1a:	f003 0301 	and.w	r3, r3, #1
 8001b1e:	60fb      	str	r3, [r7, #12]
 8001b20:	68fb      	ldr	r3, [r7, #12]
    PA0     ------> ADC1_IN0
    PA1     ------> ADC1_IN1
    PA2     ------> ADC1_IN2
    PA3     ------> ADC1_IN3
    */
    GPIO_InitStruct.Pin = POT1_Pin|POT2_Pin|POT3_Pin|POT4_Pin;
 8001b22:	230f      	movs	r3, #15
 8001b24:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b26:	2303      	movs	r3, #3
 8001b28:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b2a:	2300      	movs	r3, #0
 8001b2c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b2e:	f107 0314 	add.w	r3, r7, #20
 8001b32:	4619      	mov	r1, r3
 8001b34:	4805      	ldr	r0, [pc, #20]	; (8001b4c <HAL_ADC_MspInit+0x84>)
 8001b36:	f001 fdf5 	bl	8003724 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001b3a:	bf00      	nop
 8001b3c:	3728      	adds	r7, #40	; 0x28
 8001b3e:	46bd      	mov	sp, r7
 8001b40:	bd80      	pop	{r7, pc}
 8001b42:	bf00      	nop
 8001b44:	40012000 	.word	0x40012000
 8001b48:	40023800 	.word	0x40023800
 8001b4c:	40020000 	.word	0x40020000

08001b50 <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 8001b50:	b580      	push	{r7, lr}
 8001b52:	b08a      	sub	sp, #40	; 0x28
 8001b54:	af00      	add	r7, sp, #0
 8001b56:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b58:	f107 0314 	add.w	r3, r7, #20
 8001b5c:	2200      	movs	r2, #0
 8001b5e:	601a      	str	r2, [r3, #0]
 8001b60:	605a      	str	r2, [r3, #4]
 8001b62:	609a      	str	r2, [r3, #8]
 8001b64:	60da      	str	r2, [r3, #12]
 8001b66:	611a      	str	r2, [r3, #16]
  if(hcan->Instance==CAN1)
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	681b      	ldr	r3, [r3, #0]
 8001b6c:	4a1d      	ldr	r2, [pc, #116]	; (8001be4 <HAL_CAN_MspInit+0x94>)
 8001b6e:	4293      	cmp	r3, r2
 8001b70:	d134      	bne.n	8001bdc <HAL_CAN_MspInit+0x8c>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CAN1_CLK_ENABLE();
 8001b72:	2300      	movs	r3, #0
 8001b74:	613b      	str	r3, [r7, #16]
 8001b76:	4b1c      	ldr	r3, [pc, #112]	; (8001be8 <HAL_CAN_MspInit+0x98>)
 8001b78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b7a:	4a1b      	ldr	r2, [pc, #108]	; (8001be8 <HAL_CAN_MspInit+0x98>)
 8001b7c:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001b80:	6413      	str	r3, [r2, #64]	; 0x40
 8001b82:	4b19      	ldr	r3, [pc, #100]	; (8001be8 <HAL_CAN_MspInit+0x98>)
 8001b84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b86:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001b8a:	613b      	str	r3, [r7, #16]
 8001b8c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b8e:	2300      	movs	r3, #0
 8001b90:	60fb      	str	r3, [r7, #12]
 8001b92:	4b15      	ldr	r3, [pc, #84]	; (8001be8 <HAL_CAN_MspInit+0x98>)
 8001b94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b96:	4a14      	ldr	r2, [pc, #80]	; (8001be8 <HAL_CAN_MspInit+0x98>)
 8001b98:	f043 0302 	orr.w	r3, r3, #2
 8001b9c:	6313      	str	r3, [r2, #48]	; 0x30
 8001b9e:	4b12      	ldr	r3, [pc, #72]	; (8001be8 <HAL_CAN_MspInit+0x98>)
 8001ba0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ba2:	f003 0302 	and.w	r3, r3, #2
 8001ba6:	60fb      	str	r3, [r7, #12]
 8001ba8:	68fb      	ldr	r3, [r7, #12]
    /**CAN1 GPIO Configuration
    PB8     ------> CAN1_RX
    PB9     ------> CAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001baa:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001bae:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bb0:	2302      	movs	r3, #2
 8001bb2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bb4:	2300      	movs	r3, #0
 8001bb6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bb8:	2303      	movs	r3, #3
 8001bba:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF8_CAN1;
 8001bbc:	2308      	movs	r3, #8
 8001bbe:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc0:	f107 0314 	add.w	r3, r7, #20
 8001bc4:	4619      	mov	r1, r3
 8001bc6:	4809      	ldr	r0, [pc, #36]	; (8001bec <HAL_CAN_MspInit+0x9c>)
 8001bc8:	f001 fdac 	bl	8003724 <HAL_GPIO_Init>

    /* CAN1 interrupt Init */
    HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 8001bcc:	2200      	movs	r2, #0
 8001bce:	2100      	movs	r1, #0
 8001bd0:	2015      	movs	r0, #21
 8001bd2:	f001 fd40 	bl	8003656 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 8001bd6:	2015      	movs	r0, #21
 8001bd8:	f001 fd59 	bl	800368e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN CAN1_MspInit 1 */

  /* USER CODE END CAN1_MspInit 1 */
  }

}
 8001bdc:	bf00      	nop
 8001bde:	3728      	adds	r7, #40	; 0x28
 8001be0:	46bd      	mov	sp, r7
 8001be2:	bd80      	pop	{r7, pc}
 8001be4:	40006400 	.word	0x40006400
 8001be8:	40023800 	.word	0x40023800
 8001bec:	40020400 	.word	0x40020400

08001bf0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001bf0:	b580      	push	{r7, lr}
 8001bf2:	b08a      	sub	sp, #40	; 0x28
 8001bf4:	af00      	add	r7, sp, #0
 8001bf6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bf8:	f107 0314 	add.w	r3, r7, #20
 8001bfc:	2200      	movs	r2, #0
 8001bfe:	601a      	str	r2, [r3, #0]
 8001c00:	605a      	str	r2, [r3, #4]
 8001c02:	609a      	str	r2, [r3, #8]
 8001c04:	60da      	str	r2, [r3, #12]
 8001c06:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	681b      	ldr	r3, [r3, #0]
 8001c0c:	4a21      	ldr	r2, [pc, #132]	; (8001c94 <HAL_I2C_MspInit+0xa4>)
 8001c0e:	4293      	cmp	r3, r2
 8001c10:	d13b      	bne.n	8001c8a <HAL_I2C_MspInit+0x9a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c12:	2300      	movs	r3, #0
 8001c14:	613b      	str	r3, [r7, #16]
 8001c16:	4b20      	ldr	r3, [pc, #128]	; (8001c98 <HAL_I2C_MspInit+0xa8>)
 8001c18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c1a:	4a1f      	ldr	r2, [pc, #124]	; (8001c98 <HAL_I2C_MspInit+0xa8>)
 8001c1c:	f043 0302 	orr.w	r3, r3, #2
 8001c20:	6313      	str	r3, [r2, #48]	; 0x30
 8001c22:	4b1d      	ldr	r3, [pc, #116]	; (8001c98 <HAL_I2C_MspInit+0xa8>)
 8001c24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c26:	f003 0302 	and.w	r3, r3, #2
 8001c2a:	613b      	str	r3, [r7, #16]
 8001c2c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = SEGDISP_SCL_Pin|SEGDISP_SDA_Pin;
 8001c2e:	23c0      	movs	r3, #192	; 0xc0
 8001c30:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c32:	2312      	movs	r3, #18
 8001c34:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c36:	2300      	movs	r3, #0
 8001c38:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c3a:	2303      	movs	r3, #3
 8001c3c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001c3e:	2304      	movs	r3, #4
 8001c40:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c42:	f107 0314 	add.w	r3, r7, #20
 8001c46:	4619      	mov	r1, r3
 8001c48:	4814      	ldr	r0, [pc, #80]	; (8001c9c <HAL_I2C_MspInit+0xac>)
 8001c4a:	f001 fd6b 	bl	8003724 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001c4e:	2300      	movs	r3, #0
 8001c50:	60fb      	str	r3, [r7, #12]
 8001c52:	4b11      	ldr	r3, [pc, #68]	; (8001c98 <HAL_I2C_MspInit+0xa8>)
 8001c54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c56:	4a10      	ldr	r2, [pc, #64]	; (8001c98 <HAL_I2C_MspInit+0xa8>)
 8001c58:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001c5c:	6413      	str	r3, [r2, #64]	; 0x40
 8001c5e:	4b0e      	ldr	r3, [pc, #56]	; (8001c98 <HAL_I2C_MspInit+0xa8>)
 8001c60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c62:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001c66:	60fb      	str	r3, [r7, #12]
 8001c68:	68fb      	ldr	r3, [r7, #12]
    /* I2C1 interrupt Init */
    HAL_NVIC_SetPriority(I2C1_EV_IRQn, 0, 0);
 8001c6a:	2200      	movs	r2, #0
 8001c6c:	2100      	movs	r1, #0
 8001c6e:	201f      	movs	r0, #31
 8001c70:	f001 fcf1 	bl	8003656 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C1_EV_IRQn);
 8001c74:	201f      	movs	r0, #31
 8001c76:	f001 fd0a 	bl	800368e <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(I2C1_ER_IRQn, 0, 0);
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	2100      	movs	r1, #0
 8001c7e:	2020      	movs	r0, #32
 8001c80:	f001 fce9 	bl	8003656 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C1_ER_IRQn);
 8001c84:	2020      	movs	r0, #32
 8001c86:	f001 fd02 	bl	800368e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001c8a:	bf00      	nop
 8001c8c:	3728      	adds	r7, #40	; 0x28
 8001c8e:	46bd      	mov	sp, r7
 8001c90:	bd80      	pop	{r7, pc}
 8001c92:	bf00      	nop
 8001c94:	40005400 	.word	0x40005400
 8001c98:	40023800 	.word	0x40023800
 8001c9c:	40020400 	.word	0x40020400

08001ca0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ca0:	b580      	push	{r7, lr}
 8001ca2:	b08a      	sub	sp, #40	; 0x28
 8001ca4:	af00      	add	r7, sp, #0
 8001ca6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ca8:	f107 0314 	add.w	r3, r7, #20
 8001cac:	2200      	movs	r2, #0
 8001cae:	601a      	str	r2, [r3, #0]
 8001cb0:	605a      	str	r2, [r3, #4]
 8001cb2:	609a      	str	r2, [r3, #8]
 8001cb4:	60da      	str	r2, [r3, #12]
 8001cb6:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI4)
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	4a1d      	ldr	r2, [pc, #116]	; (8001d34 <HAL_SPI_MspInit+0x94>)
 8001cbe:	4293      	cmp	r3, r2
 8001cc0:	d134      	bne.n	8001d2c <HAL_SPI_MspInit+0x8c>
  {
  /* USER CODE BEGIN SPI4_MspInit 0 */

  /* USER CODE END SPI4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI4_CLK_ENABLE();
 8001cc2:	2300      	movs	r3, #0
 8001cc4:	613b      	str	r3, [r7, #16]
 8001cc6:	4b1c      	ldr	r3, [pc, #112]	; (8001d38 <HAL_SPI_MspInit+0x98>)
 8001cc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001cca:	4a1b      	ldr	r2, [pc, #108]	; (8001d38 <HAL_SPI_MspInit+0x98>)
 8001ccc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001cd0:	6453      	str	r3, [r2, #68]	; 0x44
 8001cd2:	4b19      	ldr	r3, [pc, #100]	; (8001d38 <HAL_SPI_MspInit+0x98>)
 8001cd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001cd6:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8001cda:	613b      	str	r3, [r7, #16]
 8001cdc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001cde:	2300      	movs	r3, #0
 8001ce0:	60fb      	str	r3, [r7, #12]
 8001ce2:	4b15      	ldr	r3, [pc, #84]	; (8001d38 <HAL_SPI_MspInit+0x98>)
 8001ce4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ce6:	4a14      	ldr	r2, [pc, #80]	; (8001d38 <HAL_SPI_MspInit+0x98>)
 8001ce8:	f043 0310 	orr.w	r3, r3, #16
 8001cec:	6313      	str	r3, [r2, #48]	; 0x30
 8001cee:	4b12      	ldr	r3, [pc, #72]	; (8001d38 <HAL_SPI_MspInit+0x98>)
 8001cf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cf2:	f003 0310 	and.w	r3, r3, #16
 8001cf6:	60fb      	str	r3, [r7, #12]
 8001cf8:	68fb      	ldr	r3, [r7, #12]
    /**SPI4 GPIO Configuration
    PE12     ------> SPI4_SCK
    PE13     ------> SPI4_MISO
    PE14     ------> SPI4_MOSI
    */
    GPIO_InitStruct.Pin = DISP_SCK_Pin|DISP_MISO_Pin|DISP_MOSI_Pin;
 8001cfa:	f44f 43e0 	mov.w	r3, #28672	; 0x7000
 8001cfe:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d00:	2302      	movs	r3, #2
 8001d02:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d04:	2300      	movs	r3, #0
 8001d06:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d08:	2303      	movs	r3, #3
 8001d0a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI4;
 8001d0c:	2305      	movs	r3, #5
 8001d0e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d10:	f107 0314 	add.w	r3, r7, #20
 8001d14:	4619      	mov	r1, r3
 8001d16:	4809      	ldr	r0, [pc, #36]	; (8001d3c <HAL_SPI_MspInit+0x9c>)
 8001d18:	f001 fd04 	bl	8003724 <HAL_GPIO_Init>

    /* SPI4 interrupt Init */
    HAL_NVIC_SetPriority(SPI4_IRQn, 0, 0);
 8001d1c:	2200      	movs	r2, #0
 8001d1e:	2100      	movs	r1, #0
 8001d20:	2054      	movs	r0, #84	; 0x54
 8001d22:	f001 fc98 	bl	8003656 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI4_IRQn);
 8001d26:	2054      	movs	r0, #84	; 0x54
 8001d28:	f001 fcb1 	bl	800368e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN SPI4_MspInit 1 */

  /* USER CODE END SPI4_MspInit 1 */
  }

}
 8001d2c:	bf00      	nop
 8001d2e:	3728      	adds	r7, #40	; 0x28
 8001d30:	46bd      	mov	sp, r7
 8001d32:	bd80      	pop	{r7, pc}
 8001d34:	40013400 	.word	0x40013400
 8001d38:	40023800 	.word	0x40023800
 8001d3c:	40021000 	.word	0x40021000

08001d40 <HAL_TIM_OC_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_oc: TIM_OC handle pointer
* @retval None
*/
void HAL_TIM_OC_MspInit(TIM_HandleTypeDef* htim_oc)
{
 8001d40:	b580      	push	{r7, lr}
 8001d42:	b084      	sub	sp, #16
 8001d44:	af00      	add	r7, sp, #0
 8001d46:	6078      	str	r0, [r7, #4]
  if(htim_oc->Instance==TIM2)
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	681b      	ldr	r3, [r3, #0]
 8001d4c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001d50:	d116      	bne.n	8001d80 <HAL_TIM_OC_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001d52:	2300      	movs	r3, #0
 8001d54:	60fb      	str	r3, [r7, #12]
 8001d56:	4b1a      	ldr	r3, [pc, #104]	; (8001dc0 <HAL_TIM_OC_MspInit+0x80>)
 8001d58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d5a:	4a19      	ldr	r2, [pc, #100]	; (8001dc0 <HAL_TIM_OC_MspInit+0x80>)
 8001d5c:	f043 0301 	orr.w	r3, r3, #1
 8001d60:	6413      	str	r3, [r2, #64]	; 0x40
 8001d62:	4b17      	ldr	r3, [pc, #92]	; (8001dc0 <HAL_TIM_OC_MspInit+0x80>)
 8001d64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d66:	f003 0301 	and.w	r3, r3, #1
 8001d6a:	60fb      	str	r3, [r7, #12]
 8001d6c:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001d6e:	2200      	movs	r2, #0
 8001d70:	2100      	movs	r1, #0
 8001d72:	201c      	movs	r0, #28
 8001d74:	f001 fc6f 	bl	8003656 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001d78:	201c      	movs	r0, #28
 8001d7a:	f001 fc88 	bl	800368e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001d7e:	e01a      	b.n	8001db6 <HAL_TIM_OC_MspInit+0x76>
  else if(htim_oc->Instance==TIM3)
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	4a0f      	ldr	r2, [pc, #60]	; (8001dc4 <HAL_TIM_OC_MspInit+0x84>)
 8001d86:	4293      	cmp	r3, r2
 8001d88:	d115      	bne.n	8001db6 <HAL_TIM_OC_MspInit+0x76>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001d8a:	2300      	movs	r3, #0
 8001d8c:	60bb      	str	r3, [r7, #8]
 8001d8e:	4b0c      	ldr	r3, [pc, #48]	; (8001dc0 <HAL_TIM_OC_MspInit+0x80>)
 8001d90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d92:	4a0b      	ldr	r2, [pc, #44]	; (8001dc0 <HAL_TIM_OC_MspInit+0x80>)
 8001d94:	f043 0302 	orr.w	r3, r3, #2
 8001d98:	6413      	str	r3, [r2, #64]	; 0x40
 8001d9a:	4b09      	ldr	r3, [pc, #36]	; (8001dc0 <HAL_TIM_OC_MspInit+0x80>)
 8001d9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d9e:	f003 0302 	and.w	r3, r3, #2
 8001da2:	60bb      	str	r3, [r7, #8]
 8001da4:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001da6:	2200      	movs	r2, #0
 8001da8:	2100      	movs	r1, #0
 8001daa:	201d      	movs	r0, #29
 8001dac:	f001 fc53 	bl	8003656 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001db0:	201d      	movs	r0, #29
 8001db2:	f001 fc6c 	bl	800368e <HAL_NVIC_EnableIRQ>
}
 8001db6:	bf00      	nop
 8001db8:	3710      	adds	r7, #16
 8001dba:	46bd      	mov	sp, r7
 8001dbc:	bd80      	pop	{r7, pc}
 8001dbe:	bf00      	nop
 8001dc0:	40023800 	.word	0x40023800
 8001dc4:	40000400 	.word	0x40000400

08001dc8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001dc8:	b480      	push	{r7}
 8001dca:	b085      	sub	sp, #20
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM8)
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	681b      	ldr	r3, [r3, #0]
 8001dd4:	4a0b      	ldr	r2, [pc, #44]	; (8001e04 <HAL_TIM_Base_MspInit+0x3c>)
 8001dd6:	4293      	cmp	r3, r2
 8001dd8:	d10d      	bne.n	8001df6 <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM8_MspInit 0 */

  /* USER CODE END TIM8_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM8_CLK_ENABLE();
 8001dda:	2300      	movs	r3, #0
 8001ddc:	60fb      	str	r3, [r7, #12]
 8001dde:	4b0a      	ldr	r3, [pc, #40]	; (8001e08 <HAL_TIM_Base_MspInit+0x40>)
 8001de0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001de2:	4a09      	ldr	r2, [pc, #36]	; (8001e08 <HAL_TIM_Base_MspInit+0x40>)
 8001de4:	f043 0302 	orr.w	r3, r3, #2
 8001de8:	6453      	str	r3, [r2, #68]	; 0x44
 8001dea:	4b07      	ldr	r3, [pc, #28]	; (8001e08 <HAL_TIM_Base_MspInit+0x40>)
 8001dec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001dee:	f003 0302 	and.w	r3, r3, #2
 8001df2:	60fb      	str	r3, [r7, #12]
 8001df4:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 8001df6:	bf00      	nop
 8001df8:	3714      	adds	r7, #20
 8001dfa:	46bd      	mov	sp, r7
 8001dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e00:	4770      	bx	lr
 8001e02:	bf00      	nop
 8001e04:	40010400 	.word	0x40010400
 8001e08:	40023800 	.word	0x40023800

08001e0c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	b088      	sub	sp, #32
 8001e10:	af00      	add	r7, sp, #0
 8001e12:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e14:	f107 030c 	add.w	r3, r7, #12
 8001e18:	2200      	movs	r2, #0
 8001e1a:	601a      	str	r2, [r3, #0]
 8001e1c:	605a      	str	r2, [r3, #4]
 8001e1e:	609a      	str	r2, [r3, #8]
 8001e20:	60da      	str	r2, [r3, #12]
 8001e22:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM8)
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	681b      	ldr	r3, [r3, #0]
 8001e28:	4a12      	ldr	r2, [pc, #72]	; (8001e74 <HAL_TIM_MspPostInit+0x68>)
 8001e2a:	4293      	cmp	r3, r2
 8001e2c:	d11d      	bne.n	8001e6a <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM8_MspPostInit 0 */

  /* USER CODE END TIM8_MspPostInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e2e:	2300      	movs	r3, #0
 8001e30:	60bb      	str	r3, [r7, #8]
 8001e32:	4b11      	ldr	r3, [pc, #68]	; (8001e78 <HAL_TIM_MspPostInit+0x6c>)
 8001e34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e36:	4a10      	ldr	r2, [pc, #64]	; (8001e78 <HAL_TIM_MspPostInit+0x6c>)
 8001e38:	f043 0304 	orr.w	r3, r3, #4
 8001e3c:	6313      	str	r3, [r2, #48]	; 0x30
 8001e3e:	4b0e      	ldr	r3, [pc, #56]	; (8001e78 <HAL_TIM_MspPostInit+0x6c>)
 8001e40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e42:	f003 0304 	and.w	r3, r3, #4
 8001e46:	60bb      	str	r3, [r7, #8]
 8001e48:	68bb      	ldr	r3, [r7, #8]
    /**TIM8 GPIO Configuration
    PC6     ------> TIM8_CH1
    */
    GPIO_InitStruct.Pin = SPKR_PWM_Pin;
 8001e4a:	2340      	movs	r3, #64	; 0x40
 8001e4c:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e4e:	2302      	movs	r3, #2
 8001e50:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e52:	2300      	movs	r3, #0
 8001e54:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e56:	2300      	movs	r3, #0
 8001e58:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8001e5a:	2303      	movs	r3, #3
 8001e5c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(SPKR_PWM_GPIO_Port, &GPIO_InitStruct);
 8001e5e:	f107 030c 	add.w	r3, r7, #12
 8001e62:	4619      	mov	r1, r3
 8001e64:	4805      	ldr	r0, [pc, #20]	; (8001e7c <HAL_TIM_MspPostInit+0x70>)
 8001e66:	f001 fc5d 	bl	8003724 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM8_MspPostInit 1 */

  /* USER CODE END TIM8_MspPostInit 1 */
  }

}
 8001e6a:	bf00      	nop
 8001e6c:	3720      	adds	r7, #32
 8001e6e:	46bd      	mov	sp, r7
 8001e70:	bd80      	pop	{r7, pc}
 8001e72:	bf00      	nop
 8001e74:	40010400 	.word	0x40010400
 8001e78:	40023800 	.word	0x40023800
 8001e7c:	40020800 	.word	0x40020800

08001e80 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001e80:	b480      	push	{r7}
 8001e82:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001e84:	e7fe      	b.n	8001e84 <NMI_Handler+0x4>

08001e86 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001e86:	b480      	push	{r7}
 8001e88:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e8a:	e7fe      	b.n	8001e8a <HardFault_Handler+0x4>

08001e8c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001e8c:	b480      	push	{r7}
 8001e8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001e90:	e7fe      	b.n	8001e90 <MemManage_Handler+0x4>

08001e92 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001e92:	b480      	push	{r7}
 8001e94:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001e96:	e7fe      	b.n	8001e96 <BusFault_Handler+0x4>

08001e98 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001e98:	b480      	push	{r7}
 8001e9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001e9c:	e7fe      	b.n	8001e9c <UsageFault_Handler+0x4>

08001e9e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001e9e:	b480      	push	{r7}
 8001ea0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001ea2:	bf00      	nop
 8001ea4:	46bd      	mov	sp, r7
 8001ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eaa:	4770      	bx	lr

08001eac <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001eac:	b480      	push	{r7}
 8001eae:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001eb0:	bf00      	nop
 8001eb2:	46bd      	mov	sp, r7
 8001eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eb8:	4770      	bx	lr

08001eba <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001eba:	b480      	push	{r7}
 8001ebc:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001ebe:	bf00      	nop
 8001ec0:	46bd      	mov	sp, r7
 8001ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec6:	4770      	bx	lr

08001ec8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001ec8:	b580      	push	{r7, lr}
 8001eca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001ecc:	f000 fb8e 	bl	80025ec <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001ed0:	bf00      	nop
 8001ed2:	bd80      	pop	{r7, pc}

08001ed4 <CAN1_RX1_IRQHandler>:

/**
  * @brief This function handles CAN1 RX1 interrupt.
  */
void CAN1_RX1_IRQHandler(void)
{
 8001ed4:	b580      	push	{r7, lr}
 8001ed6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN1_RX1_IRQn 0 */

  /* USER CODE END CAN1_RX1_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan1);
 8001ed8:	4802      	ldr	r0, [pc, #8]	; (8001ee4 <CAN1_RX1_IRQHandler+0x10>)
 8001eda:	f001 f8a8 	bl	800302e <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN1_RX1_IRQn 1 */

  /* USER CODE END CAN1_RX1_IRQn 1 */
}
 8001ede:	bf00      	nop
 8001ee0:	bd80      	pop	{r7, pc}
 8001ee2:	bf00      	nop
 8001ee4:	20012d34 	.word	0x20012d34

08001ee8 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001eec:	4802      	ldr	r0, [pc, #8]	; (8001ef8 <TIM2_IRQHandler+0x10>)
 8001eee:	f004 fee7 	bl	8006cc0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001ef2:	bf00      	nop
 8001ef4:	bd80      	pop	{r7, pc}
 8001ef6:	bf00      	nop
 8001ef8:	20012e08 	.word	0x20012e08

08001efc <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001efc:	b580      	push	{r7, lr}
 8001efe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001f00:	4802      	ldr	r0, [pc, #8]	; (8001f0c <TIM3_IRQHandler+0x10>)
 8001f02:	f004 fedd 	bl	8006cc0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001f06:	bf00      	nop
 8001f08:	bd80      	pop	{r7, pc}
 8001f0a:	bf00      	nop
 8001f0c:	20012e50 	.word	0x20012e50

08001f10 <I2C1_EV_IRQHandler>:

/**
  * @brief This function handles I2C1 event interrupt.
  */
void I2C1_EV_IRQHandler(void)
{
 8001f10:	b580      	push	{r7, lr}
 8001f12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C1_EV_IRQn 0 */

  /* USER CODE END I2C1_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c1);
 8001f14:	4802      	ldr	r0, [pc, #8]	; (8001f20 <I2C1_EV_IRQHandler+0x10>)
 8001f16:	f001 ff19 	bl	8003d4c <HAL_I2C_EV_IRQHandler>
  /* USER CODE BEGIN I2C1_EV_IRQn 1 */

  /* USER CODE END I2C1_EV_IRQn 1 */
}
 8001f1a:	bf00      	nop
 8001f1c:	bd80      	pop	{r7, pc}
 8001f1e:	bf00      	nop
 8001f20:	20012d5c 	.word	0x20012d5c

08001f24 <I2C1_ER_IRQHandler>:

/**
  * @brief This function handles I2C1 error interrupt.
  */
void I2C1_ER_IRQHandler(void)
{
 8001f24:	b580      	push	{r7, lr}
 8001f26:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C1_ER_IRQn 0 */

  /* USER CODE END I2C1_ER_IRQn 0 */
  HAL_I2C_ER_IRQHandler(&hi2c1);
 8001f28:	4802      	ldr	r0, [pc, #8]	; (8001f34 <I2C1_ER_IRQHandler+0x10>)
 8001f2a:	f002 f880 	bl	800402e <HAL_I2C_ER_IRQHandler>
  /* USER CODE BEGIN I2C1_ER_IRQn 1 */

  /* USER CODE END I2C1_ER_IRQn 1 */
}
 8001f2e:	bf00      	nop
 8001f30:	bd80      	pop	{r7, pc}
 8001f32:	bf00      	nop
 8001f34:	20012d5c 	.word	0x20012d5c

08001f38 <SPI4_IRQHandler>:

/**
  * @brief This function handles SPI4 global interrupt.
  */
void SPI4_IRQHandler(void)
{
 8001f38:	b580      	push	{r7, lr}
 8001f3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI4_IRQn 0 */

  /* USER CODE END SPI4_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi4);
 8001f3c:	4802      	ldr	r0, [pc, #8]	; (8001f48 <SPI4_IRQHandler+0x10>)
 8001f3e:	f004 fa37 	bl	80063b0 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI4_IRQn 1 */

  /* USER CODE END SPI4_IRQn 1 */
}
 8001f42:	bf00      	nop
 8001f44:	bd80      	pop	{r7, pc}
 8001f46:	bf00      	nop
 8001f48:	20012db0 	.word	0x20012db0

08001f4c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001f4c:	b480      	push	{r7}
 8001f4e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001f50:	4b06      	ldr	r3, [pc, #24]	; (8001f6c <SystemInit+0x20>)
 8001f52:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001f56:	4a05      	ldr	r2, [pc, #20]	; (8001f6c <SystemInit+0x20>)
 8001f58:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001f5c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001f60:	bf00      	nop
 8001f62:	46bd      	mov	sp, r7
 8001f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f68:	4770      	bx	lr
 8001f6a:	bf00      	nop
 8001f6c:	e000ed00 	.word	0xe000ed00

08001f70 <Timer_EnableInterrupts>:

/* Stop watch variables (seconds) */
static uint32_t time_elapsed = 0;
static uint16_t current_ms = 0;

void Timer_EnableInterrupts(void) {
 8001f70:	b580      	push	{r7, lr}
 8001f72:	af00      	add	r7, sp, #0
	HAL_TIM_Base_Start_IT(&htim2);
 8001f74:	4803      	ldr	r0, [pc, #12]	; (8001f84 <Timer_EnableInterrupts+0x14>)
 8001f76:	f004 fc53 	bl	8006820 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim3);
 8001f7a:	4803      	ldr	r0, [pc, #12]	; (8001f88 <Timer_EnableInterrupts+0x18>)
 8001f7c:	f004 fc50 	bl	8006820 <HAL_TIM_Base_Start_IT>
}
 8001f80:	bf00      	nop
 8001f82:	bd80      	pop	{r7, pc}
 8001f84:	20012e08 	.word	0x20012e08
 8001f88:	20012e50 	.word	0x20012e50

08001f8c <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8001f8c:	b580      	push	{r7, lr}
 8001f8e:	b082      	sub	sp, #8
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	6078      	str	r0, [r7, #4]
	if (htim == &htim3) {
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	4a29      	ldr	r2, [pc, #164]	; (800203c <HAL_TIM_PeriodElapsedCallback+0xb0>)
 8001f98:	4293      	cmp	r3, r2
 8001f9a:	d119      	bne.n	8001fd0 <HAL_TIM_PeriodElapsedCallback+0x44>
		// Should be called every 1ms
		Button_Debounce();
 8001f9c:	f7fe fb50 	bl	8000640 <Button_Debounce>
		Encoder_Debounce();
 8001fa0:	f7fe fdbc 	bl	8000b1c <Encoder_Debounce>

		// Read different ADC every 50 ms
		if (current_ms % 50 == 0) {
 8001fa4:	4b26      	ldr	r3, [pc, #152]	; (8002040 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8001fa6:	881b      	ldrh	r3, [r3, #0]
 8001fa8:	4a26      	ldr	r2, [pc, #152]	; (8002044 <HAL_TIM_PeriodElapsedCallback+0xb8>)
 8001faa:	fba2 1203 	umull	r1, r2, r2, r3
 8001fae:	0912      	lsrs	r2, r2, #4
 8001fb0:	2132      	movs	r1, #50	; 0x32
 8001fb2:	fb01 f202 	mul.w	r2, r1, r2
 8001fb6:	1a9b      	subs	r3, r3, r2
 8001fb8:	b29b      	uxth	r3, r3
 8001fba:	2b00      	cmp	r3, #0
 8001fbc:	d101      	bne.n	8001fc2 <HAL_TIM_PeriodElapsedCallback+0x36>
			Pot_Sample();
 8001fbe:	f7ff fca5 	bl	800190c <Pot_Sample>
		}
		current_ms++;
 8001fc2:	4b1f      	ldr	r3, [pc, #124]	; (8002040 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8001fc4:	881b      	ldrh	r3, [r3, #0]
 8001fc6:	3301      	adds	r3, #1
 8001fc8:	b29a      	uxth	r2, r3
 8001fca:	4b1d      	ldr	r3, [pc, #116]	; (8002040 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 8001fcc:	801a      	strh	r2, [r3, #0]

		// Add one more second to time elapsed
		time_elapsed++;
		current_ms = 0;
	}
}
 8001fce:	e030      	b.n	8002032 <HAL_TIM_PeriodElapsedCallback+0xa6>
	} else if (htim == &htim2) {
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	4a1d      	ldr	r2, [pc, #116]	; (8002048 <HAL_TIM_PeriodElapsedCallback+0xbc>)
 8001fd4:	4293      	cmp	r3, r2
 8001fd6:	d12c      	bne.n	8002032 <HAL_TIM_PeriodElapsedCallback+0xa6>
		UI_Update_Laptime(time_elapsed);
 8001fd8:	4b1c      	ldr	r3, [pc, #112]	; (800204c <HAL_TIM_PeriodElapsedCallback+0xc0>)
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	4618      	mov	r0, r3
 8001fde:	f000 f847 	bl	8002070 <UI_Update_Laptime>
		UI_Update_BatteryPct(78);
 8001fe2:	204e      	movs	r0, #78	; 0x4e
 8001fe4:	f000 f8c8 	bl	8002178 <UI_Update_BatteryPct>
		UI_Update_RPM(2173);
 8001fe8:	f640 007d 	movw	r0, #2173	; 0x87d
 8001fec:	f000 f928 	bl	8002240 <UI_Update_RPM>
		UI_Update_Speedometer(69);
 8001ff0:	2045      	movs	r0, #69	; 0x45
 8001ff2:	f000 fa27 	bl	8002444 <UI_Update_Speedometer>
		if (time_elapsed % 10 == 0) {
 8001ff6:	4b15      	ldr	r3, [pc, #84]	; (800204c <HAL_TIM_PeriodElapsedCallback+0xc0>)
 8001ff8:	6819      	ldr	r1, [r3, #0]
 8001ffa:	4b15      	ldr	r3, [pc, #84]	; (8002050 <HAL_TIM_PeriodElapsedCallback+0xc4>)
 8001ffc:	fba3 2301 	umull	r2, r3, r3, r1
 8002000:	08da      	lsrs	r2, r3, #3
 8002002:	4613      	mov	r3, r2
 8002004:	009b      	lsls	r3, r3, #2
 8002006:	4413      	add	r3, r2
 8002008:	005b      	lsls	r3, r3, #1
 800200a:	1aca      	subs	r2, r1, r3
 800200c:	2a00      	cmp	r2, #0
 800200e:	d108      	bne.n	8002022 <HAL_TIM_PeriodElapsedCallback+0x96>
			UI_Update_WheelTemps(71,73,68,72);
 8002010:	2348      	movs	r3, #72	; 0x48
 8002012:	2244      	movs	r2, #68	; 0x44
 8002014:	2149      	movs	r1, #73	; 0x49
 8002016:	2047      	movs	r0, #71	; 0x47
 8002018:	f000 f976 	bl	8002308 <UI_Update_WheelTemps>
			UI_Update_CoolingTemp(23);
 800201c:	2017      	movs	r0, #23
 800201e:	f000 fa3d 	bl	800249c <UI_Update_CoolingTemp>
		time_elapsed++;
 8002022:	4b0a      	ldr	r3, [pc, #40]	; (800204c <HAL_TIM_PeriodElapsedCallback+0xc0>)
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	3301      	adds	r3, #1
 8002028:	4a08      	ldr	r2, [pc, #32]	; (800204c <HAL_TIM_PeriodElapsedCallback+0xc0>)
 800202a:	6013      	str	r3, [r2, #0]
		current_ms = 0;
 800202c:	4b04      	ldr	r3, [pc, #16]	; (8002040 <HAL_TIM_PeriodElapsedCallback+0xb4>)
 800202e:	2200      	movs	r2, #0
 8002030:	801a      	strh	r2, [r3, #0]
}
 8002032:	bf00      	nop
 8002034:	3708      	adds	r7, #8
 8002036:	46bd      	mov	sp, r7
 8002038:	bd80      	pop	{r7, pc}
 800203a:	bf00      	nop
 800203c:	20012e50 	.word	0x20012e50
 8002040:	20012f34 	.word	0x20012f34
 8002044:	51eb851f 	.word	0x51eb851f
 8002048:	20012e08 	.word	0x20012e08
 800204c:	20012f30 	.word	0x20012f30
 8002050:	cccccccd 	.word	0xcccccccd

08002054 <UI_Init>:
	.h = 320,
	.data = drive_mode_background_img,
	.data_len = DRIVE_MODE_BACKGROUND_IMG_LEN
};

void UI_Init(void) {
 8002054:	b580      	push	{r7, lr}
 8002056:	af00      	add	r7, sp, #0
	Gfx_SetBackground(COLOR_BLACK);
 8002058:	2000      	movs	r0, #0
 800205a:	f7fe fda3 	bl	8000ba4 <Gfx_SetBackground>
	Gfx_DrawImage(&background_img, 0, 0);
 800205e:	2200      	movs	r2, #0
 8002060:	2100      	movs	r1, #0
 8002062:	4802      	ldr	r0, [pc, #8]	; (800206c <UI_Init+0x18>)
 8002064:	f7fe fdf1 	bl	8000c4a <Gfx_DrawImage>
}
 8002068:	bf00      	nop
 800206a:	bd80      	pop	{r7, pc}
 800206c:	20012c44 	.word	0x20012c44

08002070 <UI_Update_Laptime>:

void UI_Reset_Laptime(uint32_t time_elapsed) {
	lap_time_start = time_elapsed;
}

void UI_Update_Laptime(uint32_t time_elapsed) {
 8002070:	b580      	push	{r7, lr}
 8002072:	b086      	sub	sp, #24
 8002074:	af02      	add	r7, sp, #8
 8002076:	6078      	str	r0, [r7, #4]
	uint8_t minutes = (time_elapsed - lap_time_start) / 60;
 8002078:	4b3c      	ldr	r3, [pc, #240]	; (800216c <UI_Update_Laptime+0xfc>)
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	687a      	ldr	r2, [r7, #4]
 800207e:	1ad3      	subs	r3, r2, r3
 8002080:	4a3b      	ldr	r2, [pc, #236]	; (8002170 <UI_Update_Laptime+0x100>)
 8002082:	fba2 2303 	umull	r2, r3, r2, r3
 8002086:	095b      	lsrs	r3, r3, #5
 8002088:	73fb      	strb	r3, [r7, #15]
	uint8_t seconds = (time_elapsed - lap_time_start) % 60;
 800208a:	4b38      	ldr	r3, [pc, #224]	; (800216c <UI_Update_Laptime+0xfc>)
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	687a      	ldr	r2, [r7, #4]
 8002090:	1ad1      	subs	r1, r2, r3
 8002092:	4b37      	ldr	r3, [pc, #220]	; (8002170 <UI_Update_Laptime+0x100>)
 8002094:	fba3 2301 	umull	r2, r3, r3, r1
 8002098:	095a      	lsrs	r2, r3, #5
 800209a:	4613      	mov	r3, r2
 800209c:	011b      	lsls	r3, r3, #4
 800209e:	1a9b      	subs	r3, r3, r2
 80020a0:	009b      	lsls	r3, r3, #2
 80020a2:	1aca      	subs	r2, r1, r3
 80020a4:	4613      	mov	r3, r2
 80020a6:	73bb      	strb	r3, [r7, #14]

	Gfx_Draw7SegDigit(325, 260, minutes / 10, 40, COLOR_PINK);
 80020a8:	7bfb      	ldrb	r3, [r7, #15]
 80020aa:	4a32      	ldr	r2, [pc, #200]	; (8002174 <UI_Update_Laptime+0x104>)
 80020ac:	fba2 2303 	umull	r2, r3, r2, r3
 80020b0:	08db      	lsrs	r3, r3, #3
 80020b2:	b2db      	uxtb	r3, r3
 80020b4:	b25a      	sxtb	r2, r3
 80020b6:	232d      	movs	r3, #45	; 0x2d
 80020b8:	9300      	str	r3, [sp, #0]
 80020ba:	2328      	movs	r3, #40	; 0x28
 80020bc:	f44f 7182 	mov.w	r1, #260	; 0x104
 80020c0:	f240 1045 	movw	r0, #325	; 0x145
 80020c4:	f7fe fde8 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(355, 260, minutes % 10, 40, COLOR_PINK);
 80020c8:	7bfa      	ldrb	r2, [r7, #15]
 80020ca:	4b2a      	ldr	r3, [pc, #168]	; (8002174 <UI_Update_Laptime+0x104>)
 80020cc:	fba3 1302 	umull	r1, r3, r3, r2
 80020d0:	08d9      	lsrs	r1, r3, #3
 80020d2:	460b      	mov	r3, r1
 80020d4:	009b      	lsls	r3, r3, #2
 80020d6:	440b      	add	r3, r1
 80020d8:	005b      	lsls	r3, r3, #1
 80020da:	1ad3      	subs	r3, r2, r3
 80020dc:	b2db      	uxtb	r3, r3
 80020de:	b25a      	sxtb	r2, r3
 80020e0:	232d      	movs	r3, #45	; 0x2d
 80020e2:	9300      	str	r3, [sp, #0]
 80020e4:	2328      	movs	r3, #40	; 0x28
 80020e6:	f44f 7182 	mov.w	r1, #260	; 0x104
 80020ea:	f240 1063 	movw	r0, #355	; 0x163
 80020ee:	f7fe fdd3 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(405, 260, seconds / 10, 40, COLOR_PINK);
 80020f2:	7bbb      	ldrb	r3, [r7, #14]
 80020f4:	4a1f      	ldr	r2, [pc, #124]	; (8002174 <UI_Update_Laptime+0x104>)
 80020f6:	fba2 2303 	umull	r2, r3, r2, r3
 80020fa:	08db      	lsrs	r3, r3, #3
 80020fc:	b2db      	uxtb	r3, r3
 80020fe:	b25a      	sxtb	r2, r3
 8002100:	232d      	movs	r3, #45	; 0x2d
 8002102:	9300      	str	r3, [sp, #0]
 8002104:	2328      	movs	r3, #40	; 0x28
 8002106:	f44f 7182 	mov.w	r1, #260	; 0x104
 800210a:	f240 1095 	movw	r0, #405	; 0x195
 800210e:	f7fe fdc3 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(435, 260, seconds % 10, 40, COLOR_PINK);
 8002112:	7bba      	ldrb	r2, [r7, #14]
 8002114:	4b17      	ldr	r3, [pc, #92]	; (8002174 <UI_Update_Laptime+0x104>)
 8002116:	fba3 1302 	umull	r1, r3, r3, r2
 800211a:	08d9      	lsrs	r1, r3, #3
 800211c:	460b      	mov	r3, r1
 800211e:	009b      	lsls	r3, r3, #2
 8002120:	440b      	add	r3, r1
 8002122:	005b      	lsls	r3, r3, #1
 8002124:	1ad3      	subs	r3, r2, r3
 8002126:	b2db      	uxtb	r3, r3
 8002128:	b25a      	sxtb	r2, r3
 800212a:	232d      	movs	r3, #45	; 0x2d
 800212c:	9300      	str	r3, [sp, #0]
 800212e:	2328      	movs	r3, #40	; 0x28
 8002130:	f44f 7182 	mov.w	r1, #260	; 0x104
 8002134:	f240 10b3 	movw	r0, #435	; 0x1b3
 8002138:	f7fe fdae 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_DrawFilledRect(390, 270, 5, 5, COLOR_PINK);
 800213c:	232d      	movs	r3, #45	; 0x2d
 800213e:	9300      	str	r3, [sp, #0]
 8002140:	2305      	movs	r3, #5
 8002142:	2205      	movs	r2, #5
 8002144:	f44f 7187 	mov.w	r1, #270	; 0x10e
 8002148:	f44f 70c3 	mov.w	r0, #390	; 0x186
 800214c:	f7fe fd42 	bl	8000bd4 <Gfx_DrawFilledRect>
	Gfx_DrawFilledRect(390, 290, 5, 5, COLOR_PINK);
 8002150:	232d      	movs	r3, #45	; 0x2d
 8002152:	9300      	str	r3, [sp, #0]
 8002154:	2305      	movs	r3, #5
 8002156:	2205      	movs	r2, #5
 8002158:	f44f 7191 	mov.w	r1, #290	; 0x122
 800215c:	f44f 70c3 	mov.w	r0, #390	; 0x186
 8002160:	f7fe fd38 	bl	8000bd4 <Gfx_DrawFilledRect>
}
 8002164:	bf00      	nop
 8002166:	3710      	adds	r7, #16
 8002168:	46bd      	mov	sp, r7
 800216a:	bd80      	pop	{r7, pc}
 800216c:	20012f38 	.word	0x20012f38
 8002170:	88888889 	.word	0x88888889
 8002174:	cccccccd 	.word	0xcccccccd

08002178 <UI_Update_BatteryPct>:

void UI_Update_BatteryPct(uint8_t battery_pct) {
 8002178:	b580      	push	{r7, lr}
 800217a:	b086      	sub	sp, #24
 800217c:	af02      	add	r7, sp, #8
 800217e:	4603      	mov	r3, r0
 8002180:	71fb      	strb	r3, [r7, #7]
	uint8_t color;
	if (battery_pct > BATTERY_THRESHOLD_PCT_YELLOW) {
 8002182:	79fb      	ldrb	r3, [r7, #7]
 8002184:	2b3c      	cmp	r3, #60	; 0x3c
 8002186:	d902      	bls.n	800218e <UI_Update_BatteryPct+0x16>
		color = COLOR_GREEN;
 8002188:	2312      	movs	r3, #18
 800218a:	73fb      	strb	r3, [r7, #15]
 800218c:	e007      	b.n	800219e <UI_Update_BatteryPct+0x26>
	} else if (battery_pct > BATTERY_THRESHOLD_PCT_RED) {
 800218e:	79fb      	ldrb	r3, [r7, #7]
 8002190:	2b1e      	cmp	r3, #30
 8002192:	d902      	bls.n	800219a <UI_Update_BatteryPct+0x22>
		color = COLOR_YELLOW;
 8002194:	2336      	movs	r3, #54	; 0x36
 8002196:	73fb      	strb	r3, [r7, #15]
 8002198:	e001      	b.n	800219e <UI_Update_BatteryPct+0x26>
	} else {
		color = COLOR_RED;
 800219a:	2324      	movs	r3, #36	; 0x24
 800219c:	73fb      	strb	r3, [r7, #15]
	}

	uint8_t width = battery_pct * BATTERY_ICON_WIDTH / 100;
 800219e:	79fb      	ldrb	r3, [r7, #7]
 80021a0:	224c      	movs	r2, #76	; 0x4c
 80021a2:	fb02 f303 	mul.w	r3, r2, r3
 80021a6:	4a24      	ldr	r2, [pc, #144]	; (8002238 <UI_Update_BatteryPct+0xc0>)
 80021a8:	fb82 1203 	smull	r1, r2, r2, r3
 80021ac:	1152      	asrs	r2, r2, #5
 80021ae:	17db      	asrs	r3, r3, #31
 80021b0:	1ad3      	subs	r3, r2, r3
 80021b2:	73bb      	strb	r3, [r7, #14]
	Gfx_DrawFilledRect(295, 15, width, BATTERY_ICON_HEIGHT, color);
 80021b4:	7bbb      	ldrb	r3, [r7, #14]
 80021b6:	b29a      	uxth	r2, r3
 80021b8:	7bfb      	ldrb	r3, [r7, #15]
 80021ba:	9300      	str	r3, [sp, #0]
 80021bc:	2323      	movs	r3, #35	; 0x23
 80021be:	210f      	movs	r1, #15
 80021c0:	f240 1027 	movw	r0, #295	; 0x127
 80021c4:	f7fe fd06 	bl	8000bd4 <Gfx_DrawFilledRect>
	Gfx_DrawFilledRect(295+width, 15, BATTERY_ICON_WIDTH - width, BATTERY_ICON_HEIGHT, COLOR_BLACK);
 80021c8:	7bbb      	ldrb	r3, [r7, #14]
 80021ca:	b29b      	uxth	r3, r3
 80021cc:	f203 1327 	addw	r3, r3, #295	; 0x127
 80021d0:	b298      	uxth	r0, r3
 80021d2:	7bbb      	ldrb	r3, [r7, #14]
 80021d4:	b29b      	uxth	r3, r3
 80021d6:	f1c3 034c 	rsb	r3, r3, #76	; 0x4c
 80021da:	b29a      	uxth	r2, r3
 80021dc:	2300      	movs	r3, #0
 80021de:	9300      	str	r3, [sp, #0]
 80021e0:	2323      	movs	r3, #35	; 0x23
 80021e2:	210f      	movs	r1, #15
 80021e4:	f7fe fcf6 	bl	8000bd4 <Gfx_DrawFilledRect>

	/* Battery */
	Gfx_Draw7SegDigit(390, 20, battery_pct / 10, 25, COLOR_GREEN);
 80021e8:	79fb      	ldrb	r3, [r7, #7]
 80021ea:	4a14      	ldr	r2, [pc, #80]	; (800223c <UI_Update_BatteryPct+0xc4>)
 80021ec:	fba2 2303 	umull	r2, r3, r2, r3
 80021f0:	08db      	lsrs	r3, r3, #3
 80021f2:	b2db      	uxtb	r3, r3
 80021f4:	b25a      	sxtb	r2, r3
 80021f6:	2312      	movs	r3, #18
 80021f8:	9300      	str	r3, [sp, #0]
 80021fa:	2319      	movs	r3, #25
 80021fc:	2114      	movs	r1, #20
 80021fe:	f44f 70c3 	mov.w	r0, #390	; 0x186
 8002202:	f7fe fd49 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(410, 20, battery_pct % 10, 25, COLOR_GREEN);
 8002206:	79fa      	ldrb	r2, [r7, #7]
 8002208:	4b0c      	ldr	r3, [pc, #48]	; (800223c <UI_Update_BatteryPct+0xc4>)
 800220a:	fba3 1302 	umull	r1, r3, r3, r2
 800220e:	08d9      	lsrs	r1, r3, #3
 8002210:	460b      	mov	r3, r1
 8002212:	009b      	lsls	r3, r3, #2
 8002214:	440b      	add	r3, r1
 8002216:	005b      	lsls	r3, r3, #1
 8002218:	1ad3      	subs	r3, r2, r3
 800221a:	b2db      	uxtb	r3, r3
 800221c:	b25a      	sxtb	r2, r3
 800221e:	2312      	movs	r3, #18
 8002220:	9300      	str	r3, [sp, #0]
 8002222:	2319      	movs	r3, #25
 8002224:	2114      	movs	r1, #20
 8002226:	f44f 70cd 	mov.w	r0, #410	; 0x19a
 800222a:	f7fe fd35 	bl	8000c98 <Gfx_Draw7SegDigit>
}
 800222e:	bf00      	nop
 8002230:	3710      	adds	r7, #16
 8002232:	46bd      	mov	sp, r7
 8002234:	bd80      	pop	{r7, pc}
 8002236:	bf00      	nop
 8002238:	51eb851f 	.word	0x51eb851f
 800223c:	cccccccd 	.word	0xcccccccd

08002240 <UI_Update_RPM>:

void UI_Update_RPM(uint16_t rpm) {
 8002240:	b580      	push	{r7, lr}
 8002242:	b084      	sub	sp, #16
 8002244:	af02      	add	r7, sp, #8
 8002246:	4603      	mov	r3, r0
 8002248:	80fb      	strh	r3, [r7, #6]
	Gfx_Draw7SegDigit(195, 260, rpm / 1000, 40, COLOR_GREEN);
 800224a:	88fb      	ldrh	r3, [r7, #6]
 800224c:	4a2b      	ldr	r2, [pc, #172]	; (80022fc <UI_Update_RPM+0xbc>)
 800224e:	fba2 2303 	umull	r2, r3, r2, r3
 8002252:	099b      	lsrs	r3, r3, #6
 8002254:	b29b      	uxth	r3, r3
 8002256:	b25a      	sxtb	r2, r3
 8002258:	2312      	movs	r3, #18
 800225a:	9300      	str	r3, [sp, #0]
 800225c:	2328      	movs	r3, #40	; 0x28
 800225e:	f44f 7182 	mov.w	r1, #260	; 0x104
 8002262:	20c3      	movs	r0, #195	; 0xc3
 8002264:	f7fe fd18 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(220, 260, (rpm / 100) % 10, 40, COLOR_GREEN);
 8002268:	88fb      	ldrh	r3, [r7, #6]
 800226a:	4a25      	ldr	r2, [pc, #148]	; (8002300 <UI_Update_RPM+0xc0>)
 800226c:	fba2 2303 	umull	r2, r3, r2, r3
 8002270:	095b      	lsrs	r3, r3, #5
 8002272:	b29a      	uxth	r2, r3
 8002274:	4b23      	ldr	r3, [pc, #140]	; (8002304 <UI_Update_RPM+0xc4>)
 8002276:	fba3 1302 	umull	r1, r3, r3, r2
 800227a:	08d9      	lsrs	r1, r3, #3
 800227c:	460b      	mov	r3, r1
 800227e:	009b      	lsls	r3, r3, #2
 8002280:	440b      	add	r3, r1
 8002282:	005b      	lsls	r3, r3, #1
 8002284:	1ad3      	subs	r3, r2, r3
 8002286:	b29b      	uxth	r3, r3
 8002288:	b25a      	sxtb	r2, r3
 800228a:	2312      	movs	r3, #18
 800228c:	9300      	str	r3, [sp, #0]
 800228e:	2328      	movs	r3, #40	; 0x28
 8002290:	f44f 7182 	mov.w	r1, #260	; 0x104
 8002294:	20dc      	movs	r0, #220	; 0xdc
 8002296:	f7fe fcff 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(245, 260, (rpm % 100) / 10, 40, COLOR_GREEN);
 800229a:	88fb      	ldrh	r3, [r7, #6]
 800229c:	4a18      	ldr	r2, [pc, #96]	; (8002300 <UI_Update_RPM+0xc0>)
 800229e:	fba2 1203 	umull	r1, r2, r2, r3
 80022a2:	0952      	lsrs	r2, r2, #5
 80022a4:	2164      	movs	r1, #100	; 0x64
 80022a6:	fb01 f202 	mul.w	r2, r1, r2
 80022aa:	1a9b      	subs	r3, r3, r2
 80022ac:	b29b      	uxth	r3, r3
 80022ae:	4a15      	ldr	r2, [pc, #84]	; (8002304 <UI_Update_RPM+0xc4>)
 80022b0:	fba2 2303 	umull	r2, r3, r2, r3
 80022b4:	08db      	lsrs	r3, r3, #3
 80022b6:	b29b      	uxth	r3, r3
 80022b8:	b25a      	sxtb	r2, r3
 80022ba:	2312      	movs	r3, #18
 80022bc:	9300      	str	r3, [sp, #0]
 80022be:	2328      	movs	r3, #40	; 0x28
 80022c0:	f44f 7182 	mov.w	r1, #260	; 0x104
 80022c4:	20f5      	movs	r0, #245	; 0xf5
 80022c6:	f7fe fce7 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(270, 260, rpm % 10, 40, COLOR_GREEN);
 80022ca:	88fa      	ldrh	r2, [r7, #6]
 80022cc:	4b0d      	ldr	r3, [pc, #52]	; (8002304 <UI_Update_RPM+0xc4>)
 80022ce:	fba3 1302 	umull	r1, r3, r3, r2
 80022d2:	08d9      	lsrs	r1, r3, #3
 80022d4:	460b      	mov	r3, r1
 80022d6:	009b      	lsls	r3, r3, #2
 80022d8:	440b      	add	r3, r1
 80022da:	005b      	lsls	r3, r3, #1
 80022dc:	1ad3      	subs	r3, r2, r3
 80022de:	b29b      	uxth	r3, r3
 80022e0:	b25a      	sxtb	r2, r3
 80022e2:	2312      	movs	r3, #18
 80022e4:	9300      	str	r3, [sp, #0]
 80022e6:	2328      	movs	r3, #40	; 0x28
 80022e8:	f44f 7182 	mov.w	r1, #260	; 0x104
 80022ec:	f44f 7087 	mov.w	r0, #270	; 0x10e
 80022f0:	f7fe fcd2 	bl	8000c98 <Gfx_Draw7SegDigit>
}
 80022f4:	bf00      	nop
 80022f6:	3708      	adds	r7, #8
 80022f8:	46bd      	mov	sp, r7
 80022fa:	bd80      	pop	{r7, pc}
 80022fc:	10624dd3 	.word	0x10624dd3
 8002300:	51eb851f 	.word	0x51eb851f
 8002304:	cccccccd 	.word	0xcccccccd

08002308 <UI_Update_WheelTemps>:

void UI_Update_WheelTemps(uint8_t front_left, uint8_t front_right,
		  	  	  	  	  uint8_t back_left, uint8_t back_right) {
 8002308:	b590      	push	{r4, r7, lr}
 800230a:	b085      	sub	sp, #20
 800230c:	af02      	add	r7, sp, #8
 800230e:	4604      	mov	r4, r0
 8002310:	4608      	mov	r0, r1
 8002312:	4611      	mov	r1, r2
 8002314:	461a      	mov	r2, r3
 8002316:	4623      	mov	r3, r4
 8002318:	71fb      	strb	r3, [r7, #7]
 800231a:	4603      	mov	r3, r0
 800231c:	71bb      	strb	r3, [r7, #6]
 800231e:	460b      	mov	r3, r1
 8002320:	717b      	strb	r3, [r7, #5]
 8002322:	4613      	mov	r3, r2
 8002324:	713b      	strb	r3, [r7, #4]
	Gfx_Draw7SegDigit(5, 230, front_left / 10, 25, COLOR_CYAN);
 8002326:	79fb      	ldrb	r3, [r7, #7]
 8002328:	4a45      	ldr	r2, [pc, #276]	; (8002440 <UI_Update_WheelTemps+0x138>)
 800232a:	fba2 2303 	umull	r2, r3, r2, r3
 800232e:	08db      	lsrs	r3, r3, #3
 8002330:	b2db      	uxtb	r3, r3
 8002332:	b25a      	sxtb	r2, r3
 8002334:	231a      	movs	r3, #26
 8002336:	9300      	str	r3, [sp, #0]
 8002338:	2319      	movs	r3, #25
 800233a:	21e6      	movs	r1, #230	; 0xe6
 800233c:	2005      	movs	r0, #5
 800233e:	f7fe fcab 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(30, 230, front_left % 10, 25, COLOR_CYAN);
 8002342:	79fa      	ldrb	r2, [r7, #7]
 8002344:	4b3e      	ldr	r3, [pc, #248]	; (8002440 <UI_Update_WheelTemps+0x138>)
 8002346:	fba3 1302 	umull	r1, r3, r3, r2
 800234a:	08d9      	lsrs	r1, r3, #3
 800234c:	460b      	mov	r3, r1
 800234e:	009b      	lsls	r3, r3, #2
 8002350:	440b      	add	r3, r1
 8002352:	005b      	lsls	r3, r3, #1
 8002354:	1ad3      	subs	r3, r2, r3
 8002356:	b2db      	uxtb	r3, r3
 8002358:	b25a      	sxtb	r2, r3
 800235a:	231a      	movs	r3, #26
 800235c:	9300      	str	r3, [sp, #0]
 800235e:	2319      	movs	r3, #25
 8002360:	21e6      	movs	r1, #230	; 0xe6
 8002362:	201e      	movs	r0, #30
 8002364:	f7fe fc98 	bl	8000c98 <Gfx_Draw7SegDigit>

	Gfx_Draw7SegDigit(87, 230, front_right / 10, 25, COLOR_CYAN);
 8002368:	79bb      	ldrb	r3, [r7, #6]
 800236a:	4a35      	ldr	r2, [pc, #212]	; (8002440 <UI_Update_WheelTemps+0x138>)
 800236c:	fba2 2303 	umull	r2, r3, r2, r3
 8002370:	08db      	lsrs	r3, r3, #3
 8002372:	b2db      	uxtb	r3, r3
 8002374:	b25a      	sxtb	r2, r3
 8002376:	231a      	movs	r3, #26
 8002378:	9300      	str	r3, [sp, #0]
 800237a:	2319      	movs	r3, #25
 800237c:	21e6      	movs	r1, #230	; 0xe6
 800237e:	2057      	movs	r0, #87	; 0x57
 8002380:	f7fe fc8a 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(112, 230, front_right % 10, 25, COLOR_CYAN);
 8002384:	79ba      	ldrb	r2, [r7, #6]
 8002386:	4b2e      	ldr	r3, [pc, #184]	; (8002440 <UI_Update_WheelTemps+0x138>)
 8002388:	fba3 1302 	umull	r1, r3, r3, r2
 800238c:	08d9      	lsrs	r1, r3, #3
 800238e:	460b      	mov	r3, r1
 8002390:	009b      	lsls	r3, r3, #2
 8002392:	440b      	add	r3, r1
 8002394:	005b      	lsls	r3, r3, #1
 8002396:	1ad3      	subs	r3, r2, r3
 8002398:	b2db      	uxtb	r3, r3
 800239a:	b25a      	sxtb	r2, r3
 800239c:	231a      	movs	r3, #26
 800239e:	9300      	str	r3, [sp, #0]
 80023a0:	2319      	movs	r3, #25
 80023a2:	21e6      	movs	r1, #230	; 0xe6
 80023a4:	2070      	movs	r0, #112	; 0x70
 80023a6:	f7fe fc77 	bl	8000c98 <Gfx_Draw7SegDigit>

	Gfx_Draw7SegDigit(5, 280, back_left / 10, 25, COLOR_CYAN);
 80023aa:	797b      	ldrb	r3, [r7, #5]
 80023ac:	4a24      	ldr	r2, [pc, #144]	; (8002440 <UI_Update_WheelTemps+0x138>)
 80023ae:	fba2 2303 	umull	r2, r3, r2, r3
 80023b2:	08db      	lsrs	r3, r3, #3
 80023b4:	b2db      	uxtb	r3, r3
 80023b6:	b25a      	sxtb	r2, r3
 80023b8:	231a      	movs	r3, #26
 80023ba:	9300      	str	r3, [sp, #0]
 80023bc:	2319      	movs	r3, #25
 80023be:	f44f 718c 	mov.w	r1, #280	; 0x118
 80023c2:	2005      	movs	r0, #5
 80023c4:	f7fe fc68 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(30, 280, back_left % 10, 25, COLOR_CYAN);
 80023c8:	797a      	ldrb	r2, [r7, #5]
 80023ca:	4b1d      	ldr	r3, [pc, #116]	; (8002440 <UI_Update_WheelTemps+0x138>)
 80023cc:	fba3 1302 	umull	r1, r3, r3, r2
 80023d0:	08d9      	lsrs	r1, r3, #3
 80023d2:	460b      	mov	r3, r1
 80023d4:	009b      	lsls	r3, r3, #2
 80023d6:	440b      	add	r3, r1
 80023d8:	005b      	lsls	r3, r3, #1
 80023da:	1ad3      	subs	r3, r2, r3
 80023dc:	b2db      	uxtb	r3, r3
 80023de:	b25a      	sxtb	r2, r3
 80023e0:	231a      	movs	r3, #26
 80023e2:	9300      	str	r3, [sp, #0]
 80023e4:	2319      	movs	r3, #25
 80023e6:	f44f 718c 	mov.w	r1, #280	; 0x118
 80023ea:	201e      	movs	r0, #30
 80023ec:	f7fe fc54 	bl	8000c98 <Gfx_Draw7SegDigit>

	Gfx_Draw7SegDigit(87, 280, back_right / 10, 25, COLOR_CYAN);
 80023f0:	793b      	ldrb	r3, [r7, #4]
 80023f2:	4a13      	ldr	r2, [pc, #76]	; (8002440 <UI_Update_WheelTemps+0x138>)
 80023f4:	fba2 2303 	umull	r2, r3, r2, r3
 80023f8:	08db      	lsrs	r3, r3, #3
 80023fa:	b2db      	uxtb	r3, r3
 80023fc:	b25a      	sxtb	r2, r3
 80023fe:	231a      	movs	r3, #26
 8002400:	9300      	str	r3, [sp, #0]
 8002402:	2319      	movs	r3, #25
 8002404:	f44f 718c 	mov.w	r1, #280	; 0x118
 8002408:	2057      	movs	r0, #87	; 0x57
 800240a:	f7fe fc45 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(112, 280, back_right % 10, 25, COLOR_CYAN);
 800240e:	793a      	ldrb	r2, [r7, #4]
 8002410:	4b0b      	ldr	r3, [pc, #44]	; (8002440 <UI_Update_WheelTemps+0x138>)
 8002412:	fba3 1302 	umull	r1, r3, r3, r2
 8002416:	08d9      	lsrs	r1, r3, #3
 8002418:	460b      	mov	r3, r1
 800241a:	009b      	lsls	r3, r3, #2
 800241c:	440b      	add	r3, r1
 800241e:	005b      	lsls	r3, r3, #1
 8002420:	1ad3      	subs	r3, r2, r3
 8002422:	b2db      	uxtb	r3, r3
 8002424:	b25a      	sxtb	r2, r3
 8002426:	231a      	movs	r3, #26
 8002428:	9300      	str	r3, [sp, #0]
 800242a:	2319      	movs	r3, #25
 800242c:	f44f 718c 	mov.w	r1, #280	; 0x118
 8002430:	2070      	movs	r0, #112	; 0x70
 8002432:	f7fe fc31 	bl	8000c98 <Gfx_Draw7SegDigit>
}
 8002436:	bf00      	nop
 8002438:	370c      	adds	r7, #12
 800243a:	46bd      	mov	sp, r7
 800243c:	bd90      	pop	{r4, r7, pc}
 800243e:	bf00      	nop
 8002440:	cccccccd 	.word	0xcccccccd

08002444 <UI_Update_Speedometer>:

void UI_Update_Speedometer(uint8_t speed) {
 8002444:	b580      	push	{r7, lr}
 8002446:	b084      	sub	sp, #16
 8002448:	af02      	add	r7, sp, #8
 800244a:	4603      	mov	r3, r0
 800244c:	71fb      	strb	r3, [r7, #7]
	Gfx_Draw7SegDigit(150, 70, speed / 10, 120, COLOR_YELLOW);
 800244e:	79fb      	ldrb	r3, [r7, #7]
 8002450:	4a11      	ldr	r2, [pc, #68]	; (8002498 <UI_Update_Speedometer+0x54>)
 8002452:	fba2 2303 	umull	r2, r3, r2, r3
 8002456:	08db      	lsrs	r3, r3, #3
 8002458:	b2db      	uxtb	r3, r3
 800245a:	b25a      	sxtb	r2, r3
 800245c:	2336      	movs	r3, #54	; 0x36
 800245e:	9300      	str	r3, [sp, #0]
 8002460:	2378      	movs	r3, #120	; 0x78
 8002462:	2146      	movs	r1, #70	; 0x46
 8002464:	2096      	movs	r0, #150	; 0x96
 8002466:	f7fe fc17 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(240, 70, speed % 10, 120, COLOR_YELLOW);
 800246a:	79fa      	ldrb	r2, [r7, #7]
 800246c:	4b0a      	ldr	r3, [pc, #40]	; (8002498 <UI_Update_Speedometer+0x54>)
 800246e:	fba3 1302 	umull	r1, r3, r3, r2
 8002472:	08d9      	lsrs	r1, r3, #3
 8002474:	460b      	mov	r3, r1
 8002476:	009b      	lsls	r3, r3, #2
 8002478:	440b      	add	r3, r1
 800247a:	005b      	lsls	r3, r3, #1
 800247c:	1ad3      	subs	r3, r2, r3
 800247e:	b2db      	uxtb	r3, r3
 8002480:	b25a      	sxtb	r2, r3
 8002482:	2336      	movs	r3, #54	; 0x36
 8002484:	9300      	str	r3, [sp, #0]
 8002486:	2378      	movs	r3, #120	; 0x78
 8002488:	2146      	movs	r1, #70	; 0x46
 800248a:	20f0      	movs	r0, #240	; 0xf0
 800248c:	f7fe fc04 	bl	8000c98 <Gfx_Draw7SegDigit>
}
 8002490:	bf00      	nop
 8002492:	3708      	adds	r7, #8
 8002494:	46bd      	mov	sp, r7
 8002496:	bd80      	pop	{r7, pc}
 8002498:	cccccccd 	.word	0xcccccccd

0800249c <UI_Update_CoolingTemp>:

void UI_Update_CoolingTemp(uint8_t temp) {
 800249c:	b580      	push	{r7, lr}
 800249e:	b084      	sub	sp, #16
 80024a0:	af02      	add	r7, sp, #8
 80024a2:	4603      	mov	r3, r0
 80024a4:	71fb      	strb	r3, [r7, #7]
	Gfx_Draw7SegDigit(59, 15, temp / 10, 25, COLOR_CYAN);
 80024a6:	79fb      	ldrb	r3, [r7, #7]
 80024a8:	4a11      	ldr	r2, [pc, #68]	; (80024f0 <UI_Update_CoolingTemp+0x54>)
 80024aa:	fba2 2303 	umull	r2, r3, r2, r3
 80024ae:	08db      	lsrs	r3, r3, #3
 80024b0:	b2db      	uxtb	r3, r3
 80024b2:	b25a      	sxtb	r2, r3
 80024b4:	231a      	movs	r3, #26
 80024b6:	9300      	str	r3, [sp, #0]
 80024b8:	2319      	movs	r3, #25
 80024ba:	210f      	movs	r1, #15
 80024bc:	203b      	movs	r0, #59	; 0x3b
 80024be:	f7fe fbeb 	bl	8000c98 <Gfx_Draw7SegDigit>
	Gfx_Draw7SegDigit(80, 15, temp % 10, 25, COLOR_CYAN);
 80024c2:	79fa      	ldrb	r2, [r7, #7]
 80024c4:	4b0a      	ldr	r3, [pc, #40]	; (80024f0 <UI_Update_CoolingTemp+0x54>)
 80024c6:	fba3 1302 	umull	r1, r3, r3, r2
 80024ca:	08d9      	lsrs	r1, r3, #3
 80024cc:	460b      	mov	r3, r1
 80024ce:	009b      	lsls	r3, r3, #2
 80024d0:	440b      	add	r3, r1
 80024d2:	005b      	lsls	r3, r3, #1
 80024d4:	1ad3      	subs	r3, r2, r3
 80024d6:	b2db      	uxtb	r3, r3
 80024d8:	b25a      	sxtb	r2, r3
 80024da:	231a      	movs	r3, #26
 80024dc:	9300      	str	r3, [sp, #0]
 80024de:	2319      	movs	r3, #25
 80024e0:	210f      	movs	r1, #15
 80024e2:	2050      	movs	r0, #80	; 0x50
 80024e4:	f7fe fbd8 	bl	8000c98 <Gfx_Draw7SegDigit>
}
 80024e8:	bf00      	nop
 80024ea:	3708      	adds	r7, #8
 80024ec:	46bd      	mov	sp, r7
 80024ee:	bd80      	pop	{r7, pc}
 80024f0:	cccccccd 	.word	0xcccccccd

080024f4 <Reset_Handler>:
 80024f4:	f8df d034 	ldr.w	sp, [pc, #52]	; 800252c <LoopFillZerobss+0x12>
 80024f8:	480d      	ldr	r0, [pc, #52]	; (8002530 <LoopFillZerobss+0x16>)
 80024fa:	490e      	ldr	r1, [pc, #56]	; (8002534 <LoopFillZerobss+0x1a>)
 80024fc:	4a0e      	ldr	r2, [pc, #56]	; (8002538 <LoopFillZerobss+0x1e>)
 80024fe:	2300      	movs	r3, #0
 8002500:	e002      	b.n	8002508 <LoopCopyDataInit>

08002502 <CopyDataInit>:
 8002502:	58d4      	ldr	r4, [r2, r3]
 8002504:	50c4      	str	r4, [r0, r3]
 8002506:	3304      	adds	r3, #4

08002508 <LoopCopyDataInit>:
 8002508:	18c4      	adds	r4, r0, r3
 800250a:	428c      	cmp	r4, r1
 800250c:	d3f9      	bcc.n	8002502 <CopyDataInit>
 800250e:	4a0b      	ldr	r2, [pc, #44]	; (800253c <LoopFillZerobss+0x22>)
 8002510:	4c0b      	ldr	r4, [pc, #44]	; (8002540 <LoopFillZerobss+0x26>)
 8002512:	2300      	movs	r3, #0
 8002514:	e001      	b.n	800251a <LoopFillZerobss>

08002516 <FillZerobss>:
 8002516:	6013      	str	r3, [r2, #0]
 8002518:	3204      	adds	r2, #4

0800251a <LoopFillZerobss>:
 800251a:	42a2      	cmp	r2, r4
 800251c:	d3fb      	bcc.n	8002516 <FillZerobss>
 800251e:	f7ff fd15 	bl	8001f4c <SystemInit>
 8002522:	f005 fad5 	bl	8007ad0 <__libc_init_array>
 8002526:	f7ff f963 	bl	80017f0 <main>
 800252a:	4770      	bx	lr
 800252c:	20040000 	.word	0x20040000
 8002530:	20000000 	.word	0x20000000
 8002534:	20012c5c 	.word	0x20012c5c
 8002538:	08007c0c 	.word	0x08007c0c
 800253c:	20012c5c 	.word	0x20012c5c
 8002540:	20012f40 	.word	0x20012f40

08002544 <ADC_IRQHandler>:
 8002544:	e7fe      	b.n	8002544 <ADC_IRQHandler>
	...

08002548 <HAL_Init>:
 8002548:	b580      	push	{r7, lr}
 800254a:	af00      	add	r7, sp, #0
 800254c:	4b0e      	ldr	r3, [pc, #56]	; (8002588 <HAL_Init+0x40>)
 800254e:	681b      	ldr	r3, [r3, #0]
 8002550:	4a0d      	ldr	r2, [pc, #52]	; (8002588 <HAL_Init+0x40>)
 8002552:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002556:	6013      	str	r3, [r2, #0]
 8002558:	4b0b      	ldr	r3, [pc, #44]	; (8002588 <HAL_Init+0x40>)
 800255a:	681b      	ldr	r3, [r3, #0]
 800255c:	4a0a      	ldr	r2, [pc, #40]	; (8002588 <HAL_Init+0x40>)
 800255e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002562:	6013      	str	r3, [r2, #0]
 8002564:	4b08      	ldr	r3, [pc, #32]	; (8002588 <HAL_Init+0x40>)
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	4a07      	ldr	r2, [pc, #28]	; (8002588 <HAL_Init+0x40>)
 800256a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800256e:	6013      	str	r3, [r2, #0]
 8002570:	2003      	movs	r0, #3
 8002572:	f001 f865 	bl	8003640 <HAL_NVIC_SetPriorityGrouping>
 8002576:	200f      	movs	r0, #15
 8002578:	f000 f808 	bl	800258c <HAL_InitTick>
 800257c:	f7ff fa7c 	bl	8001a78 <HAL_MspInit>
 8002580:	2300      	movs	r3, #0
 8002582:	4618      	mov	r0, r3
 8002584:	bd80      	pop	{r7, pc}
 8002586:	bf00      	nop
 8002588:	40023c00 	.word	0x40023c00

0800258c <HAL_InitTick>:
 800258c:	b580      	push	{r7, lr}
 800258e:	b082      	sub	sp, #8
 8002590:	af00      	add	r7, sp, #0
 8002592:	6078      	str	r0, [r7, #4]
 8002594:	4b12      	ldr	r3, [pc, #72]	; (80025e0 <HAL_InitTick+0x54>)
 8002596:	681a      	ldr	r2, [r3, #0]
 8002598:	4b12      	ldr	r3, [pc, #72]	; (80025e4 <HAL_InitTick+0x58>)
 800259a:	781b      	ldrb	r3, [r3, #0]
 800259c:	4619      	mov	r1, r3
 800259e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80025a2:	fbb3 f3f1 	udiv	r3, r3, r1
 80025a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80025aa:	4618      	mov	r0, r3
 80025ac:	f001 f87d 	bl	80036aa <HAL_SYSTICK_Config>
 80025b0:	4603      	mov	r3, r0
 80025b2:	2b00      	cmp	r3, #0
 80025b4:	d001      	beq.n	80025ba <HAL_InitTick+0x2e>
 80025b6:	2301      	movs	r3, #1
 80025b8:	e00e      	b.n	80025d8 <HAL_InitTick+0x4c>
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	2b0f      	cmp	r3, #15
 80025be:	d80a      	bhi.n	80025d6 <HAL_InitTick+0x4a>
 80025c0:	2200      	movs	r2, #0
 80025c2:	6879      	ldr	r1, [r7, #4]
 80025c4:	f04f 30ff 	mov.w	r0, #4294967295
 80025c8:	f001 f845 	bl	8003656 <HAL_NVIC_SetPriority>
 80025cc:	4a06      	ldr	r2, [pc, #24]	; (80025e8 <HAL_InitTick+0x5c>)
 80025ce:	687b      	ldr	r3, [r7, #4]
 80025d0:	6013      	str	r3, [r2, #0]
 80025d2:	2300      	movs	r3, #0
 80025d4:	e000      	b.n	80025d8 <HAL_InitTick+0x4c>
 80025d6:	2301      	movs	r3, #1
 80025d8:	4618      	mov	r0, r3
 80025da:	3708      	adds	r7, #8
 80025dc:	46bd      	mov	sp, r7
 80025de:	bd80      	pop	{r7, pc}
 80025e0:	20012c40 	.word	0x20012c40
 80025e4:	20012c58 	.word	0x20012c58
 80025e8:	20012c54 	.word	0x20012c54

080025ec <HAL_IncTick>:
 80025ec:	b480      	push	{r7}
 80025ee:	af00      	add	r7, sp, #0
 80025f0:	4b06      	ldr	r3, [pc, #24]	; (800260c <HAL_IncTick+0x20>)
 80025f2:	781b      	ldrb	r3, [r3, #0]
 80025f4:	461a      	mov	r2, r3
 80025f6:	4b06      	ldr	r3, [pc, #24]	; (8002610 <HAL_IncTick+0x24>)
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	4413      	add	r3, r2
 80025fc:	4a04      	ldr	r2, [pc, #16]	; (8002610 <HAL_IncTick+0x24>)
 80025fe:	6013      	str	r3, [r2, #0]
 8002600:	bf00      	nop
 8002602:	46bd      	mov	sp, r7
 8002604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002608:	4770      	bx	lr
 800260a:	bf00      	nop
 800260c:	20012c58 	.word	0x20012c58
 8002610:	20012f3c 	.word	0x20012f3c

08002614 <HAL_GetTick>:
 8002614:	b480      	push	{r7}
 8002616:	af00      	add	r7, sp, #0
 8002618:	4b03      	ldr	r3, [pc, #12]	; (8002628 <HAL_GetTick+0x14>)
 800261a:	681b      	ldr	r3, [r3, #0]
 800261c:	4618      	mov	r0, r3
 800261e:	46bd      	mov	sp, r7
 8002620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002624:	4770      	bx	lr
 8002626:	bf00      	nop
 8002628:	20012f3c 	.word	0x20012f3c

0800262c <HAL_Delay>:
 800262c:	b580      	push	{r7, lr}
 800262e:	b084      	sub	sp, #16
 8002630:	af00      	add	r7, sp, #0
 8002632:	6078      	str	r0, [r7, #4]
 8002634:	f7ff ffee 	bl	8002614 <HAL_GetTick>
 8002638:	60b8      	str	r0, [r7, #8]
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	60fb      	str	r3, [r7, #12]
 800263e:	68fb      	ldr	r3, [r7, #12]
 8002640:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002644:	d005      	beq.n	8002652 <HAL_Delay+0x26>
 8002646:	4b0a      	ldr	r3, [pc, #40]	; (8002670 <HAL_Delay+0x44>)
 8002648:	781b      	ldrb	r3, [r3, #0]
 800264a:	461a      	mov	r2, r3
 800264c:	68fb      	ldr	r3, [r7, #12]
 800264e:	4413      	add	r3, r2
 8002650:	60fb      	str	r3, [r7, #12]
 8002652:	bf00      	nop
 8002654:	f7ff ffde 	bl	8002614 <HAL_GetTick>
 8002658:	4602      	mov	r2, r0
 800265a:	68bb      	ldr	r3, [r7, #8]
 800265c:	1ad3      	subs	r3, r2, r3
 800265e:	68fa      	ldr	r2, [r7, #12]
 8002660:	429a      	cmp	r2, r3
 8002662:	d8f7      	bhi.n	8002654 <HAL_Delay+0x28>
 8002664:	bf00      	nop
 8002666:	bf00      	nop
 8002668:	3710      	adds	r7, #16
 800266a:	46bd      	mov	sp, r7
 800266c:	bd80      	pop	{r7, pc}
 800266e:	bf00      	nop
 8002670:	20012c58 	.word	0x20012c58

08002674 <HAL_ADC_Init>:
 8002674:	b580      	push	{r7, lr}
 8002676:	b084      	sub	sp, #16
 8002678:	af00      	add	r7, sp, #0
 800267a:	6078      	str	r0, [r7, #4]
 800267c:	2300      	movs	r3, #0
 800267e:	73fb      	strb	r3, [r7, #15]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	2b00      	cmp	r3, #0
 8002684:	d101      	bne.n	800268a <HAL_ADC_Init+0x16>
 8002686:	2301      	movs	r3, #1
 8002688:	e033      	b.n	80026f2 <HAL_ADC_Init+0x7e>
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800268e:	2b00      	cmp	r3, #0
 8002690:	d109      	bne.n	80026a6 <HAL_ADC_Init+0x32>
 8002692:	6878      	ldr	r0, [r7, #4]
 8002694:	f7ff fa18 	bl	8001ac8 <HAL_ADC_MspInit>
 8002698:	687b      	ldr	r3, [r7, #4]
 800269a:	2200      	movs	r2, #0
 800269c:	645a      	str	r2, [r3, #68]	; 0x44
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	2200      	movs	r2, #0
 80026a2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026aa:	f003 0310 	and.w	r3, r3, #16
 80026ae:	2b00      	cmp	r3, #0
 80026b0:	d118      	bne.n	80026e4 <HAL_ADC_Init+0x70>
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026b6:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80026ba:	f023 0302 	bic.w	r3, r3, #2
 80026be:	f043 0202 	orr.w	r2, r3, #2
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	641a      	str	r2, [r3, #64]	; 0x40
 80026c6:	6878      	ldr	r0, [r7, #4]
 80026c8:	f000 faba 	bl	8002c40 <ADC_Init>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	2200      	movs	r2, #0
 80026d0:	645a      	str	r2, [r3, #68]	; 0x44
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026d6:	f023 0303 	bic.w	r3, r3, #3
 80026da:	f043 0201 	orr.w	r2, r3, #1
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	641a      	str	r2, [r3, #64]	; 0x40
 80026e2:	e001      	b.n	80026e8 <HAL_ADC_Init+0x74>
 80026e4:	2301      	movs	r3, #1
 80026e6:	73fb      	strb	r3, [r7, #15]
 80026e8:	687b      	ldr	r3, [r7, #4]
 80026ea:	2200      	movs	r2, #0
 80026ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80026f0:	7bfb      	ldrb	r3, [r7, #15]
 80026f2:	4618      	mov	r0, r3
 80026f4:	3710      	adds	r7, #16
 80026f6:	46bd      	mov	sp, r7
 80026f8:	bd80      	pop	{r7, pc}
	...

080026fc <HAL_ADC_Start>:
 80026fc:	b480      	push	{r7}
 80026fe:	b085      	sub	sp, #20
 8002700:	af00      	add	r7, sp, #0
 8002702:	6078      	str	r0, [r7, #4]
 8002704:	2300      	movs	r3, #0
 8002706:	60bb      	str	r3, [r7, #8]
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800270e:	2b01      	cmp	r3, #1
 8002710:	d101      	bne.n	8002716 <HAL_ADC_Start+0x1a>
 8002712:	2302      	movs	r3, #2
 8002714:	e097      	b.n	8002846 <HAL_ADC_Start+0x14a>
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	2201      	movs	r2, #1
 800271a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	689b      	ldr	r3, [r3, #8]
 8002724:	f003 0301 	and.w	r3, r3, #1
 8002728:	2b01      	cmp	r3, #1
 800272a:	d018      	beq.n	800275e <HAL_ADC_Start+0x62>
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	689a      	ldr	r2, [r3, #8]
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	681b      	ldr	r3, [r3, #0]
 8002736:	f042 0201 	orr.w	r2, r2, #1
 800273a:	609a      	str	r2, [r3, #8]
 800273c:	4b45      	ldr	r3, [pc, #276]	; (8002854 <HAL_ADC_Start+0x158>)
 800273e:	681b      	ldr	r3, [r3, #0]
 8002740:	4a45      	ldr	r2, [pc, #276]	; (8002858 <HAL_ADC_Start+0x15c>)
 8002742:	fba2 2303 	umull	r2, r3, r2, r3
 8002746:	0c9a      	lsrs	r2, r3, #18
 8002748:	4613      	mov	r3, r2
 800274a:	005b      	lsls	r3, r3, #1
 800274c:	4413      	add	r3, r2
 800274e:	60bb      	str	r3, [r7, #8]
 8002750:	e002      	b.n	8002758 <HAL_ADC_Start+0x5c>
 8002752:	68bb      	ldr	r3, [r7, #8]
 8002754:	3b01      	subs	r3, #1
 8002756:	60bb      	str	r3, [r7, #8]
 8002758:	68bb      	ldr	r3, [r7, #8]
 800275a:	2b00      	cmp	r3, #0
 800275c:	d1f9      	bne.n	8002752 <HAL_ADC_Start+0x56>
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	681b      	ldr	r3, [r3, #0]
 8002762:	689b      	ldr	r3, [r3, #8]
 8002764:	f003 0301 	and.w	r3, r3, #1
 8002768:	2b01      	cmp	r3, #1
 800276a:	d15f      	bne.n	800282c <HAL_ADC_Start+0x130>
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002770:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8002774:	f023 0301 	bic.w	r3, r3, #1
 8002778:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800277c:	687b      	ldr	r3, [r7, #4]
 800277e:	641a      	str	r2, [r3, #64]	; 0x40
 8002780:	687b      	ldr	r3, [r7, #4]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	685b      	ldr	r3, [r3, #4]
 8002786:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800278a:	2b00      	cmp	r3, #0
 800278c:	d007      	beq.n	800279e <HAL_ADC_Start+0xa2>
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002792:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8002796:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	641a      	str	r2, [r3, #64]	; 0x40
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80027a2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80027a6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80027aa:	d106      	bne.n	80027ba <HAL_ADC_Start+0xbe>
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80027b0:	f023 0206 	bic.w	r2, r3, #6
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	645a      	str	r2, [r3, #68]	; 0x44
 80027b8:	e002      	b.n	80027c0 <HAL_ADC_Start+0xc4>
 80027ba:	687b      	ldr	r3, [r7, #4]
 80027bc:	2200      	movs	r2, #0
 80027be:	645a      	str	r2, [r3, #68]	; 0x44
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	2200      	movs	r2, #0
 80027c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80027c8:	4b24      	ldr	r3, [pc, #144]	; (800285c <HAL_ADC_Start+0x160>)
 80027ca:	60fb      	str	r3, [r7, #12]
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80027d4:	601a      	str	r2, [r3, #0]
 80027d6:	68fb      	ldr	r3, [r7, #12]
 80027d8:	685b      	ldr	r3, [r3, #4]
 80027da:	f003 031f 	and.w	r3, r3, #31
 80027de:	2b00      	cmp	r3, #0
 80027e0:	d10f      	bne.n	8002802 <HAL_ADC_Start+0x106>
 80027e2:	687b      	ldr	r3, [r7, #4]
 80027e4:	681b      	ldr	r3, [r3, #0]
 80027e6:	689b      	ldr	r3, [r3, #8]
 80027e8:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80027ec:	2b00      	cmp	r3, #0
 80027ee:	d129      	bne.n	8002844 <HAL_ADC_Start+0x148>
 80027f0:	687b      	ldr	r3, [r7, #4]
 80027f2:	681b      	ldr	r3, [r3, #0]
 80027f4:	689a      	ldr	r2, [r3, #8]
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	681b      	ldr	r3, [r3, #0]
 80027fa:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80027fe:	609a      	str	r2, [r3, #8]
 8002800:	e020      	b.n	8002844 <HAL_ADC_Start+0x148>
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	681b      	ldr	r3, [r3, #0]
 8002806:	4a16      	ldr	r2, [pc, #88]	; (8002860 <HAL_ADC_Start+0x164>)
 8002808:	4293      	cmp	r3, r2
 800280a:	d11b      	bne.n	8002844 <HAL_ADC_Start+0x148>
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	689b      	ldr	r3, [r3, #8]
 8002812:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002816:	2b00      	cmp	r3, #0
 8002818:	d114      	bne.n	8002844 <HAL_ADC_Start+0x148>
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	689a      	ldr	r2, [r3, #8]
 8002820:	687b      	ldr	r3, [r7, #4]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8002828:	609a      	str	r2, [r3, #8]
 800282a:	e00b      	b.n	8002844 <HAL_ADC_Start+0x148>
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002830:	f043 0210 	orr.w	r2, r3, #16
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	641a      	str	r2, [r3, #64]	; 0x40
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800283c:	f043 0201 	orr.w	r2, r3, #1
 8002840:	687b      	ldr	r3, [r7, #4]
 8002842:	645a      	str	r2, [r3, #68]	; 0x44
 8002844:	2300      	movs	r3, #0
 8002846:	4618      	mov	r0, r3
 8002848:	3714      	adds	r7, #20
 800284a:	46bd      	mov	sp, r7
 800284c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002850:	4770      	bx	lr
 8002852:	bf00      	nop
 8002854:	20012c40 	.word	0x20012c40
 8002858:	431bde83 	.word	0x431bde83
 800285c:	40012300 	.word	0x40012300
 8002860:	40012000 	.word	0x40012000

08002864 <HAL_ADC_Stop>:
 8002864:	b480      	push	{r7}
 8002866:	b083      	sub	sp, #12
 8002868:	af00      	add	r7, sp, #0
 800286a:	6078      	str	r0, [r7, #4]
 800286c:	687b      	ldr	r3, [r7, #4]
 800286e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002872:	2b01      	cmp	r3, #1
 8002874:	d101      	bne.n	800287a <HAL_ADC_Stop+0x16>
 8002876:	2302      	movs	r3, #2
 8002878:	e021      	b.n	80028be <HAL_ADC_Stop+0x5a>
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	2201      	movs	r2, #1
 800287e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	689a      	ldr	r2, [r3, #8]
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	f022 0201 	bic.w	r2, r2, #1
 8002890:	609a      	str	r2, [r3, #8]
 8002892:	687b      	ldr	r3, [r7, #4]
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	689b      	ldr	r3, [r3, #8]
 8002898:	f003 0301 	and.w	r3, r3, #1
 800289c:	2b00      	cmp	r3, #0
 800289e:	d109      	bne.n	80028b4 <HAL_ADC_Stop+0x50>
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028a4:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80028a8:	f023 0301 	bic.w	r3, r3, #1
 80028ac:	f043 0201 	orr.w	r2, r3, #1
 80028b0:	687b      	ldr	r3, [r7, #4]
 80028b2:	641a      	str	r2, [r3, #64]	; 0x40
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	2200      	movs	r2, #0
 80028b8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80028bc:	2300      	movs	r3, #0
 80028be:	4618      	mov	r0, r3
 80028c0:	370c      	adds	r7, #12
 80028c2:	46bd      	mov	sp, r7
 80028c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028c8:	4770      	bx	lr

080028ca <HAL_ADC_PollForConversion>:
 80028ca:	b580      	push	{r7, lr}
 80028cc:	b084      	sub	sp, #16
 80028ce:	af00      	add	r7, sp, #0
 80028d0:	6078      	str	r0, [r7, #4]
 80028d2:	6039      	str	r1, [r7, #0]
 80028d4:	2300      	movs	r3, #0
 80028d6:	60fb      	str	r3, [r7, #12]
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	689b      	ldr	r3, [r3, #8]
 80028de:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80028e2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80028e6:	d113      	bne.n	8002910 <HAL_ADC_PollForConversion+0x46>
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	689b      	ldr	r3, [r3, #8]
 80028ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80028f2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80028f6:	d10b      	bne.n	8002910 <HAL_ADC_PollForConversion+0x46>
 80028f8:	687b      	ldr	r3, [r7, #4]
 80028fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028fc:	f043 0220 	orr.w	r2, r3, #32
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	641a      	str	r2, [r3, #64]	; 0x40
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	2200      	movs	r2, #0
 8002908:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800290c:	2301      	movs	r3, #1
 800290e:	e063      	b.n	80029d8 <HAL_ADC_PollForConversion+0x10e>
 8002910:	f7ff fe80 	bl	8002614 <HAL_GetTick>
 8002914:	60f8      	str	r0, [r7, #12]
 8002916:	e021      	b.n	800295c <HAL_ADC_PollForConversion+0x92>
 8002918:	683b      	ldr	r3, [r7, #0]
 800291a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800291e:	d01d      	beq.n	800295c <HAL_ADC_PollForConversion+0x92>
 8002920:	683b      	ldr	r3, [r7, #0]
 8002922:	2b00      	cmp	r3, #0
 8002924:	d007      	beq.n	8002936 <HAL_ADC_PollForConversion+0x6c>
 8002926:	f7ff fe75 	bl	8002614 <HAL_GetTick>
 800292a:	4602      	mov	r2, r0
 800292c:	68fb      	ldr	r3, [r7, #12]
 800292e:	1ad3      	subs	r3, r2, r3
 8002930:	683a      	ldr	r2, [r7, #0]
 8002932:	429a      	cmp	r2, r3
 8002934:	d212      	bcs.n	800295c <HAL_ADC_PollForConversion+0x92>
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	681b      	ldr	r3, [r3, #0]
 800293c:	f003 0302 	and.w	r3, r3, #2
 8002940:	2b02      	cmp	r3, #2
 8002942:	d00b      	beq.n	800295c <HAL_ADC_PollForConversion+0x92>
 8002944:	687b      	ldr	r3, [r7, #4]
 8002946:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002948:	f043 0204 	orr.w	r2, r3, #4
 800294c:	687b      	ldr	r3, [r7, #4]
 800294e:	641a      	str	r2, [r3, #64]	; 0x40
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	2200      	movs	r2, #0
 8002954:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002958:	2303      	movs	r3, #3
 800295a:	e03d      	b.n	80029d8 <HAL_ADC_PollForConversion+0x10e>
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	f003 0302 	and.w	r3, r3, #2
 8002966:	2b02      	cmp	r3, #2
 8002968:	d1d6      	bne.n	8002918 <HAL_ADC_PollForConversion+0x4e>
 800296a:	687b      	ldr	r3, [r7, #4]
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	f06f 0212 	mvn.w	r2, #18
 8002972:	601a      	str	r2, [r3, #0]
 8002974:	687b      	ldr	r3, [r7, #4]
 8002976:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002978:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800297c:	687b      	ldr	r3, [r7, #4]
 800297e:	641a      	str	r2, [r3, #64]	; 0x40
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	689b      	ldr	r3, [r3, #8]
 8002986:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800298a:	2b00      	cmp	r3, #0
 800298c:	d123      	bne.n	80029d6 <HAL_ADC_PollForConversion+0x10c>
 800298e:	687b      	ldr	r3, [r7, #4]
 8002990:	7e1b      	ldrb	r3, [r3, #24]
 8002992:	2b00      	cmp	r3, #0
 8002994:	d11f      	bne.n	80029d6 <HAL_ADC_PollForConversion+0x10c>
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800299c:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d006      	beq.n	80029b2 <HAL_ADC_PollForConversion+0xe8>
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	689b      	ldr	r3, [r3, #8]
 80029aa:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	d111      	bne.n	80029d6 <HAL_ADC_PollForConversion+0x10c>
 80029b2:	687b      	ldr	r3, [r7, #4]
 80029b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029b6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	641a      	str	r2, [r3, #64]	; 0x40
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029c2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80029c6:	2b00      	cmp	r3, #0
 80029c8:	d105      	bne.n	80029d6 <HAL_ADC_PollForConversion+0x10c>
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029ce:	f043 0201 	orr.w	r2, r3, #1
 80029d2:	687b      	ldr	r3, [r7, #4]
 80029d4:	641a      	str	r2, [r3, #64]	; 0x40
 80029d6:	2300      	movs	r3, #0
 80029d8:	4618      	mov	r0, r3
 80029da:	3710      	adds	r7, #16
 80029dc:	46bd      	mov	sp, r7
 80029de:	bd80      	pop	{r7, pc}

080029e0 <HAL_ADC_GetValue>:
 80029e0:	b480      	push	{r7}
 80029e2:	b083      	sub	sp, #12
 80029e4:	af00      	add	r7, sp, #0
 80029e6:	6078      	str	r0, [r7, #4]
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029ee:	4618      	mov	r0, r3
 80029f0:	370c      	adds	r7, #12
 80029f2:	46bd      	mov	sp, r7
 80029f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029f8:	4770      	bx	lr
	...

080029fc <HAL_ADC_ConfigChannel>:
 80029fc:	b480      	push	{r7}
 80029fe:	b085      	sub	sp, #20
 8002a00:	af00      	add	r7, sp, #0
 8002a02:	6078      	str	r0, [r7, #4]
 8002a04:	6039      	str	r1, [r7, #0]
 8002a06:	2300      	movs	r3, #0
 8002a08:	60bb      	str	r3, [r7, #8]
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002a10:	2b01      	cmp	r3, #1
 8002a12:	d101      	bne.n	8002a18 <HAL_ADC_ConfigChannel+0x1c>
 8002a14:	2302      	movs	r3, #2
 8002a16:	e105      	b.n	8002c24 <HAL_ADC_ConfigChannel+0x228>
 8002a18:	687b      	ldr	r3, [r7, #4]
 8002a1a:	2201      	movs	r2, #1
 8002a1c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a20:	683b      	ldr	r3, [r7, #0]
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	2b09      	cmp	r3, #9
 8002a26:	d925      	bls.n	8002a74 <HAL_ADC_ConfigChannel+0x78>
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	68d9      	ldr	r1, [r3, #12]
 8002a2e:	683b      	ldr	r3, [r7, #0]
 8002a30:	681b      	ldr	r3, [r3, #0]
 8002a32:	b29b      	uxth	r3, r3
 8002a34:	461a      	mov	r2, r3
 8002a36:	4613      	mov	r3, r2
 8002a38:	005b      	lsls	r3, r3, #1
 8002a3a:	4413      	add	r3, r2
 8002a3c:	3b1e      	subs	r3, #30
 8002a3e:	2207      	movs	r2, #7
 8002a40:	fa02 f303 	lsl.w	r3, r2, r3
 8002a44:	43da      	mvns	r2, r3
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	681b      	ldr	r3, [r3, #0]
 8002a4a:	400a      	ands	r2, r1
 8002a4c:	60da      	str	r2, [r3, #12]
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	68d9      	ldr	r1, [r3, #12]
 8002a54:	683b      	ldr	r3, [r7, #0]
 8002a56:	689a      	ldr	r2, [r3, #8]
 8002a58:	683b      	ldr	r3, [r7, #0]
 8002a5a:	681b      	ldr	r3, [r3, #0]
 8002a5c:	b29b      	uxth	r3, r3
 8002a5e:	4618      	mov	r0, r3
 8002a60:	4603      	mov	r3, r0
 8002a62:	005b      	lsls	r3, r3, #1
 8002a64:	4403      	add	r3, r0
 8002a66:	3b1e      	subs	r3, #30
 8002a68:	409a      	lsls	r2, r3
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	681b      	ldr	r3, [r3, #0]
 8002a6e:	430a      	orrs	r2, r1
 8002a70:	60da      	str	r2, [r3, #12]
 8002a72:	e022      	b.n	8002aba <HAL_ADC_ConfigChannel+0xbe>
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	681b      	ldr	r3, [r3, #0]
 8002a78:	6919      	ldr	r1, [r3, #16]
 8002a7a:	683b      	ldr	r3, [r7, #0]
 8002a7c:	681b      	ldr	r3, [r3, #0]
 8002a7e:	b29b      	uxth	r3, r3
 8002a80:	461a      	mov	r2, r3
 8002a82:	4613      	mov	r3, r2
 8002a84:	005b      	lsls	r3, r3, #1
 8002a86:	4413      	add	r3, r2
 8002a88:	2207      	movs	r2, #7
 8002a8a:	fa02 f303 	lsl.w	r3, r2, r3
 8002a8e:	43da      	mvns	r2, r3
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	681b      	ldr	r3, [r3, #0]
 8002a94:	400a      	ands	r2, r1
 8002a96:	611a      	str	r2, [r3, #16]
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	6919      	ldr	r1, [r3, #16]
 8002a9e:	683b      	ldr	r3, [r7, #0]
 8002aa0:	689a      	ldr	r2, [r3, #8]
 8002aa2:	683b      	ldr	r3, [r7, #0]
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	b29b      	uxth	r3, r3
 8002aa8:	4618      	mov	r0, r3
 8002aaa:	4603      	mov	r3, r0
 8002aac:	005b      	lsls	r3, r3, #1
 8002aae:	4403      	add	r3, r0
 8002ab0:	409a      	lsls	r2, r3
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	681b      	ldr	r3, [r3, #0]
 8002ab6:	430a      	orrs	r2, r1
 8002ab8:	611a      	str	r2, [r3, #16]
 8002aba:	683b      	ldr	r3, [r7, #0]
 8002abc:	685b      	ldr	r3, [r3, #4]
 8002abe:	2b06      	cmp	r3, #6
 8002ac0:	d824      	bhi.n	8002b0c <HAL_ADC_ConfigChannel+0x110>
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002ac8:	683b      	ldr	r3, [r7, #0]
 8002aca:	685a      	ldr	r2, [r3, #4]
 8002acc:	4613      	mov	r3, r2
 8002ace:	009b      	lsls	r3, r3, #2
 8002ad0:	4413      	add	r3, r2
 8002ad2:	3b05      	subs	r3, #5
 8002ad4:	221f      	movs	r2, #31
 8002ad6:	fa02 f303 	lsl.w	r3, r2, r3
 8002ada:	43da      	mvns	r2, r3
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	400a      	ands	r2, r1
 8002ae2:	635a      	str	r2, [r3, #52]	; 0x34
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002aea:	683b      	ldr	r3, [r7, #0]
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	b29b      	uxth	r3, r3
 8002af0:	4618      	mov	r0, r3
 8002af2:	683b      	ldr	r3, [r7, #0]
 8002af4:	685a      	ldr	r2, [r3, #4]
 8002af6:	4613      	mov	r3, r2
 8002af8:	009b      	lsls	r3, r3, #2
 8002afa:	4413      	add	r3, r2
 8002afc:	3b05      	subs	r3, #5
 8002afe:	fa00 f203 	lsl.w	r2, r0, r3
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	681b      	ldr	r3, [r3, #0]
 8002b06:	430a      	orrs	r2, r1
 8002b08:	635a      	str	r2, [r3, #52]	; 0x34
 8002b0a:	e04c      	b.n	8002ba6 <HAL_ADC_ConfigChannel+0x1aa>
 8002b0c:	683b      	ldr	r3, [r7, #0]
 8002b0e:	685b      	ldr	r3, [r3, #4]
 8002b10:	2b0c      	cmp	r3, #12
 8002b12:	d824      	bhi.n	8002b5e <HAL_ADC_ConfigChannel+0x162>
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002b1a:	683b      	ldr	r3, [r7, #0]
 8002b1c:	685a      	ldr	r2, [r3, #4]
 8002b1e:	4613      	mov	r3, r2
 8002b20:	009b      	lsls	r3, r3, #2
 8002b22:	4413      	add	r3, r2
 8002b24:	3b23      	subs	r3, #35	; 0x23
 8002b26:	221f      	movs	r2, #31
 8002b28:	fa02 f303 	lsl.w	r3, r2, r3
 8002b2c:	43da      	mvns	r2, r3
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	681b      	ldr	r3, [r3, #0]
 8002b32:	400a      	ands	r2, r1
 8002b34:	631a      	str	r2, [r3, #48]	; 0x30
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	681b      	ldr	r3, [r3, #0]
 8002b3a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002b3c:	683b      	ldr	r3, [r7, #0]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	b29b      	uxth	r3, r3
 8002b42:	4618      	mov	r0, r3
 8002b44:	683b      	ldr	r3, [r7, #0]
 8002b46:	685a      	ldr	r2, [r3, #4]
 8002b48:	4613      	mov	r3, r2
 8002b4a:	009b      	lsls	r3, r3, #2
 8002b4c:	4413      	add	r3, r2
 8002b4e:	3b23      	subs	r3, #35	; 0x23
 8002b50:	fa00 f203 	lsl.w	r2, r0, r3
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	681b      	ldr	r3, [r3, #0]
 8002b58:	430a      	orrs	r2, r1
 8002b5a:	631a      	str	r2, [r3, #48]	; 0x30
 8002b5c:	e023      	b.n	8002ba6 <HAL_ADC_ConfigChannel+0x1aa>
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002b64:	683b      	ldr	r3, [r7, #0]
 8002b66:	685a      	ldr	r2, [r3, #4]
 8002b68:	4613      	mov	r3, r2
 8002b6a:	009b      	lsls	r3, r3, #2
 8002b6c:	4413      	add	r3, r2
 8002b6e:	3b41      	subs	r3, #65	; 0x41
 8002b70:	221f      	movs	r2, #31
 8002b72:	fa02 f303 	lsl.w	r3, r2, r3
 8002b76:	43da      	mvns	r2, r3
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	681b      	ldr	r3, [r3, #0]
 8002b7c:	400a      	ands	r2, r1
 8002b7e:	62da      	str	r2, [r3, #44]	; 0x2c
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002b86:	683b      	ldr	r3, [r7, #0]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	b29b      	uxth	r3, r3
 8002b8c:	4618      	mov	r0, r3
 8002b8e:	683b      	ldr	r3, [r7, #0]
 8002b90:	685a      	ldr	r2, [r3, #4]
 8002b92:	4613      	mov	r3, r2
 8002b94:	009b      	lsls	r3, r3, #2
 8002b96:	4413      	add	r3, r2
 8002b98:	3b41      	subs	r3, #65	; 0x41
 8002b9a:	fa00 f203 	lsl.w	r2, r0, r3
 8002b9e:	687b      	ldr	r3, [r7, #4]
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	430a      	orrs	r2, r1
 8002ba4:	62da      	str	r2, [r3, #44]	; 0x2c
 8002ba6:	4b22      	ldr	r3, [pc, #136]	; (8002c30 <HAL_ADC_ConfigChannel+0x234>)
 8002ba8:	60fb      	str	r3, [r7, #12]
 8002baa:	687b      	ldr	r3, [r7, #4]
 8002bac:	681b      	ldr	r3, [r3, #0]
 8002bae:	4a21      	ldr	r2, [pc, #132]	; (8002c34 <HAL_ADC_ConfigChannel+0x238>)
 8002bb0:	4293      	cmp	r3, r2
 8002bb2:	d109      	bne.n	8002bc8 <HAL_ADC_ConfigChannel+0x1cc>
 8002bb4:	683b      	ldr	r3, [r7, #0]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	2b12      	cmp	r3, #18
 8002bba:	d105      	bne.n	8002bc8 <HAL_ADC_ConfigChannel+0x1cc>
 8002bbc:	68fb      	ldr	r3, [r7, #12]
 8002bbe:	685b      	ldr	r3, [r3, #4]
 8002bc0:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8002bc4:	68fb      	ldr	r3, [r7, #12]
 8002bc6:	605a      	str	r2, [r3, #4]
 8002bc8:	687b      	ldr	r3, [r7, #4]
 8002bca:	681b      	ldr	r3, [r3, #0]
 8002bcc:	4a19      	ldr	r2, [pc, #100]	; (8002c34 <HAL_ADC_ConfigChannel+0x238>)
 8002bce:	4293      	cmp	r3, r2
 8002bd0:	d123      	bne.n	8002c1a <HAL_ADC_ConfigChannel+0x21e>
 8002bd2:	683b      	ldr	r3, [r7, #0]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	2b10      	cmp	r3, #16
 8002bd8:	d003      	beq.n	8002be2 <HAL_ADC_ConfigChannel+0x1e6>
 8002bda:	683b      	ldr	r3, [r7, #0]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	2b11      	cmp	r3, #17
 8002be0:	d11b      	bne.n	8002c1a <HAL_ADC_ConfigChannel+0x21e>
 8002be2:	68fb      	ldr	r3, [r7, #12]
 8002be4:	685b      	ldr	r3, [r3, #4]
 8002be6:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8002bea:	68fb      	ldr	r3, [r7, #12]
 8002bec:	605a      	str	r2, [r3, #4]
 8002bee:	683b      	ldr	r3, [r7, #0]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	2b10      	cmp	r3, #16
 8002bf4:	d111      	bne.n	8002c1a <HAL_ADC_ConfigChannel+0x21e>
 8002bf6:	4b10      	ldr	r3, [pc, #64]	; (8002c38 <HAL_ADC_ConfigChannel+0x23c>)
 8002bf8:	681b      	ldr	r3, [r3, #0]
 8002bfa:	4a10      	ldr	r2, [pc, #64]	; (8002c3c <HAL_ADC_ConfigChannel+0x240>)
 8002bfc:	fba2 2303 	umull	r2, r3, r2, r3
 8002c00:	0c9a      	lsrs	r2, r3, #18
 8002c02:	4613      	mov	r3, r2
 8002c04:	009b      	lsls	r3, r3, #2
 8002c06:	4413      	add	r3, r2
 8002c08:	005b      	lsls	r3, r3, #1
 8002c0a:	60bb      	str	r3, [r7, #8]
 8002c0c:	e002      	b.n	8002c14 <HAL_ADC_ConfigChannel+0x218>
 8002c0e:	68bb      	ldr	r3, [r7, #8]
 8002c10:	3b01      	subs	r3, #1
 8002c12:	60bb      	str	r3, [r7, #8]
 8002c14:	68bb      	ldr	r3, [r7, #8]
 8002c16:	2b00      	cmp	r3, #0
 8002c18:	d1f9      	bne.n	8002c0e <HAL_ADC_ConfigChannel+0x212>
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	2200      	movs	r2, #0
 8002c1e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c22:	2300      	movs	r3, #0
 8002c24:	4618      	mov	r0, r3
 8002c26:	3714      	adds	r7, #20
 8002c28:	46bd      	mov	sp, r7
 8002c2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c2e:	4770      	bx	lr
 8002c30:	40012300 	.word	0x40012300
 8002c34:	40012000 	.word	0x40012000
 8002c38:	20012c40 	.word	0x20012c40
 8002c3c:	431bde83 	.word	0x431bde83

08002c40 <ADC_Init>:
 8002c40:	b480      	push	{r7}
 8002c42:	b085      	sub	sp, #20
 8002c44:	af00      	add	r7, sp, #0
 8002c46:	6078      	str	r0, [r7, #4]
 8002c48:	4b79      	ldr	r3, [pc, #484]	; (8002e30 <ADC_Init+0x1f0>)
 8002c4a:	60fb      	str	r3, [r7, #12]
 8002c4c:	68fb      	ldr	r3, [r7, #12]
 8002c4e:	685b      	ldr	r3, [r3, #4]
 8002c50:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8002c54:	68fb      	ldr	r3, [r7, #12]
 8002c56:	605a      	str	r2, [r3, #4]
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	685a      	ldr	r2, [r3, #4]
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	685b      	ldr	r3, [r3, #4]
 8002c60:	431a      	orrs	r2, r3
 8002c62:	68fb      	ldr	r3, [r7, #12]
 8002c64:	605a      	str	r2, [r3, #4]
 8002c66:	687b      	ldr	r3, [r7, #4]
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	685a      	ldr	r2, [r3, #4]
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002c74:	605a      	str	r2, [r3, #4]
 8002c76:	687b      	ldr	r3, [r7, #4]
 8002c78:	681b      	ldr	r3, [r3, #0]
 8002c7a:	6859      	ldr	r1, [r3, #4]
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	691b      	ldr	r3, [r3, #16]
 8002c80:	021a      	lsls	r2, r3, #8
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	681b      	ldr	r3, [r3, #0]
 8002c86:	430a      	orrs	r2, r1
 8002c88:	605a      	str	r2, [r3, #4]
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	685a      	ldr	r2, [r3, #4]
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8002c98:	605a      	str	r2, [r3, #4]
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	6859      	ldr	r1, [r3, #4]
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	689a      	ldr	r2, [r3, #8]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	430a      	orrs	r2, r1
 8002caa:	605a      	str	r2, [r3, #4]
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	689a      	ldr	r2, [r3, #8]
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002cba:	609a      	str	r2, [r3, #8]
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	6899      	ldr	r1, [r3, #8]
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	68da      	ldr	r2, [r3, #12]
 8002cc6:	687b      	ldr	r3, [r7, #4]
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	430a      	orrs	r2, r1
 8002ccc:	609a      	str	r2, [r3, #8]
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002cd2:	4a58      	ldr	r2, [pc, #352]	; (8002e34 <ADC_Init+0x1f4>)
 8002cd4:	4293      	cmp	r3, r2
 8002cd6:	d022      	beq.n	8002d1e <ADC_Init+0xde>
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	681b      	ldr	r3, [r3, #0]
 8002cdc:	689a      	ldr	r2, [r3, #8]
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8002ce6:	609a      	str	r2, [r3, #8]
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	681b      	ldr	r3, [r3, #0]
 8002cec:	6899      	ldr	r1, [r3, #8]
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	430a      	orrs	r2, r1
 8002cf8:	609a      	str	r2, [r3, #8]
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	689a      	ldr	r2, [r3, #8]
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8002d08:	609a      	str	r2, [r3, #8]
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	6899      	ldr	r1, [r3, #8]
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	430a      	orrs	r2, r1
 8002d1a:	609a      	str	r2, [r3, #8]
 8002d1c:	e00f      	b.n	8002d3e <ADC_Init+0xfe>
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	689a      	ldr	r2, [r3, #8]
 8002d24:	687b      	ldr	r3, [r7, #4]
 8002d26:	681b      	ldr	r3, [r3, #0]
 8002d28:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8002d2c:	609a      	str	r2, [r3, #8]
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	681b      	ldr	r3, [r3, #0]
 8002d32:	689a      	ldr	r2, [r3, #8]
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8002d3c:	609a      	str	r2, [r3, #8]
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	681b      	ldr	r3, [r3, #0]
 8002d42:	689a      	ldr	r2, [r3, #8]
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	f022 0202 	bic.w	r2, r2, #2
 8002d4c:	609a      	str	r2, [r3, #8]
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	681b      	ldr	r3, [r3, #0]
 8002d52:	6899      	ldr	r1, [r3, #8]
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	7e1b      	ldrb	r3, [r3, #24]
 8002d58:	005a      	lsls	r2, r3, #1
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	430a      	orrs	r2, r1
 8002d60:	609a      	str	r2, [r3, #8]
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	d01b      	beq.n	8002da4 <ADC_Init+0x164>
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	685a      	ldr	r2, [r3, #4]
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002d7a:	605a      	str	r2, [r3, #4]
 8002d7c:	687b      	ldr	r3, [r7, #4]
 8002d7e:	681b      	ldr	r3, [r3, #0]
 8002d80:	685a      	ldr	r2, [r3, #4]
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	681b      	ldr	r3, [r3, #0]
 8002d86:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8002d8a:	605a      	str	r2, [r3, #4]
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	6859      	ldr	r1, [r3, #4]
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d96:	3b01      	subs	r3, #1
 8002d98:	035a      	lsls	r2, r3, #13
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	681b      	ldr	r3, [r3, #0]
 8002d9e:	430a      	orrs	r2, r1
 8002da0:	605a      	str	r2, [r3, #4]
 8002da2:	e007      	b.n	8002db4 <ADC_Init+0x174>
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	685a      	ldr	r2, [r3, #4]
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	681b      	ldr	r3, [r3, #0]
 8002dae:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002db2:	605a      	str	r2, [r3, #4]
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8002dc2:	62da      	str	r2, [r3, #44]	; 0x2c
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	681b      	ldr	r3, [r3, #0]
 8002dc8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	69db      	ldr	r3, [r3, #28]
 8002dce:	3b01      	subs	r3, #1
 8002dd0:	051a      	lsls	r2, r3, #20
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	430a      	orrs	r2, r1
 8002dd8:	62da      	str	r2, [r3, #44]	; 0x2c
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	689a      	ldr	r2, [r3, #8]
 8002de0:	687b      	ldr	r3, [r7, #4]
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8002de8:	609a      	str	r2, [r3, #8]
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	681b      	ldr	r3, [r3, #0]
 8002dee:	6899      	ldr	r1, [r3, #8]
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8002df6:	025a      	lsls	r2, r3, #9
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	430a      	orrs	r2, r1
 8002dfe:	609a      	str	r2, [r3, #8]
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	689a      	ldr	r2, [r3, #8]
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	681b      	ldr	r3, [r3, #0]
 8002e0a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002e0e:	609a      	str	r2, [r3, #8]
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	6899      	ldr	r1, [r3, #8]
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	695b      	ldr	r3, [r3, #20]
 8002e1a:	029a      	lsls	r2, r3, #10
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	430a      	orrs	r2, r1
 8002e22:	609a      	str	r2, [r3, #8]
 8002e24:	bf00      	nop
 8002e26:	3714      	adds	r7, #20
 8002e28:	46bd      	mov	sp, r7
 8002e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e2e:	4770      	bx	lr
 8002e30:	40012300 	.word	0x40012300
 8002e34:	0f000001 	.word	0x0f000001

08002e38 <HAL_CAN_Init>:
 8002e38:	b580      	push	{r7, lr}
 8002e3a:	b084      	sub	sp, #16
 8002e3c:	af00      	add	r7, sp, #0
 8002e3e:	6078      	str	r0, [r7, #4]
 8002e40:	687b      	ldr	r3, [r7, #4]
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d101      	bne.n	8002e4a <HAL_CAN_Init+0x12>
 8002e46:	2301      	movs	r3, #1
 8002e48:	e0ed      	b.n	8003026 <HAL_CAN_Init+0x1ee>
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002e50:	b2db      	uxtb	r3, r3
 8002e52:	2b00      	cmp	r3, #0
 8002e54:	d102      	bne.n	8002e5c <HAL_CAN_Init+0x24>
 8002e56:	6878      	ldr	r0, [r7, #4]
 8002e58:	f7fe fe7a 	bl	8001b50 <HAL_CAN_MspInit>
 8002e5c:	687b      	ldr	r3, [r7, #4]
 8002e5e:	681b      	ldr	r3, [r3, #0]
 8002e60:	681a      	ldr	r2, [r3, #0]
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	681b      	ldr	r3, [r3, #0]
 8002e66:	f042 0201 	orr.w	r2, r2, #1
 8002e6a:	601a      	str	r2, [r3, #0]
 8002e6c:	f7ff fbd2 	bl	8002614 <HAL_GetTick>
 8002e70:	60f8      	str	r0, [r7, #12]
 8002e72:	e012      	b.n	8002e9a <HAL_CAN_Init+0x62>
 8002e74:	f7ff fbce 	bl	8002614 <HAL_GetTick>
 8002e78:	4602      	mov	r2, r0
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	1ad3      	subs	r3, r2, r3
 8002e7e:	2b0a      	cmp	r3, #10
 8002e80:	d90b      	bls.n	8002e9a <HAL_CAN_Init+0x62>
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e86:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	625a      	str	r2, [r3, #36]	; 0x24
 8002e8e:	687b      	ldr	r3, [r7, #4]
 8002e90:	2205      	movs	r2, #5
 8002e92:	f883 2020 	strb.w	r2, [r3, #32]
 8002e96:	2301      	movs	r3, #1
 8002e98:	e0c5      	b.n	8003026 <HAL_CAN_Init+0x1ee>
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	685b      	ldr	r3, [r3, #4]
 8002ea0:	f003 0301 	and.w	r3, r3, #1
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	d0e5      	beq.n	8002e74 <HAL_CAN_Init+0x3c>
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	681a      	ldr	r2, [r3, #0]
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	f022 0202 	bic.w	r2, r2, #2
 8002eb6:	601a      	str	r2, [r3, #0]
 8002eb8:	f7ff fbac 	bl	8002614 <HAL_GetTick>
 8002ebc:	60f8      	str	r0, [r7, #12]
 8002ebe:	e012      	b.n	8002ee6 <HAL_CAN_Init+0xae>
 8002ec0:	f7ff fba8 	bl	8002614 <HAL_GetTick>
 8002ec4:	4602      	mov	r2, r0
 8002ec6:	68fb      	ldr	r3, [r7, #12]
 8002ec8:	1ad3      	subs	r3, r2, r3
 8002eca:	2b0a      	cmp	r3, #10
 8002ecc:	d90b      	bls.n	8002ee6 <HAL_CAN_Init+0xae>
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ed2:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	625a      	str	r2, [r3, #36]	; 0x24
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	2205      	movs	r2, #5
 8002ede:	f883 2020 	strb.w	r2, [r3, #32]
 8002ee2:	2301      	movs	r3, #1
 8002ee4:	e09f      	b.n	8003026 <HAL_CAN_Init+0x1ee>
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	685b      	ldr	r3, [r3, #4]
 8002eec:	f003 0302 	and.w	r3, r3, #2
 8002ef0:	2b00      	cmp	r3, #0
 8002ef2:	d1e5      	bne.n	8002ec0 <HAL_CAN_Init+0x88>
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	7e1b      	ldrb	r3, [r3, #24]
 8002ef8:	2b01      	cmp	r3, #1
 8002efa:	d108      	bne.n	8002f0e <HAL_CAN_Init+0xd6>
 8002efc:	687b      	ldr	r3, [r7, #4]
 8002efe:	681b      	ldr	r3, [r3, #0]
 8002f00:	681a      	ldr	r2, [r3, #0]
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002f0a:	601a      	str	r2, [r3, #0]
 8002f0c:	e007      	b.n	8002f1e <HAL_CAN_Init+0xe6>
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	681a      	ldr	r2, [r3, #0]
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002f1c:	601a      	str	r2, [r3, #0]
 8002f1e:	687b      	ldr	r3, [r7, #4]
 8002f20:	7e5b      	ldrb	r3, [r3, #25]
 8002f22:	2b01      	cmp	r3, #1
 8002f24:	d108      	bne.n	8002f38 <HAL_CAN_Init+0x100>
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	681a      	ldr	r2, [r3, #0]
 8002f2c:	687b      	ldr	r3, [r7, #4]
 8002f2e:	681b      	ldr	r3, [r3, #0]
 8002f30:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002f34:	601a      	str	r2, [r3, #0]
 8002f36:	e007      	b.n	8002f48 <HAL_CAN_Init+0x110>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	681a      	ldr	r2, [r3, #0]
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8002f46:	601a      	str	r2, [r3, #0]
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	7e9b      	ldrb	r3, [r3, #26]
 8002f4c:	2b01      	cmp	r3, #1
 8002f4e:	d108      	bne.n	8002f62 <HAL_CAN_Init+0x12a>
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	681b      	ldr	r3, [r3, #0]
 8002f54:	681a      	ldr	r2, [r3, #0]
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	681b      	ldr	r3, [r3, #0]
 8002f5a:	f042 0220 	orr.w	r2, r2, #32
 8002f5e:	601a      	str	r2, [r3, #0]
 8002f60:	e007      	b.n	8002f72 <HAL_CAN_Init+0x13a>
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	681b      	ldr	r3, [r3, #0]
 8002f66:	681a      	ldr	r2, [r3, #0]
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	681b      	ldr	r3, [r3, #0]
 8002f6c:	f022 0220 	bic.w	r2, r2, #32
 8002f70:	601a      	str	r2, [r3, #0]
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	7edb      	ldrb	r3, [r3, #27]
 8002f76:	2b01      	cmp	r3, #1
 8002f78:	d108      	bne.n	8002f8c <HAL_CAN_Init+0x154>
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	681a      	ldr	r2, [r3, #0]
 8002f80:	687b      	ldr	r3, [r7, #4]
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	f022 0210 	bic.w	r2, r2, #16
 8002f88:	601a      	str	r2, [r3, #0]
 8002f8a:	e007      	b.n	8002f9c <HAL_CAN_Init+0x164>
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	681b      	ldr	r3, [r3, #0]
 8002f90:	681a      	ldr	r2, [r3, #0]
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	f042 0210 	orr.w	r2, r2, #16
 8002f9a:	601a      	str	r2, [r3, #0]
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	7f1b      	ldrb	r3, [r3, #28]
 8002fa0:	2b01      	cmp	r3, #1
 8002fa2:	d108      	bne.n	8002fb6 <HAL_CAN_Init+0x17e>
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	681a      	ldr	r2, [r3, #0]
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	f042 0208 	orr.w	r2, r2, #8
 8002fb2:	601a      	str	r2, [r3, #0]
 8002fb4:	e007      	b.n	8002fc6 <HAL_CAN_Init+0x18e>
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	681b      	ldr	r3, [r3, #0]
 8002fba:	681a      	ldr	r2, [r3, #0]
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	681b      	ldr	r3, [r3, #0]
 8002fc0:	f022 0208 	bic.w	r2, r2, #8
 8002fc4:	601a      	str	r2, [r3, #0]
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	7f5b      	ldrb	r3, [r3, #29]
 8002fca:	2b01      	cmp	r3, #1
 8002fcc:	d108      	bne.n	8002fe0 <HAL_CAN_Init+0x1a8>
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	681a      	ldr	r2, [r3, #0]
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	f042 0204 	orr.w	r2, r2, #4
 8002fdc:	601a      	str	r2, [r3, #0]
 8002fde:	e007      	b.n	8002ff0 <HAL_CAN_Init+0x1b8>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	681a      	ldr	r2, [r3, #0]
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	f022 0204 	bic.w	r2, r2, #4
 8002fee:	601a      	str	r2, [r3, #0]
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	689a      	ldr	r2, [r3, #8]
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	68db      	ldr	r3, [r3, #12]
 8002ff8:	431a      	orrs	r2, r3
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	691b      	ldr	r3, [r3, #16]
 8002ffe:	431a      	orrs	r2, r3
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	695b      	ldr	r3, [r3, #20]
 8003004:	ea42 0103 	orr.w	r1, r2, r3
 8003008:	687b      	ldr	r3, [r7, #4]
 800300a:	685b      	ldr	r3, [r3, #4]
 800300c:	1e5a      	subs	r2, r3, #1
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	430a      	orrs	r2, r1
 8003014:	61da      	str	r2, [r3, #28]
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	2200      	movs	r2, #0
 800301a:	625a      	str	r2, [r3, #36]	; 0x24
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	2201      	movs	r2, #1
 8003020:	f883 2020 	strb.w	r2, [r3, #32]
 8003024:	2300      	movs	r3, #0
 8003026:	4618      	mov	r0, r3
 8003028:	3710      	adds	r7, #16
 800302a:	46bd      	mov	sp, r7
 800302c:	bd80      	pop	{r7, pc}

0800302e <HAL_CAN_IRQHandler>:
 800302e:	b580      	push	{r7, lr}
 8003030:	b08a      	sub	sp, #40	; 0x28
 8003032:	af00      	add	r7, sp, #0
 8003034:	6078      	str	r0, [r7, #4]
 8003036:	2300      	movs	r3, #0
 8003038:	627b      	str	r3, [r7, #36]	; 0x24
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	695b      	ldr	r3, [r3, #20]
 8003040:	623b      	str	r3, [r7, #32]
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	685b      	ldr	r3, [r3, #4]
 8003048:	61fb      	str	r3, [r7, #28]
 800304a:	687b      	ldr	r3, [r7, #4]
 800304c:	681b      	ldr	r3, [r3, #0]
 800304e:	689b      	ldr	r3, [r3, #8]
 8003050:	61bb      	str	r3, [r7, #24]
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	681b      	ldr	r3, [r3, #0]
 8003056:	68db      	ldr	r3, [r3, #12]
 8003058:	617b      	str	r3, [r7, #20]
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	691b      	ldr	r3, [r3, #16]
 8003060:	613b      	str	r3, [r7, #16]
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	699b      	ldr	r3, [r3, #24]
 8003068:	60fb      	str	r3, [r7, #12]
 800306a:	6a3b      	ldr	r3, [r7, #32]
 800306c:	f003 0301 	and.w	r3, r3, #1
 8003070:	2b00      	cmp	r3, #0
 8003072:	d07c      	beq.n	800316e <HAL_CAN_IRQHandler+0x140>
 8003074:	69bb      	ldr	r3, [r7, #24]
 8003076:	f003 0301 	and.w	r3, r3, #1
 800307a:	2b00      	cmp	r3, #0
 800307c:	d023      	beq.n	80030c6 <HAL_CAN_IRQHandler+0x98>
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	2201      	movs	r2, #1
 8003084:	609a      	str	r2, [r3, #8]
 8003086:	69bb      	ldr	r3, [r7, #24]
 8003088:	f003 0302 	and.w	r3, r3, #2
 800308c:	2b00      	cmp	r3, #0
 800308e:	d003      	beq.n	8003098 <HAL_CAN_IRQHandler+0x6a>
 8003090:	6878      	ldr	r0, [r7, #4]
 8003092:	f000 f983 	bl	800339c <HAL_CAN_TxMailbox0CompleteCallback>
 8003096:	e016      	b.n	80030c6 <HAL_CAN_IRQHandler+0x98>
 8003098:	69bb      	ldr	r3, [r7, #24]
 800309a:	f003 0304 	and.w	r3, r3, #4
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d004      	beq.n	80030ac <HAL_CAN_IRQHandler+0x7e>
 80030a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030a4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80030a8:	627b      	str	r3, [r7, #36]	; 0x24
 80030aa:	e00c      	b.n	80030c6 <HAL_CAN_IRQHandler+0x98>
 80030ac:	69bb      	ldr	r3, [r7, #24]
 80030ae:	f003 0308 	and.w	r3, r3, #8
 80030b2:	2b00      	cmp	r3, #0
 80030b4:	d004      	beq.n	80030c0 <HAL_CAN_IRQHandler+0x92>
 80030b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030b8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80030bc:	627b      	str	r3, [r7, #36]	; 0x24
 80030be:	e002      	b.n	80030c6 <HAL_CAN_IRQHandler+0x98>
 80030c0:	6878      	ldr	r0, [r7, #4]
 80030c2:	f000 f989 	bl	80033d8 <HAL_CAN_TxMailbox0AbortCallback>
 80030c6:	69bb      	ldr	r3, [r7, #24]
 80030c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80030cc:	2b00      	cmp	r3, #0
 80030ce:	d024      	beq.n	800311a <HAL_CAN_IRQHandler+0xec>
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	f44f 7280 	mov.w	r2, #256	; 0x100
 80030d8:	609a      	str	r2, [r3, #8]
 80030da:	69bb      	ldr	r3, [r7, #24]
 80030dc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	d003      	beq.n	80030ec <HAL_CAN_IRQHandler+0xbe>
 80030e4:	6878      	ldr	r0, [r7, #4]
 80030e6:	f000 f963 	bl	80033b0 <HAL_CAN_TxMailbox1CompleteCallback>
 80030ea:	e016      	b.n	800311a <HAL_CAN_IRQHandler+0xec>
 80030ec:	69bb      	ldr	r3, [r7, #24]
 80030ee:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	d004      	beq.n	8003100 <HAL_CAN_IRQHandler+0xd2>
 80030f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030f8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80030fc:	627b      	str	r3, [r7, #36]	; 0x24
 80030fe:	e00c      	b.n	800311a <HAL_CAN_IRQHandler+0xec>
 8003100:	69bb      	ldr	r3, [r7, #24]
 8003102:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003106:	2b00      	cmp	r3, #0
 8003108:	d004      	beq.n	8003114 <HAL_CAN_IRQHandler+0xe6>
 800310a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800310c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003110:	627b      	str	r3, [r7, #36]	; 0x24
 8003112:	e002      	b.n	800311a <HAL_CAN_IRQHandler+0xec>
 8003114:	6878      	ldr	r0, [r7, #4]
 8003116:	f000 f969 	bl	80033ec <HAL_CAN_TxMailbox1AbortCallback>
 800311a:	69bb      	ldr	r3, [r7, #24]
 800311c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003120:	2b00      	cmp	r3, #0
 8003122:	d024      	beq.n	800316e <HAL_CAN_IRQHandler+0x140>
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800312c:	609a      	str	r2, [r3, #8]
 800312e:	69bb      	ldr	r3, [r7, #24]
 8003130:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003134:	2b00      	cmp	r3, #0
 8003136:	d003      	beq.n	8003140 <HAL_CAN_IRQHandler+0x112>
 8003138:	6878      	ldr	r0, [r7, #4]
 800313a:	f000 f943 	bl	80033c4 <HAL_CAN_TxMailbox2CompleteCallback>
 800313e:	e016      	b.n	800316e <HAL_CAN_IRQHandler+0x140>
 8003140:	69bb      	ldr	r3, [r7, #24]
 8003142:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8003146:	2b00      	cmp	r3, #0
 8003148:	d004      	beq.n	8003154 <HAL_CAN_IRQHandler+0x126>
 800314a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800314c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003150:	627b      	str	r3, [r7, #36]	; 0x24
 8003152:	e00c      	b.n	800316e <HAL_CAN_IRQHandler+0x140>
 8003154:	69bb      	ldr	r3, [r7, #24]
 8003156:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800315a:	2b00      	cmp	r3, #0
 800315c:	d004      	beq.n	8003168 <HAL_CAN_IRQHandler+0x13a>
 800315e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003160:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003164:	627b      	str	r3, [r7, #36]	; 0x24
 8003166:	e002      	b.n	800316e <HAL_CAN_IRQHandler+0x140>
 8003168:	6878      	ldr	r0, [r7, #4]
 800316a:	f000 f949 	bl	8003400 <HAL_CAN_TxMailbox2AbortCallback>
 800316e:	6a3b      	ldr	r3, [r7, #32]
 8003170:	f003 0308 	and.w	r3, r3, #8
 8003174:	2b00      	cmp	r3, #0
 8003176:	d00c      	beq.n	8003192 <HAL_CAN_IRQHandler+0x164>
 8003178:	697b      	ldr	r3, [r7, #20]
 800317a:	f003 0310 	and.w	r3, r3, #16
 800317e:	2b00      	cmp	r3, #0
 8003180:	d007      	beq.n	8003192 <HAL_CAN_IRQHandler+0x164>
 8003182:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003184:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003188:	627b      	str	r3, [r7, #36]	; 0x24
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	2210      	movs	r2, #16
 8003190:	60da      	str	r2, [r3, #12]
 8003192:	6a3b      	ldr	r3, [r7, #32]
 8003194:	f003 0304 	and.w	r3, r3, #4
 8003198:	2b00      	cmp	r3, #0
 800319a:	d00b      	beq.n	80031b4 <HAL_CAN_IRQHandler+0x186>
 800319c:	697b      	ldr	r3, [r7, #20]
 800319e:	f003 0308 	and.w	r3, r3, #8
 80031a2:	2b00      	cmp	r3, #0
 80031a4:	d006      	beq.n	80031b4 <HAL_CAN_IRQHandler+0x186>
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	2208      	movs	r2, #8
 80031ac:	60da      	str	r2, [r3, #12]
 80031ae:	6878      	ldr	r0, [r7, #4]
 80031b0:	f000 f93a 	bl	8003428 <HAL_CAN_RxFifo0FullCallback>
 80031b4:	6a3b      	ldr	r3, [r7, #32]
 80031b6:	f003 0302 	and.w	r3, r3, #2
 80031ba:	2b00      	cmp	r3, #0
 80031bc:	d009      	beq.n	80031d2 <HAL_CAN_IRQHandler+0x1a4>
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	68db      	ldr	r3, [r3, #12]
 80031c4:	f003 0303 	and.w	r3, r3, #3
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	d002      	beq.n	80031d2 <HAL_CAN_IRQHandler+0x1a4>
 80031cc:	6878      	ldr	r0, [r7, #4]
 80031ce:	f000 f921 	bl	8003414 <HAL_CAN_RxFifo0MsgPendingCallback>
 80031d2:	6a3b      	ldr	r3, [r7, #32]
 80031d4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80031d8:	2b00      	cmp	r3, #0
 80031da:	d00c      	beq.n	80031f6 <HAL_CAN_IRQHandler+0x1c8>
 80031dc:	693b      	ldr	r3, [r7, #16]
 80031de:	f003 0310 	and.w	r3, r3, #16
 80031e2:	2b00      	cmp	r3, #0
 80031e4:	d007      	beq.n	80031f6 <HAL_CAN_IRQHandler+0x1c8>
 80031e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031e8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80031ec:	627b      	str	r3, [r7, #36]	; 0x24
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	2210      	movs	r2, #16
 80031f4:	611a      	str	r2, [r3, #16]
 80031f6:	6a3b      	ldr	r3, [r7, #32]
 80031f8:	f003 0320 	and.w	r3, r3, #32
 80031fc:	2b00      	cmp	r3, #0
 80031fe:	d00b      	beq.n	8003218 <HAL_CAN_IRQHandler+0x1ea>
 8003200:	693b      	ldr	r3, [r7, #16]
 8003202:	f003 0308 	and.w	r3, r3, #8
 8003206:	2b00      	cmp	r3, #0
 8003208:	d006      	beq.n	8003218 <HAL_CAN_IRQHandler+0x1ea>
 800320a:	687b      	ldr	r3, [r7, #4]
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	2208      	movs	r2, #8
 8003210:	611a      	str	r2, [r3, #16]
 8003212:	6878      	ldr	r0, [r7, #4]
 8003214:	f000 f91c 	bl	8003450 <HAL_CAN_RxFifo1FullCallback>
 8003218:	6a3b      	ldr	r3, [r7, #32]
 800321a:	f003 0310 	and.w	r3, r3, #16
 800321e:	2b00      	cmp	r3, #0
 8003220:	d009      	beq.n	8003236 <HAL_CAN_IRQHandler+0x208>
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	691b      	ldr	r3, [r3, #16]
 8003228:	f003 0303 	and.w	r3, r3, #3
 800322c:	2b00      	cmp	r3, #0
 800322e:	d002      	beq.n	8003236 <HAL_CAN_IRQHandler+0x208>
 8003230:	6878      	ldr	r0, [r7, #4]
 8003232:	f000 f903 	bl	800343c <HAL_CAN_RxFifo1MsgPendingCallback>
 8003236:	6a3b      	ldr	r3, [r7, #32]
 8003238:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800323c:	2b00      	cmp	r3, #0
 800323e:	d00b      	beq.n	8003258 <HAL_CAN_IRQHandler+0x22a>
 8003240:	69fb      	ldr	r3, [r7, #28]
 8003242:	f003 0310 	and.w	r3, r3, #16
 8003246:	2b00      	cmp	r3, #0
 8003248:	d006      	beq.n	8003258 <HAL_CAN_IRQHandler+0x22a>
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	2210      	movs	r2, #16
 8003250:	605a      	str	r2, [r3, #4]
 8003252:	6878      	ldr	r0, [r7, #4]
 8003254:	f000 f906 	bl	8003464 <HAL_CAN_SleepCallback>
 8003258:	6a3b      	ldr	r3, [r7, #32]
 800325a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800325e:	2b00      	cmp	r3, #0
 8003260:	d00b      	beq.n	800327a <HAL_CAN_IRQHandler+0x24c>
 8003262:	69fb      	ldr	r3, [r7, #28]
 8003264:	f003 0308 	and.w	r3, r3, #8
 8003268:	2b00      	cmp	r3, #0
 800326a:	d006      	beq.n	800327a <HAL_CAN_IRQHandler+0x24c>
 800326c:	687b      	ldr	r3, [r7, #4]
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	2208      	movs	r2, #8
 8003272:	605a      	str	r2, [r3, #4]
 8003274:	6878      	ldr	r0, [r7, #4]
 8003276:	f000 f8ff 	bl	8003478 <HAL_CAN_WakeUpFromRxMsgCallback>
 800327a:	6a3b      	ldr	r3, [r7, #32]
 800327c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003280:	2b00      	cmp	r3, #0
 8003282:	d07b      	beq.n	800337c <HAL_CAN_IRQHandler+0x34e>
 8003284:	69fb      	ldr	r3, [r7, #28]
 8003286:	f003 0304 	and.w	r3, r3, #4
 800328a:	2b00      	cmp	r3, #0
 800328c:	d072      	beq.n	8003374 <HAL_CAN_IRQHandler+0x346>
 800328e:	6a3b      	ldr	r3, [r7, #32]
 8003290:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003294:	2b00      	cmp	r3, #0
 8003296:	d008      	beq.n	80032aa <HAL_CAN_IRQHandler+0x27c>
 8003298:	68fb      	ldr	r3, [r7, #12]
 800329a:	f003 0301 	and.w	r3, r3, #1
 800329e:	2b00      	cmp	r3, #0
 80032a0:	d003      	beq.n	80032aa <HAL_CAN_IRQHandler+0x27c>
 80032a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80032a4:	f043 0301 	orr.w	r3, r3, #1
 80032a8:	627b      	str	r3, [r7, #36]	; 0x24
 80032aa:	6a3b      	ldr	r3, [r7, #32]
 80032ac:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80032b0:	2b00      	cmp	r3, #0
 80032b2:	d008      	beq.n	80032c6 <HAL_CAN_IRQHandler+0x298>
 80032b4:	68fb      	ldr	r3, [r7, #12]
 80032b6:	f003 0302 	and.w	r3, r3, #2
 80032ba:	2b00      	cmp	r3, #0
 80032bc:	d003      	beq.n	80032c6 <HAL_CAN_IRQHandler+0x298>
 80032be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80032c0:	f043 0302 	orr.w	r3, r3, #2
 80032c4:	627b      	str	r3, [r7, #36]	; 0x24
 80032c6:	6a3b      	ldr	r3, [r7, #32]
 80032c8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d008      	beq.n	80032e2 <HAL_CAN_IRQHandler+0x2b4>
 80032d0:	68fb      	ldr	r3, [r7, #12]
 80032d2:	f003 0304 	and.w	r3, r3, #4
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d003      	beq.n	80032e2 <HAL_CAN_IRQHandler+0x2b4>
 80032da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80032dc:	f043 0304 	orr.w	r3, r3, #4
 80032e0:	627b      	str	r3, [r7, #36]	; 0x24
 80032e2:	6a3b      	ldr	r3, [r7, #32]
 80032e4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80032e8:	2b00      	cmp	r3, #0
 80032ea:	d043      	beq.n	8003374 <HAL_CAN_IRQHandler+0x346>
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d03e      	beq.n	8003374 <HAL_CAN_IRQHandler+0x346>
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80032fc:	2b60      	cmp	r3, #96	; 0x60
 80032fe:	d02b      	beq.n	8003358 <HAL_CAN_IRQHandler+0x32a>
 8003300:	2b60      	cmp	r3, #96	; 0x60
 8003302:	d82e      	bhi.n	8003362 <HAL_CAN_IRQHandler+0x334>
 8003304:	2b50      	cmp	r3, #80	; 0x50
 8003306:	d022      	beq.n	800334e <HAL_CAN_IRQHandler+0x320>
 8003308:	2b50      	cmp	r3, #80	; 0x50
 800330a:	d82a      	bhi.n	8003362 <HAL_CAN_IRQHandler+0x334>
 800330c:	2b40      	cmp	r3, #64	; 0x40
 800330e:	d019      	beq.n	8003344 <HAL_CAN_IRQHandler+0x316>
 8003310:	2b40      	cmp	r3, #64	; 0x40
 8003312:	d826      	bhi.n	8003362 <HAL_CAN_IRQHandler+0x334>
 8003314:	2b30      	cmp	r3, #48	; 0x30
 8003316:	d010      	beq.n	800333a <HAL_CAN_IRQHandler+0x30c>
 8003318:	2b30      	cmp	r3, #48	; 0x30
 800331a:	d822      	bhi.n	8003362 <HAL_CAN_IRQHandler+0x334>
 800331c:	2b10      	cmp	r3, #16
 800331e:	d002      	beq.n	8003326 <HAL_CAN_IRQHandler+0x2f8>
 8003320:	2b20      	cmp	r3, #32
 8003322:	d005      	beq.n	8003330 <HAL_CAN_IRQHandler+0x302>
 8003324:	e01d      	b.n	8003362 <HAL_CAN_IRQHandler+0x334>
 8003326:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003328:	f043 0308 	orr.w	r3, r3, #8
 800332c:	627b      	str	r3, [r7, #36]	; 0x24
 800332e:	e019      	b.n	8003364 <HAL_CAN_IRQHandler+0x336>
 8003330:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003332:	f043 0310 	orr.w	r3, r3, #16
 8003336:	627b      	str	r3, [r7, #36]	; 0x24
 8003338:	e014      	b.n	8003364 <HAL_CAN_IRQHandler+0x336>
 800333a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800333c:	f043 0320 	orr.w	r3, r3, #32
 8003340:	627b      	str	r3, [r7, #36]	; 0x24
 8003342:	e00f      	b.n	8003364 <HAL_CAN_IRQHandler+0x336>
 8003344:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003346:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800334a:	627b      	str	r3, [r7, #36]	; 0x24
 800334c:	e00a      	b.n	8003364 <HAL_CAN_IRQHandler+0x336>
 800334e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003350:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003354:	627b      	str	r3, [r7, #36]	; 0x24
 8003356:	e005      	b.n	8003364 <HAL_CAN_IRQHandler+0x336>
 8003358:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800335a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800335e:	627b      	str	r3, [r7, #36]	; 0x24
 8003360:	e000      	b.n	8003364 <HAL_CAN_IRQHandler+0x336>
 8003362:	bf00      	nop
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	699a      	ldr	r2, [r3, #24]
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8003372:	619a      	str	r2, [r3, #24]
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	2204      	movs	r2, #4
 800337a:	605a      	str	r2, [r3, #4]
 800337c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800337e:	2b00      	cmp	r3, #0
 8003380:	d008      	beq.n	8003394 <HAL_CAN_IRQHandler+0x366>
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003386:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003388:	431a      	orrs	r2, r3
 800338a:	687b      	ldr	r3, [r7, #4]
 800338c:	625a      	str	r2, [r3, #36]	; 0x24
 800338e:	6878      	ldr	r0, [r7, #4]
 8003390:	f000 f87c 	bl	800348c <HAL_CAN_ErrorCallback>
 8003394:	bf00      	nop
 8003396:	3728      	adds	r7, #40	; 0x28
 8003398:	46bd      	mov	sp, r7
 800339a:	bd80      	pop	{r7, pc}

0800339c <HAL_CAN_TxMailbox0CompleteCallback>:
 800339c:	b480      	push	{r7}
 800339e:	b083      	sub	sp, #12
 80033a0:	af00      	add	r7, sp, #0
 80033a2:	6078      	str	r0, [r7, #4]
 80033a4:	bf00      	nop
 80033a6:	370c      	adds	r7, #12
 80033a8:	46bd      	mov	sp, r7
 80033aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ae:	4770      	bx	lr

080033b0 <HAL_CAN_TxMailbox1CompleteCallback>:
 80033b0:	b480      	push	{r7}
 80033b2:	b083      	sub	sp, #12
 80033b4:	af00      	add	r7, sp, #0
 80033b6:	6078      	str	r0, [r7, #4]
 80033b8:	bf00      	nop
 80033ba:	370c      	adds	r7, #12
 80033bc:	46bd      	mov	sp, r7
 80033be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033c2:	4770      	bx	lr

080033c4 <HAL_CAN_TxMailbox2CompleteCallback>:
 80033c4:	b480      	push	{r7}
 80033c6:	b083      	sub	sp, #12
 80033c8:	af00      	add	r7, sp, #0
 80033ca:	6078      	str	r0, [r7, #4]
 80033cc:	bf00      	nop
 80033ce:	370c      	adds	r7, #12
 80033d0:	46bd      	mov	sp, r7
 80033d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033d6:	4770      	bx	lr

080033d8 <HAL_CAN_TxMailbox0AbortCallback>:
 80033d8:	b480      	push	{r7}
 80033da:	b083      	sub	sp, #12
 80033dc:	af00      	add	r7, sp, #0
 80033de:	6078      	str	r0, [r7, #4]
 80033e0:	bf00      	nop
 80033e2:	370c      	adds	r7, #12
 80033e4:	46bd      	mov	sp, r7
 80033e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ea:	4770      	bx	lr

080033ec <HAL_CAN_TxMailbox1AbortCallback>:
 80033ec:	b480      	push	{r7}
 80033ee:	b083      	sub	sp, #12
 80033f0:	af00      	add	r7, sp, #0
 80033f2:	6078      	str	r0, [r7, #4]
 80033f4:	bf00      	nop
 80033f6:	370c      	adds	r7, #12
 80033f8:	46bd      	mov	sp, r7
 80033fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033fe:	4770      	bx	lr

08003400 <HAL_CAN_TxMailbox2AbortCallback>:
 8003400:	b480      	push	{r7}
 8003402:	b083      	sub	sp, #12
 8003404:	af00      	add	r7, sp, #0
 8003406:	6078      	str	r0, [r7, #4]
 8003408:	bf00      	nop
 800340a:	370c      	adds	r7, #12
 800340c:	46bd      	mov	sp, r7
 800340e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003412:	4770      	bx	lr

08003414 <HAL_CAN_RxFifo0MsgPendingCallback>:
 8003414:	b480      	push	{r7}
 8003416:	b083      	sub	sp, #12
 8003418:	af00      	add	r7, sp, #0
 800341a:	6078      	str	r0, [r7, #4]
 800341c:	bf00      	nop
 800341e:	370c      	adds	r7, #12
 8003420:	46bd      	mov	sp, r7
 8003422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003426:	4770      	bx	lr

08003428 <HAL_CAN_RxFifo0FullCallback>:
 8003428:	b480      	push	{r7}
 800342a:	b083      	sub	sp, #12
 800342c:	af00      	add	r7, sp, #0
 800342e:	6078      	str	r0, [r7, #4]
 8003430:	bf00      	nop
 8003432:	370c      	adds	r7, #12
 8003434:	46bd      	mov	sp, r7
 8003436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800343a:	4770      	bx	lr

0800343c <HAL_CAN_RxFifo1MsgPendingCallback>:
 800343c:	b480      	push	{r7}
 800343e:	b083      	sub	sp, #12
 8003440:	af00      	add	r7, sp, #0
 8003442:	6078      	str	r0, [r7, #4]
 8003444:	bf00      	nop
 8003446:	370c      	adds	r7, #12
 8003448:	46bd      	mov	sp, r7
 800344a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800344e:	4770      	bx	lr

08003450 <HAL_CAN_RxFifo1FullCallback>:
 8003450:	b480      	push	{r7}
 8003452:	b083      	sub	sp, #12
 8003454:	af00      	add	r7, sp, #0
 8003456:	6078      	str	r0, [r7, #4]
 8003458:	bf00      	nop
 800345a:	370c      	adds	r7, #12
 800345c:	46bd      	mov	sp, r7
 800345e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003462:	4770      	bx	lr

08003464 <HAL_CAN_SleepCallback>:
 8003464:	b480      	push	{r7}
 8003466:	b083      	sub	sp, #12
 8003468:	af00      	add	r7, sp, #0
 800346a:	6078      	str	r0, [r7, #4]
 800346c:	bf00      	nop
 800346e:	370c      	adds	r7, #12
 8003470:	46bd      	mov	sp, r7
 8003472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003476:	4770      	bx	lr

08003478 <HAL_CAN_WakeUpFromRxMsgCallback>:
 8003478:	b480      	push	{r7}
 800347a:	b083      	sub	sp, #12
 800347c:	af00      	add	r7, sp, #0
 800347e:	6078      	str	r0, [r7, #4]
 8003480:	bf00      	nop
 8003482:	370c      	adds	r7, #12
 8003484:	46bd      	mov	sp, r7
 8003486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800348a:	4770      	bx	lr

0800348c <HAL_CAN_ErrorCallback>:
 800348c:	b480      	push	{r7}
 800348e:	b083      	sub	sp, #12
 8003490:	af00      	add	r7, sp, #0
 8003492:	6078      	str	r0, [r7, #4]
 8003494:	bf00      	nop
 8003496:	370c      	adds	r7, #12
 8003498:	46bd      	mov	sp, r7
 800349a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800349e:	4770      	bx	lr

080034a0 <__NVIC_SetPriorityGrouping>:
 80034a0:	b480      	push	{r7}
 80034a2:	b085      	sub	sp, #20
 80034a4:	af00      	add	r7, sp, #0
 80034a6:	6078      	str	r0, [r7, #4]
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	f003 0307 	and.w	r3, r3, #7
 80034ae:	60fb      	str	r3, [r7, #12]
 80034b0:	4b0c      	ldr	r3, [pc, #48]	; (80034e4 <__NVIC_SetPriorityGrouping+0x44>)
 80034b2:	68db      	ldr	r3, [r3, #12]
 80034b4:	60bb      	str	r3, [r7, #8]
 80034b6:	68ba      	ldr	r2, [r7, #8]
 80034b8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80034bc:	4013      	ands	r3, r2
 80034be:	60bb      	str	r3, [r7, #8]
 80034c0:	68fb      	ldr	r3, [r7, #12]
 80034c2:	021a      	lsls	r2, r3, #8
 80034c4:	68bb      	ldr	r3, [r7, #8]
 80034c6:	4313      	orrs	r3, r2
 80034c8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80034cc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80034d0:	60bb      	str	r3, [r7, #8]
 80034d2:	4a04      	ldr	r2, [pc, #16]	; (80034e4 <__NVIC_SetPriorityGrouping+0x44>)
 80034d4:	68bb      	ldr	r3, [r7, #8]
 80034d6:	60d3      	str	r3, [r2, #12]
 80034d8:	bf00      	nop
 80034da:	3714      	adds	r7, #20
 80034dc:	46bd      	mov	sp, r7
 80034de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034e2:	4770      	bx	lr
 80034e4:	e000ed00 	.word	0xe000ed00

080034e8 <__NVIC_GetPriorityGrouping>:
 80034e8:	b480      	push	{r7}
 80034ea:	af00      	add	r7, sp, #0
 80034ec:	4b04      	ldr	r3, [pc, #16]	; (8003500 <__NVIC_GetPriorityGrouping+0x18>)
 80034ee:	68db      	ldr	r3, [r3, #12]
 80034f0:	0a1b      	lsrs	r3, r3, #8
 80034f2:	f003 0307 	and.w	r3, r3, #7
 80034f6:	4618      	mov	r0, r3
 80034f8:	46bd      	mov	sp, r7
 80034fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034fe:	4770      	bx	lr
 8003500:	e000ed00 	.word	0xe000ed00

08003504 <__NVIC_EnableIRQ>:
 8003504:	b480      	push	{r7}
 8003506:	b083      	sub	sp, #12
 8003508:	af00      	add	r7, sp, #0
 800350a:	4603      	mov	r3, r0
 800350c:	71fb      	strb	r3, [r7, #7]
 800350e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003512:	2b00      	cmp	r3, #0
 8003514:	db0b      	blt.n	800352e <__NVIC_EnableIRQ+0x2a>
 8003516:	79fb      	ldrb	r3, [r7, #7]
 8003518:	f003 021f 	and.w	r2, r3, #31
 800351c:	4907      	ldr	r1, [pc, #28]	; (800353c <__NVIC_EnableIRQ+0x38>)
 800351e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003522:	095b      	lsrs	r3, r3, #5
 8003524:	2001      	movs	r0, #1
 8003526:	fa00 f202 	lsl.w	r2, r0, r2
 800352a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800352e:	bf00      	nop
 8003530:	370c      	adds	r7, #12
 8003532:	46bd      	mov	sp, r7
 8003534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003538:	4770      	bx	lr
 800353a:	bf00      	nop
 800353c:	e000e100 	.word	0xe000e100

08003540 <__NVIC_SetPriority>:
 8003540:	b480      	push	{r7}
 8003542:	b083      	sub	sp, #12
 8003544:	af00      	add	r7, sp, #0
 8003546:	4603      	mov	r3, r0
 8003548:	6039      	str	r1, [r7, #0]
 800354a:	71fb      	strb	r3, [r7, #7]
 800354c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003550:	2b00      	cmp	r3, #0
 8003552:	db0a      	blt.n	800356a <__NVIC_SetPriority+0x2a>
 8003554:	683b      	ldr	r3, [r7, #0]
 8003556:	b2da      	uxtb	r2, r3
 8003558:	490c      	ldr	r1, [pc, #48]	; (800358c <__NVIC_SetPriority+0x4c>)
 800355a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800355e:	0112      	lsls	r2, r2, #4
 8003560:	b2d2      	uxtb	r2, r2
 8003562:	440b      	add	r3, r1
 8003564:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003568:	e00a      	b.n	8003580 <__NVIC_SetPriority+0x40>
 800356a:	683b      	ldr	r3, [r7, #0]
 800356c:	b2da      	uxtb	r2, r3
 800356e:	4908      	ldr	r1, [pc, #32]	; (8003590 <__NVIC_SetPriority+0x50>)
 8003570:	79fb      	ldrb	r3, [r7, #7]
 8003572:	f003 030f 	and.w	r3, r3, #15
 8003576:	3b04      	subs	r3, #4
 8003578:	0112      	lsls	r2, r2, #4
 800357a:	b2d2      	uxtb	r2, r2
 800357c:	440b      	add	r3, r1
 800357e:	761a      	strb	r2, [r3, #24]
 8003580:	bf00      	nop
 8003582:	370c      	adds	r7, #12
 8003584:	46bd      	mov	sp, r7
 8003586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800358a:	4770      	bx	lr
 800358c:	e000e100 	.word	0xe000e100
 8003590:	e000ed00 	.word	0xe000ed00

08003594 <NVIC_EncodePriority>:
 8003594:	b480      	push	{r7}
 8003596:	b089      	sub	sp, #36	; 0x24
 8003598:	af00      	add	r7, sp, #0
 800359a:	60f8      	str	r0, [r7, #12]
 800359c:	60b9      	str	r1, [r7, #8]
 800359e:	607a      	str	r2, [r7, #4]
 80035a0:	68fb      	ldr	r3, [r7, #12]
 80035a2:	f003 0307 	and.w	r3, r3, #7
 80035a6:	61fb      	str	r3, [r7, #28]
 80035a8:	69fb      	ldr	r3, [r7, #28]
 80035aa:	f1c3 0307 	rsb	r3, r3, #7
 80035ae:	2b04      	cmp	r3, #4
 80035b0:	bf28      	it	cs
 80035b2:	2304      	movcs	r3, #4
 80035b4:	61bb      	str	r3, [r7, #24]
 80035b6:	69fb      	ldr	r3, [r7, #28]
 80035b8:	3304      	adds	r3, #4
 80035ba:	2b06      	cmp	r3, #6
 80035bc:	d902      	bls.n	80035c4 <NVIC_EncodePriority+0x30>
 80035be:	69fb      	ldr	r3, [r7, #28]
 80035c0:	3b03      	subs	r3, #3
 80035c2:	e000      	b.n	80035c6 <NVIC_EncodePriority+0x32>
 80035c4:	2300      	movs	r3, #0
 80035c6:	617b      	str	r3, [r7, #20]
 80035c8:	f04f 32ff 	mov.w	r2, #4294967295
 80035cc:	69bb      	ldr	r3, [r7, #24]
 80035ce:	fa02 f303 	lsl.w	r3, r2, r3
 80035d2:	43da      	mvns	r2, r3
 80035d4:	68bb      	ldr	r3, [r7, #8]
 80035d6:	401a      	ands	r2, r3
 80035d8:	697b      	ldr	r3, [r7, #20]
 80035da:	409a      	lsls	r2, r3
 80035dc:	f04f 31ff 	mov.w	r1, #4294967295
 80035e0:	697b      	ldr	r3, [r7, #20]
 80035e2:	fa01 f303 	lsl.w	r3, r1, r3
 80035e6:	43d9      	mvns	r1, r3
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	400b      	ands	r3, r1
 80035ec:	4313      	orrs	r3, r2
 80035ee:	4618      	mov	r0, r3
 80035f0:	3724      	adds	r7, #36	; 0x24
 80035f2:	46bd      	mov	sp, r7
 80035f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035f8:	4770      	bx	lr
	...

080035fc <SysTick_Config>:
 80035fc:	b580      	push	{r7, lr}
 80035fe:	b082      	sub	sp, #8
 8003600:	af00      	add	r7, sp, #0
 8003602:	6078      	str	r0, [r7, #4]
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	3b01      	subs	r3, #1
 8003608:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800360c:	d301      	bcc.n	8003612 <SysTick_Config+0x16>
 800360e:	2301      	movs	r3, #1
 8003610:	e00f      	b.n	8003632 <SysTick_Config+0x36>
 8003612:	4a0a      	ldr	r2, [pc, #40]	; (800363c <SysTick_Config+0x40>)
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	3b01      	subs	r3, #1
 8003618:	6053      	str	r3, [r2, #4]
 800361a:	210f      	movs	r1, #15
 800361c:	f04f 30ff 	mov.w	r0, #4294967295
 8003620:	f7ff ff8e 	bl	8003540 <__NVIC_SetPriority>
 8003624:	4b05      	ldr	r3, [pc, #20]	; (800363c <SysTick_Config+0x40>)
 8003626:	2200      	movs	r2, #0
 8003628:	609a      	str	r2, [r3, #8]
 800362a:	4b04      	ldr	r3, [pc, #16]	; (800363c <SysTick_Config+0x40>)
 800362c:	2207      	movs	r2, #7
 800362e:	601a      	str	r2, [r3, #0]
 8003630:	2300      	movs	r3, #0
 8003632:	4618      	mov	r0, r3
 8003634:	3708      	adds	r7, #8
 8003636:	46bd      	mov	sp, r7
 8003638:	bd80      	pop	{r7, pc}
 800363a:	bf00      	nop
 800363c:	e000e010 	.word	0xe000e010

08003640 <HAL_NVIC_SetPriorityGrouping>:
 8003640:	b580      	push	{r7, lr}
 8003642:	b082      	sub	sp, #8
 8003644:	af00      	add	r7, sp, #0
 8003646:	6078      	str	r0, [r7, #4]
 8003648:	6878      	ldr	r0, [r7, #4]
 800364a:	f7ff ff29 	bl	80034a0 <__NVIC_SetPriorityGrouping>
 800364e:	bf00      	nop
 8003650:	3708      	adds	r7, #8
 8003652:	46bd      	mov	sp, r7
 8003654:	bd80      	pop	{r7, pc}

08003656 <HAL_NVIC_SetPriority>:
 8003656:	b580      	push	{r7, lr}
 8003658:	b086      	sub	sp, #24
 800365a:	af00      	add	r7, sp, #0
 800365c:	4603      	mov	r3, r0
 800365e:	60b9      	str	r1, [r7, #8]
 8003660:	607a      	str	r2, [r7, #4]
 8003662:	73fb      	strb	r3, [r7, #15]
 8003664:	2300      	movs	r3, #0
 8003666:	617b      	str	r3, [r7, #20]
 8003668:	f7ff ff3e 	bl	80034e8 <__NVIC_GetPriorityGrouping>
 800366c:	6178      	str	r0, [r7, #20]
 800366e:	687a      	ldr	r2, [r7, #4]
 8003670:	68b9      	ldr	r1, [r7, #8]
 8003672:	6978      	ldr	r0, [r7, #20]
 8003674:	f7ff ff8e 	bl	8003594 <NVIC_EncodePriority>
 8003678:	4602      	mov	r2, r0
 800367a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800367e:	4611      	mov	r1, r2
 8003680:	4618      	mov	r0, r3
 8003682:	f7ff ff5d 	bl	8003540 <__NVIC_SetPriority>
 8003686:	bf00      	nop
 8003688:	3718      	adds	r7, #24
 800368a:	46bd      	mov	sp, r7
 800368c:	bd80      	pop	{r7, pc}

0800368e <HAL_NVIC_EnableIRQ>:
 800368e:	b580      	push	{r7, lr}
 8003690:	b082      	sub	sp, #8
 8003692:	af00      	add	r7, sp, #0
 8003694:	4603      	mov	r3, r0
 8003696:	71fb      	strb	r3, [r7, #7]
 8003698:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800369c:	4618      	mov	r0, r3
 800369e:	f7ff ff31 	bl	8003504 <__NVIC_EnableIRQ>
 80036a2:	bf00      	nop
 80036a4:	3708      	adds	r7, #8
 80036a6:	46bd      	mov	sp, r7
 80036a8:	bd80      	pop	{r7, pc}

080036aa <HAL_SYSTICK_Config>:
 80036aa:	b580      	push	{r7, lr}
 80036ac:	b082      	sub	sp, #8
 80036ae:	af00      	add	r7, sp, #0
 80036b0:	6078      	str	r0, [r7, #4]
 80036b2:	6878      	ldr	r0, [r7, #4]
 80036b4:	f7ff ffa2 	bl	80035fc <SysTick_Config>
 80036b8:	4603      	mov	r3, r0
 80036ba:	4618      	mov	r0, r3
 80036bc:	3708      	adds	r7, #8
 80036be:	46bd      	mov	sp, r7
 80036c0:	bd80      	pop	{r7, pc}

080036c2 <HAL_DMA_Abort_IT>:
 80036c2:	b480      	push	{r7}
 80036c4:	b083      	sub	sp, #12
 80036c6:	af00      	add	r7, sp, #0
 80036c8:	6078      	str	r0, [r7, #4]
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80036d0:	b2db      	uxtb	r3, r3
 80036d2:	2b02      	cmp	r3, #2
 80036d4:	d004      	beq.n	80036e0 <HAL_DMA_Abort_IT+0x1e>
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	2280      	movs	r2, #128	; 0x80
 80036da:	655a      	str	r2, [r3, #84]	; 0x54
 80036dc:	2301      	movs	r3, #1
 80036de:	e00c      	b.n	80036fa <HAL_DMA_Abort_IT+0x38>
 80036e0:	687b      	ldr	r3, [r7, #4]
 80036e2:	2205      	movs	r2, #5
 80036e4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	681b      	ldr	r3, [r3, #0]
 80036ec:	681a      	ldr	r2, [r3, #0]
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	f022 0201 	bic.w	r2, r2, #1
 80036f6:	601a      	str	r2, [r3, #0]
 80036f8:	2300      	movs	r3, #0
 80036fa:	4618      	mov	r0, r3
 80036fc:	370c      	adds	r7, #12
 80036fe:	46bd      	mov	sp, r7
 8003700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003704:	4770      	bx	lr

08003706 <HAL_DMA_GetState>:
 8003706:	b480      	push	{r7}
 8003708:	b083      	sub	sp, #12
 800370a:	af00      	add	r7, sp, #0
 800370c:	6078      	str	r0, [r7, #4]
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003714:	b2db      	uxtb	r3, r3
 8003716:	4618      	mov	r0, r3
 8003718:	370c      	adds	r7, #12
 800371a:	46bd      	mov	sp, r7
 800371c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003720:	4770      	bx	lr
	...

08003724 <HAL_GPIO_Init>:
 8003724:	b480      	push	{r7}
 8003726:	b089      	sub	sp, #36	; 0x24
 8003728:	af00      	add	r7, sp, #0
 800372a:	6078      	str	r0, [r7, #4]
 800372c:	6039      	str	r1, [r7, #0]
 800372e:	2300      	movs	r3, #0
 8003730:	617b      	str	r3, [r7, #20]
 8003732:	2300      	movs	r3, #0
 8003734:	613b      	str	r3, [r7, #16]
 8003736:	2300      	movs	r3, #0
 8003738:	61bb      	str	r3, [r7, #24]
 800373a:	2300      	movs	r3, #0
 800373c:	61fb      	str	r3, [r7, #28]
 800373e:	e159      	b.n	80039f4 <HAL_GPIO_Init+0x2d0>
 8003740:	2201      	movs	r2, #1
 8003742:	69fb      	ldr	r3, [r7, #28]
 8003744:	fa02 f303 	lsl.w	r3, r2, r3
 8003748:	617b      	str	r3, [r7, #20]
 800374a:	683b      	ldr	r3, [r7, #0]
 800374c:	681b      	ldr	r3, [r3, #0]
 800374e:	697a      	ldr	r2, [r7, #20]
 8003750:	4013      	ands	r3, r2
 8003752:	613b      	str	r3, [r7, #16]
 8003754:	693a      	ldr	r2, [r7, #16]
 8003756:	697b      	ldr	r3, [r7, #20]
 8003758:	429a      	cmp	r2, r3
 800375a:	f040 8148 	bne.w	80039ee <HAL_GPIO_Init+0x2ca>
 800375e:	683b      	ldr	r3, [r7, #0]
 8003760:	685b      	ldr	r3, [r3, #4]
 8003762:	f003 0303 	and.w	r3, r3, #3
 8003766:	2b01      	cmp	r3, #1
 8003768:	d005      	beq.n	8003776 <HAL_GPIO_Init+0x52>
 800376a:	683b      	ldr	r3, [r7, #0]
 800376c:	685b      	ldr	r3, [r3, #4]
 800376e:	f003 0303 	and.w	r3, r3, #3
 8003772:	2b02      	cmp	r3, #2
 8003774:	d130      	bne.n	80037d8 <HAL_GPIO_Init+0xb4>
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	689b      	ldr	r3, [r3, #8]
 800377a:	61bb      	str	r3, [r7, #24]
 800377c:	69fb      	ldr	r3, [r7, #28]
 800377e:	005b      	lsls	r3, r3, #1
 8003780:	2203      	movs	r2, #3
 8003782:	fa02 f303 	lsl.w	r3, r2, r3
 8003786:	43db      	mvns	r3, r3
 8003788:	69ba      	ldr	r2, [r7, #24]
 800378a:	4013      	ands	r3, r2
 800378c:	61bb      	str	r3, [r7, #24]
 800378e:	683b      	ldr	r3, [r7, #0]
 8003790:	68da      	ldr	r2, [r3, #12]
 8003792:	69fb      	ldr	r3, [r7, #28]
 8003794:	005b      	lsls	r3, r3, #1
 8003796:	fa02 f303 	lsl.w	r3, r2, r3
 800379a:	69ba      	ldr	r2, [r7, #24]
 800379c:	4313      	orrs	r3, r2
 800379e:	61bb      	str	r3, [r7, #24]
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	69ba      	ldr	r2, [r7, #24]
 80037a4:	609a      	str	r2, [r3, #8]
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	685b      	ldr	r3, [r3, #4]
 80037aa:	61bb      	str	r3, [r7, #24]
 80037ac:	2201      	movs	r2, #1
 80037ae:	69fb      	ldr	r3, [r7, #28]
 80037b0:	fa02 f303 	lsl.w	r3, r2, r3
 80037b4:	43db      	mvns	r3, r3
 80037b6:	69ba      	ldr	r2, [r7, #24]
 80037b8:	4013      	ands	r3, r2
 80037ba:	61bb      	str	r3, [r7, #24]
 80037bc:	683b      	ldr	r3, [r7, #0]
 80037be:	685b      	ldr	r3, [r3, #4]
 80037c0:	091b      	lsrs	r3, r3, #4
 80037c2:	f003 0201 	and.w	r2, r3, #1
 80037c6:	69fb      	ldr	r3, [r7, #28]
 80037c8:	fa02 f303 	lsl.w	r3, r2, r3
 80037cc:	69ba      	ldr	r2, [r7, #24]
 80037ce:	4313      	orrs	r3, r2
 80037d0:	61bb      	str	r3, [r7, #24]
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	69ba      	ldr	r2, [r7, #24]
 80037d6:	605a      	str	r2, [r3, #4]
 80037d8:	683b      	ldr	r3, [r7, #0]
 80037da:	685b      	ldr	r3, [r3, #4]
 80037dc:	f003 0303 	and.w	r3, r3, #3
 80037e0:	2b03      	cmp	r3, #3
 80037e2:	d017      	beq.n	8003814 <HAL_GPIO_Init+0xf0>
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	68db      	ldr	r3, [r3, #12]
 80037e8:	61bb      	str	r3, [r7, #24]
 80037ea:	69fb      	ldr	r3, [r7, #28]
 80037ec:	005b      	lsls	r3, r3, #1
 80037ee:	2203      	movs	r2, #3
 80037f0:	fa02 f303 	lsl.w	r3, r2, r3
 80037f4:	43db      	mvns	r3, r3
 80037f6:	69ba      	ldr	r2, [r7, #24]
 80037f8:	4013      	ands	r3, r2
 80037fa:	61bb      	str	r3, [r7, #24]
 80037fc:	683b      	ldr	r3, [r7, #0]
 80037fe:	689a      	ldr	r2, [r3, #8]
 8003800:	69fb      	ldr	r3, [r7, #28]
 8003802:	005b      	lsls	r3, r3, #1
 8003804:	fa02 f303 	lsl.w	r3, r2, r3
 8003808:	69ba      	ldr	r2, [r7, #24]
 800380a:	4313      	orrs	r3, r2
 800380c:	61bb      	str	r3, [r7, #24]
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	69ba      	ldr	r2, [r7, #24]
 8003812:	60da      	str	r2, [r3, #12]
 8003814:	683b      	ldr	r3, [r7, #0]
 8003816:	685b      	ldr	r3, [r3, #4]
 8003818:	f003 0303 	and.w	r3, r3, #3
 800381c:	2b02      	cmp	r3, #2
 800381e:	d123      	bne.n	8003868 <HAL_GPIO_Init+0x144>
 8003820:	69fb      	ldr	r3, [r7, #28]
 8003822:	08da      	lsrs	r2, r3, #3
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	3208      	adds	r2, #8
 8003828:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800382c:	61bb      	str	r3, [r7, #24]
 800382e:	69fb      	ldr	r3, [r7, #28]
 8003830:	f003 0307 	and.w	r3, r3, #7
 8003834:	009b      	lsls	r3, r3, #2
 8003836:	220f      	movs	r2, #15
 8003838:	fa02 f303 	lsl.w	r3, r2, r3
 800383c:	43db      	mvns	r3, r3
 800383e:	69ba      	ldr	r2, [r7, #24]
 8003840:	4013      	ands	r3, r2
 8003842:	61bb      	str	r3, [r7, #24]
 8003844:	683b      	ldr	r3, [r7, #0]
 8003846:	691a      	ldr	r2, [r3, #16]
 8003848:	69fb      	ldr	r3, [r7, #28]
 800384a:	f003 0307 	and.w	r3, r3, #7
 800384e:	009b      	lsls	r3, r3, #2
 8003850:	fa02 f303 	lsl.w	r3, r2, r3
 8003854:	69ba      	ldr	r2, [r7, #24]
 8003856:	4313      	orrs	r3, r2
 8003858:	61bb      	str	r3, [r7, #24]
 800385a:	69fb      	ldr	r3, [r7, #28]
 800385c:	08da      	lsrs	r2, r3, #3
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	3208      	adds	r2, #8
 8003862:	69b9      	ldr	r1, [r7, #24]
 8003864:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	61bb      	str	r3, [r7, #24]
 800386e:	69fb      	ldr	r3, [r7, #28]
 8003870:	005b      	lsls	r3, r3, #1
 8003872:	2203      	movs	r2, #3
 8003874:	fa02 f303 	lsl.w	r3, r2, r3
 8003878:	43db      	mvns	r3, r3
 800387a:	69ba      	ldr	r2, [r7, #24]
 800387c:	4013      	ands	r3, r2
 800387e:	61bb      	str	r3, [r7, #24]
 8003880:	683b      	ldr	r3, [r7, #0]
 8003882:	685b      	ldr	r3, [r3, #4]
 8003884:	f003 0203 	and.w	r2, r3, #3
 8003888:	69fb      	ldr	r3, [r7, #28]
 800388a:	005b      	lsls	r3, r3, #1
 800388c:	fa02 f303 	lsl.w	r3, r2, r3
 8003890:	69ba      	ldr	r2, [r7, #24]
 8003892:	4313      	orrs	r3, r2
 8003894:	61bb      	str	r3, [r7, #24]
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	69ba      	ldr	r2, [r7, #24]
 800389a:	601a      	str	r2, [r3, #0]
 800389c:	683b      	ldr	r3, [r7, #0]
 800389e:	685b      	ldr	r3, [r3, #4]
 80038a0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80038a4:	2b00      	cmp	r3, #0
 80038a6:	f000 80a2 	beq.w	80039ee <HAL_GPIO_Init+0x2ca>
 80038aa:	2300      	movs	r3, #0
 80038ac:	60fb      	str	r3, [r7, #12]
 80038ae:	4b57      	ldr	r3, [pc, #348]	; (8003a0c <HAL_GPIO_Init+0x2e8>)
 80038b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80038b2:	4a56      	ldr	r2, [pc, #344]	; (8003a0c <HAL_GPIO_Init+0x2e8>)
 80038b4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80038b8:	6453      	str	r3, [r2, #68]	; 0x44
 80038ba:	4b54      	ldr	r3, [pc, #336]	; (8003a0c <HAL_GPIO_Init+0x2e8>)
 80038bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80038be:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80038c2:	60fb      	str	r3, [r7, #12]
 80038c4:	68fb      	ldr	r3, [r7, #12]
 80038c6:	4a52      	ldr	r2, [pc, #328]	; (8003a10 <HAL_GPIO_Init+0x2ec>)
 80038c8:	69fb      	ldr	r3, [r7, #28]
 80038ca:	089b      	lsrs	r3, r3, #2
 80038cc:	3302      	adds	r3, #2
 80038ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80038d2:	61bb      	str	r3, [r7, #24]
 80038d4:	69fb      	ldr	r3, [r7, #28]
 80038d6:	f003 0303 	and.w	r3, r3, #3
 80038da:	009b      	lsls	r3, r3, #2
 80038dc:	220f      	movs	r2, #15
 80038de:	fa02 f303 	lsl.w	r3, r2, r3
 80038e2:	43db      	mvns	r3, r3
 80038e4:	69ba      	ldr	r2, [r7, #24]
 80038e6:	4013      	ands	r3, r2
 80038e8:	61bb      	str	r3, [r7, #24]
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	4a49      	ldr	r2, [pc, #292]	; (8003a14 <HAL_GPIO_Init+0x2f0>)
 80038ee:	4293      	cmp	r3, r2
 80038f0:	d019      	beq.n	8003926 <HAL_GPIO_Init+0x202>
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	4a48      	ldr	r2, [pc, #288]	; (8003a18 <HAL_GPIO_Init+0x2f4>)
 80038f6:	4293      	cmp	r3, r2
 80038f8:	d013      	beq.n	8003922 <HAL_GPIO_Init+0x1fe>
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	4a47      	ldr	r2, [pc, #284]	; (8003a1c <HAL_GPIO_Init+0x2f8>)
 80038fe:	4293      	cmp	r3, r2
 8003900:	d00d      	beq.n	800391e <HAL_GPIO_Init+0x1fa>
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	4a46      	ldr	r2, [pc, #280]	; (8003a20 <HAL_GPIO_Init+0x2fc>)
 8003906:	4293      	cmp	r3, r2
 8003908:	d007      	beq.n	800391a <HAL_GPIO_Init+0x1f6>
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	4a45      	ldr	r2, [pc, #276]	; (8003a24 <HAL_GPIO_Init+0x300>)
 800390e:	4293      	cmp	r3, r2
 8003910:	d101      	bne.n	8003916 <HAL_GPIO_Init+0x1f2>
 8003912:	2304      	movs	r3, #4
 8003914:	e008      	b.n	8003928 <HAL_GPIO_Init+0x204>
 8003916:	2307      	movs	r3, #7
 8003918:	e006      	b.n	8003928 <HAL_GPIO_Init+0x204>
 800391a:	2303      	movs	r3, #3
 800391c:	e004      	b.n	8003928 <HAL_GPIO_Init+0x204>
 800391e:	2302      	movs	r3, #2
 8003920:	e002      	b.n	8003928 <HAL_GPIO_Init+0x204>
 8003922:	2301      	movs	r3, #1
 8003924:	e000      	b.n	8003928 <HAL_GPIO_Init+0x204>
 8003926:	2300      	movs	r3, #0
 8003928:	69fa      	ldr	r2, [r7, #28]
 800392a:	f002 0203 	and.w	r2, r2, #3
 800392e:	0092      	lsls	r2, r2, #2
 8003930:	4093      	lsls	r3, r2
 8003932:	69ba      	ldr	r2, [r7, #24]
 8003934:	4313      	orrs	r3, r2
 8003936:	61bb      	str	r3, [r7, #24]
 8003938:	4935      	ldr	r1, [pc, #212]	; (8003a10 <HAL_GPIO_Init+0x2ec>)
 800393a:	69fb      	ldr	r3, [r7, #28]
 800393c:	089b      	lsrs	r3, r3, #2
 800393e:	3302      	adds	r3, #2
 8003940:	69ba      	ldr	r2, [r7, #24]
 8003942:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003946:	4b38      	ldr	r3, [pc, #224]	; (8003a28 <HAL_GPIO_Init+0x304>)
 8003948:	689b      	ldr	r3, [r3, #8]
 800394a:	61bb      	str	r3, [r7, #24]
 800394c:	693b      	ldr	r3, [r7, #16]
 800394e:	43db      	mvns	r3, r3
 8003950:	69ba      	ldr	r2, [r7, #24]
 8003952:	4013      	ands	r3, r2
 8003954:	61bb      	str	r3, [r7, #24]
 8003956:	683b      	ldr	r3, [r7, #0]
 8003958:	685b      	ldr	r3, [r3, #4]
 800395a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800395e:	2b00      	cmp	r3, #0
 8003960:	d003      	beq.n	800396a <HAL_GPIO_Init+0x246>
 8003962:	69ba      	ldr	r2, [r7, #24]
 8003964:	693b      	ldr	r3, [r7, #16]
 8003966:	4313      	orrs	r3, r2
 8003968:	61bb      	str	r3, [r7, #24]
 800396a:	4a2f      	ldr	r2, [pc, #188]	; (8003a28 <HAL_GPIO_Init+0x304>)
 800396c:	69bb      	ldr	r3, [r7, #24]
 800396e:	6093      	str	r3, [r2, #8]
 8003970:	4b2d      	ldr	r3, [pc, #180]	; (8003a28 <HAL_GPIO_Init+0x304>)
 8003972:	68db      	ldr	r3, [r3, #12]
 8003974:	61bb      	str	r3, [r7, #24]
 8003976:	693b      	ldr	r3, [r7, #16]
 8003978:	43db      	mvns	r3, r3
 800397a:	69ba      	ldr	r2, [r7, #24]
 800397c:	4013      	ands	r3, r2
 800397e:	61bb      	str	r3, [r7, #24]
 8003980:	683b      	ldr	r3, [r7, #0]
 8003982:	685b      	ldr	r3, [r3, #4]
 8003984:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003988:	2b00      	cmp	r3, #0
 800398a:	d003      	beq.n	8003994 <HAL_GPIO_Init+0x270>
 800398c:	69ba      	ldr	r2, [r7, #24]
 800398e:	693b      	ldr	r3, [r7, #16]
 8003990:	4313      	orrs	r3, r2
 8003992:	61bb      	str	r3, [r7, #24]
 8003994:	4a24      	ldr	r2, [pc, #144]	; (8003a28 <HAL_GPIO_Init+0x304>)
 8003996:	69bb      	ldr	r3, [r7, #24]
 8003998:	60d3      	str	r3, [r2, #12]
 800399a:	4b23      	ldr	r3, [pc, #140]	; (8003a28 <HAL_GPIO_Init+0x304>)
 800399c:	685b      	ldr	r3, [r3, #4]
 800399e:	61bb      	str	r3, [r7, #24]
 80039a0:	693b      	ldr	r3, [r7, #16]
 80039a2:	43db      	mvns	r3, r3
 80039a4:	69ba      	ldr	r2, [r7, #24]
 80039a6:	4013      	ands	r3, r2
 80039a8:	61bb      	str	r3, [r7, #24]
 80039aa:	683b      	ldr	r3, [r7, #0]
 80039ac:	685b      	ldr	r3, [r3, #4]
 80039ae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	d003      	beq.n	80039be <HAL_GPIO_Init+0x29a>
 80039b6:	69ba      	ldr	r2, [r7, #24]
 80039b8:	693b      	ldr	r3, [r7, #16]
 80039ba:	4313      	orrs	r3, r2
 80039bc:	61bb      	str	r3, [r7, #24]
 80039be:	4a1a      	ldr	r2, [pc, #104]	; (8003a28 <HAL_GPIO_Init+0x304>)
 80039c0:	69bb      	ldr	r3, [r7, #24]
 80039c2:	6053      	str	r3, [r2, #4]
 80039c4:	4b18      	ldr	r3, [pc, #96]	; (8003a28 <HAL_GPIO_Init+0x304>)
 80039c6:	681b      	ldr	r3, [r3, #0]
 80039c8:	61bb      	str	r3, [r7, #24]
 80039ca:	693b      	ldr	r3, [r7, #16]
 80039cc:	43db      	mvns	r3, r3
 80039ce:	69ba      	ldr	r2, [r7, #24]
 80039d0:	4013      	ands	r3, r2
 80039d2:	61bb      	str	r3, [r7, #24]
 80039d4:	683b      	ldr	r3, [r7, #0]
 80039d6:	685b      	ldr	r3, [r3, #4]
 80039d8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d003      	beq.n	80039e8 <HAL_GPIO_Init+0x2c4>
 80039e0:	69ba      	ldr	r2, [r7, #24]
 80039e2:	693b      	ldr	r3, [r7, #16]
 80039e4:	4313      	orrs	r3, r2
 80039e6:	61bb      	str	r3, [r7, #24]
 80039e8:	4a0f      	ldr	r2, [pc, #60]	; (8003a28 <HAL_GPIO_Init+0x304>)
 80039ea:	69bb      	ldr	r3, [r7, #24]
 80039ec:	6013      	str	r3, [r2, #0]
 80039ee:	69fb      	ldr	r3, [r7, #28]
 80039f0:	3301      	adds	r3, #1
 80039f2:	61fb      	str	r3, [r7, #28]
 80039f4:	69fb      	ldr	r3, [r7, #28]
 80039f6:	2b0f      	cmp	r3, #15
 80039f8:	f67f aea2 	bls.w	8003740 <HAL_GPIO_Init+0x1c>
 80039fc:	bf00      	nop
 80039fe:	bf00      	nop
 8003a00:	3724      	adds	r7, #36	; 0x24
 8003a02:	46bd      	mov	sp, r7
 8003a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a08:	4770      	bx	lr
 8003a0a:	bf00      	nop
 8003a0c:	40023800 	.word	0x40023800
 8003a10:	40013800 	.word	0x40013800
 8003a14:	40020000 	.word	0x40020000
 8003a18:	40020400 	.word	0x40020400
 8003a1c:	40020800 	.word	0x40020800
 8003a20:	40020c00 	.word	0x40020c00
 8003a24:	40021000 	.word	0x40021000
 8003a28:	40013c00 	.word	0x40013c00

08003a2c <HAL_GPIO_ReadPin>:
 8003a2c:	b480      	push	{r7}
 8003a2e:	b085      	sub	sp, #20
 8003a30:	af00      	add	r7, sp, #0
 8003a32:	6078      	str	r0, [r7, #4]
 8003a34:	460b      	mov	r3, r1
 8003a36:	807b      	strh	r3, [r7, #2]
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	691a      	ldr	r2, [r3, #16]
 8003a3c:	887b      	ldrh	r3, [r7, #2]
 8003a3e:	4013      	ands	r3, r2
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	d002      	beq.n	8003a4a <HAL_GPIO_ReadPin+0x1e>
 8003a44:	2301      	movs	r3, #1
 8003a46:	73fb      	strb	r3, [r7, #15]
 8003a48:	e001      	b.n	8003a4e <HAL_GPIO_ReadPin+0x22>
 8003a4a:	2300      	movs	r3, #0
 8003a4c:	73fb      	strb	r3, [r7, #15]
 8003a4e:	7bfb      	ldrb	r3, [r7, #15]
 8003a50:	4618      	mov	r0, r3
 8003a52:	3714      	adds	r7, #20
 8003a54:	46bd      	mov	sp, r7
 8003a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a5a:	4770      	bx	lr

08003a5c <HAL_GPIO_WritePin>:
 8003a5c:	b480      	push	{r7}
 8003a5e:	b083      	sub	sp, #12
 8003a60:	af00      	add	r7, sp, #0
 8003a62:	6078      	str	r0, [r7, #4]
 8003a64:	460b      	mov	r3, r1
 8003a66:	807b      	strh	r3, [r7, #2]
 8003a68:	4613      	mov	r3, r2
 8003a6a:	707b      	strb	r3, [r7, #1]
 8003a6c:	787b      	ldrb	r3, [r7, #1]
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d003      	beq.n	8003a7a <HAL_GPIO_WritePin+0x1e>
 8003a72:	887a      	ldrh	r2, [r7, #2]
 8003a74:	687b      	ldr	r3, [r7, #4]
 8003a76:	619a      	str	r2, [r3, #24]
 8003a78:	e003      	b.n	8003a82 <HAL_GPIO_WritePin+0x26>
 8003a7a:	887b      	ldrh	r3, [r7, #2]
 8003a7c:	041a      	lsls	r2, r3, #16
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	619a      	str	r2, [r3, #24]
 8003a82:	bf00      	nop
 8003a84:	370c      	adds	r7, #12
 8003a86:	46bd      	mov	sp, r7
 8003a88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a8c:	4770      	bx	lr

08003a8e <HAL_GPIO_TogglePin>:
 8003a8e:	b480      	push	{r7}
 8003a90:	b085      	sub	sp, #20
 8003a92:	af00      	add	r7, sp, #0
 8003a94:	6078      	str	r0, [r7, #4]
 8003a96:	460b      	mov	r3, r1
 8003a98:	807b      	strh	r3, [r7, #2]
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	695b      	ldr	r3, [r3, #20]
 8003a9e:	60fb      	str	r3, [r7, #12]
 8003aa0:	887a      	ldrh	r2, [r7, #2]
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	4013      	ands	r3, r2
 8003aa6:	041a      	lsls	r2, r3, #16
 8003aa8:	68fb      	ldr	r3, [r7, #12]
 8003aaa:	43d9      	mvns	r1, r3
 8003aac:	887b      	ldrh	r3, [r7, #2]
 8003aae:	400b      	ands	r3, r1
 8003ab0:	431a      	orrs	r2, r3
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	619a      	str	r2, [r3, #24]
 8003ab6:	bf00      	nop
 8003ab8:	3714      	adds	r7, #20
 8003aba:	46bd      	mov	sp, r7
 8003abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ac0:	4770      	bx	lr
	...

08003ac4 <HAL_I2C_Init>:
 8003ac4:	b580      	push	{r7, lr}
 8003ac6:	b084      	sub	sp, #16
 8003ac8:	af00      	add	r7, sp, #0
 8003aca:	6078      	str	r0, [r7, #4]
 8003acc:	687b      	ldr	r3, [r7, #4]
 8003ace:	2b00      	cmp	r3, #0
 8003ad0:	d101      	bne.n	8003ad6 <HAL_I2C_Init+0x12>
 8003ad2:	2301      	movs	r3, #1
 8003ad4:	e12b      	b.n	8003d2e <HAL_I2C_Init+0x26a>
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003adc:	b2db      	uxtb	r3, r3
 8003ade:	2b00      	cmp	r3, #0
 8003ae0:	d106      	bne.n	8003af0 <HAL_I2C_Init+0x2c>
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	2200      	movs	r2, #0
 8003ae6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003aea:	6878      	ldr	r0, [r7, #4]
 8003aec:	f7fe f880 	bl	8001bf0 <HAL_I2C_MspInit>
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	2224      	movs	r2, #36	; 0x24
 8003af4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	681a      	ldr	r2, [r3, #0]
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	f022 0201 	bic.w	r2, r2, #1
 8003b06:	601a      	str	r2, [r3, #0]
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	681b      	ldr	r3, [r3, #0]
 8003b0c:	681a      	ldr	r2, [r3, #0]
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	681b      	ldr	r3, [r3, #0]
 8003b12:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003b16:	601a      	str	r2, [r3, #0]
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	681a      	ldr	r2, [r3, #0]
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003b26:	601a      	str	r2, [r3, #0]
 8003b28:	f001 ffe4 	bl	8005af4 <HAL_RCC_GetPCLK1Freq>
 8003b2c:	60f8      	str	r0, [r7, #12]
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	685b      	ldr	r3, [r3, #4]
 8003b32:	4a81      	ldr	r2, [pc, #516]	; (8003d38 <HAL_I2C_Init+0x274>)
 8003b34:	4293      	cmp	r3, r2
 8003b36:	d807      	bhi.n	8003b48 <HAL_I2C_Init+0x84>
 8003b38:	68fb      	ldr	r3, [r7, #12]
 8003b3a:	4a80      	ldr	r2, [pc, #512]	; (8003d3c <HAL_I2C_Init+0x278>)
 8003b3c:	4293      	cmp	r3, r2
 8003b3e:	bf94      	ite	ls
 8003b40:	2301      	movls	r3, #1
 8003b42:	2300      	movhi	r3, #0
 8003b44:	b2db      	uxtb	r3, r3
 8003b46:	e006      	b.n	8003b56 <HAL_I2C_Init+0x92>
 8003b48:	68fb      	ldr	r3, [r7, #12]
 8003b4a:	4a7d      	ldr	r2, [pc, #500]	; (8003d40 <HAL_I2C_Init+0x27c>)
 8003b4c:	4293      	cmp	r3, r2
 8003b4e:	bf94      	ite	ls
 8003b50:	2301      	movls	r3, #1
 8003b52:	2300      	movhi	r3, #0
 8003b54:	b2db      	uxtb	r3, r3
 8003b56:	2b00      	cmp	r3, #0
 8003b58:	d001      	beq.n	8003b5e <HAL_I2C_Init+0x9a>
 8003b5a:	2301      	movs	r3, #1
 8003b5c:	e0e7      	b.n	8003d2e <HAL_I2C_Init+0x26a>
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	4a78      	ldr	r2, [pc, #480]	; (8003d44 <HAL_I2C_Init+0x280>)
 8003b62:	fba2 2303 	umull	r2, r3, r2, r3
 8003b66:	0c9b      	lsrs	r3, r3, #18
 8003b68:	60bb      	str	r3, [r7, #8]
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	685b      	ldr	r3, [r3, #4]
 8003b70:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	681b      	ldr	r3, [r3, #0]
 8003b78:	68ba      	ldr	r2, [r7, #8]
 8003b7a:	430a      	orrs	r2, r1
 8003b7c:	605a      	str	r2, [r3, #4]
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	6a1b      	ldr	r3, [r3, #32]
 8003b84:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	685b      	ldr	r3, [r3, #4]
 8003b8c:	4a6a      	ldr	r2, [pc, #424]	; (8003d38 <HAL_I2C_Init+0x274>)
 8003b8e:	4293      	cmp	r3, r2
 8003b90:	d802      	bhi.n	8003b98 <HAL_I2C_Init+0xd4>
 8003b92:	68bb      	ldr	r3, [r7, #8]
 8003b94:	3301      	adds	r3, #1
 8003b96:	e009      	b.n	8003bac <HAL_I2C_Init+0xe8>
 8003b98:	68bb      	ldr	r3, [r7, #8]
 8003b9a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8003b9e:	fb02 f303 	mul.w	r3, r2, r3
 8003ba2:	4a69      	ldr	r2, [pc, #420]	; (8003d48 <HAL_I2C_Init+0x284>)
 8003ba4:	fba2 2303 	umull	r2, r3, r2, r3
 8003ba8:	099b      	lsrs	r3, r3, #6
 8003baa:	3301      	adds	r3, #1
 8003bac:	687a      	ldr	r2, [r7, #4]
 8003bae:	6812      	ldr	r2, [r2, #0]
 8003bb0:	430b      	orrs	r3, r1
 8003bb2:	6213      	str	r3, [r2, #32]
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	69db      	ldr	r3, [r3, #28]
 8003bba:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8003bbe:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	685b      	ldr	r3, [r3, #4]
 8003bc6:	495c      	ldr	r1, [pc, #368]	; (8003d38 <HAL_I2C_Init+0x274>)
 8003bc8:	428b      	cmp	r3, r1
 8003bca:	d819      	bhi.n	8003c00 <HAL_I2C_Init+0x13c>
 8003bcc:	68fb      	ldr	r3, [r7, #12]
 8003bce:	1e59      	subs	r1, r3, #1
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	685b      	ldr	r3, [r3, #4]
 8003bd4:	005b      	lsls	r3, r3, #1
 8003bd6:	fbb1 f3f3 	udiv	r3, r1, r3
 8003bda:	1c59      	adds	r1, r3, #1
 8003bdc:	f640 73fc 	movw	r3, #4092	; 0xffc
 8003be0:	400b      	ands	r3, r1
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	d00a      	beq.n	8003bfc <HAL_I2C_Init+0x138>
 8003be6:	68fb      	ldr	r3, [r7, #12]
 8003be8:	1e59      	subs	r1, r3, #1
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	685b      	ldr	r3, [r3, #4]
 8003bee:	005b      	lsls	r3, r3, #1
 8003bf0:	fbb1 f3f3 	udiv	r3, r1, r3
 8003bf4:	3301      	adds	r3, #1
 8003bf6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003bfa:	e051      	b.n	8003ca0 <HAL_I2C_Init+0x1dc>
 8003bfc:	2304      	movs	r3, #4
 8003bfe:	e04f      	b.n	8003ca0 <HAL_I2C_Init+0x1dc>
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	689b      	ldr	r3, [r3, #8]
 8003c04:	2b00      	cmp	r3, #0
 8003c06:	d111      	bne.n	8003c2c <HAL_I2C_Init+0x168>
 8003c08:	68fb      	ldr	r3, [r7, #12]
 8003c0a:	1e58      	subs	r0, r3, #1
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	6859      	ldr	r1, [r3, #4]
 8003c10:	460b      	mov	r3, r1
 8003c12:	005b      	lsls	r3, r3, #1
 8003c14:	440b      	add	r3, r1
 8003c16:	fbb0 f3f3 	udiv	r3, r0, r3
 8003c1a:	3301      	adds	r3, #1
 8003c1c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	bf0c      	ite	eq
 8003c24:	2301      	moveq	r3, #1
 8003c26:	2300      	movne	r3, #0
 8003c28:	b2db      	uxtb	r3, r3
 8003c2a:	e012      	b.n	8003c52 <HAL_I2C_Init+0x18e>
 8003c2c:	68fb      	ldr	r3, [r7, #12]
 8003c2e:	1e58      	subs	r0, r3, #1
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	6859      	ldr	r1, [r3, #4]
 8003c34:	460b      	mov	r3, r1
 8003c36:	009b      	lsls	r3, r3, #2
 8003c38:	440b      	add	r3, r1
 8003c3a:	0099      	lsls	r1, r3, #2
 8003c3c:	440b      	add	r3, r1
 8003c3e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003c42:	3301      	adds	r3, #1
 8003c44:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003c48:	2b00      	cmp	r3, #0
 8003c4a:	bf0c      	ite	eq
 8003c4c:	2301      	moveq	r3, #1
 8003c4e:	2300      	movne	r3, #0
 8003c50:	b2db      	uxtb	r3, r3
 8003c52:	2b00      	cmp	r3, #0
 8003c54:	d001      	beq.n	8003c5a <HAL_I2C_Init+0x196>
 8003c56:	2301      	movs	r3, #1
 8003c58:	e022      	b.n	8003ca0 <HAL_I2C_Init+0x1dc>
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	689b      	ldr	r3, [r3, #8]
 8003c5e:	2b00      	cmp	r3, #0
 8003c60:	d10e      	bne.n	8003c80 <HAL_I2C_Init+0x1bc>
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	1e58      	subs	r0, r3, #1
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	6859      	ldr	r1, [r3, #4]
 8003c6a:	460b      	mov	r3, r1
 8003c6c:	005b      	lsls	r3, r3, #1
 8003c6e:	440b      	add	r3, r1
 8003c70:	fbb0 f3f3 	udiv	r3, r0, r3
 8003c74:	3301      	adds	r3, #1
 8003c76:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003c7a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003c7e:	e00f      	b.n	8003ca0 <HAL_I2C_Init+0x1dc>
 8003c80:	68fb      	ldr	r3, [r7, #12]
 8003c82:	1e58      	subs	r0, r3, #1
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	6859      	ldr	r1, [r3, #4]
 8003c88:	460b      	mov	r3, r1
 8003c8a:	009b      	lsls	r3, r3, #2
 8003c8c:	440b      	add	r3, r1
 8003c8e:	0099      	lsls	r1, r3, #2
 8003c90:	440b      	add	r3, r1
 8003c92:	fbb0 f3f3 	udiv	r3, r0, r3
 8003c96:	3301      	adds	r3, #1
 8003c98:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003c9c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003ca0:	6879      	ldr	r1, [r7, #4]
 8003ca2:	6809      	ldr	r1, [r1, #0]
 8003ca4:	4313      	orrs	r3, r2
 8003ca6:	61cb      	str	r3, [r1, #28]
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	681b      	ldr	r3, [r3, #0]
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	69da      	ldr	r2, [r3, #28]
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	6a1b      	ldr	r3, [r3, #32]
 8003cba:	431a      	orrs	r2, r3
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	430a      	orrs	r2, r1
 8003cc2:	601a      	str	r2, [r3, #0]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	689b      	ldr	r3, [r3, #8]
 8003cca:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8003cce:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8003cd2:	687a      	ldr	r2, [r7, #4]
 8003cd4:	6911      	ldr	r1, [r2, #16]
 8003cd6:	687a      	ldr	r2, [r7, #4]
 8003cd8:	68d2      	ldr	r2, [r2, #12]
 8003cda:	4311      	orrs	r1, r2
 8003cdc:	687a      	ldr	r2, [r7, #4]
 8003cde:	6812      	ldr	r2, [r2, #0]
 8003ce0:	430b      	orrs	r3, r1
 8003ce2:	6093      	str	r3, [r2, #8]
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	68db      	ldr	r3, [r3, #12]
 8003cea:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	695a      	ldr	r2, [r3, #20]
 8003cf2:	687b      	ldr	r3, [r7, #4]
 8003cf4:	699b      	ldr	r3, [r3, #24]
 8003cf6:	431a      	orrs	r2, r3
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	430a      	orrs	r2, r1
 8003cfe:	60da      	str	r2, [r3, #12]
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	681a      	ldr	r2, [r3, #0]
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	681b      	ldr	r3, [r3, #0]
 8003d0a:	f042 0201 	orr.w	r2, r2, #1
 8003d0e:	601a      	str	r2, [r3, #0]
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	2200      	movs	r2, #0
 8003d14:	641a      	str	r2, [r3, #64]	; 0x40
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	2220      	movs	r2, #32
 8003d1a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	2200      	movs	r2, #0
 8003d22:	631a      	str	r2, [r3, #48]	; 0x30
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	2200      	movs	r2, #0
 8003d28:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003d2c:	2300      	movs	r3, #0
 8003d2e:	4618      	mov	r0, r3
 8003d30:	3710      	adds	r7, #16
 8003d32:	46bd      	mov	sp, r7
 8003d34:	bd80      	pop	{r7, pc}
 8003d36:	bf00      	nop
 8003d38:	000186a0 	.word	0x000186a0
 8003d3c:	001e847f 	.word	0x001e847f
 8003d40:	003d08ff 	.word	0x003d08ff
 8003d44:	431bde83 	.word	0x431bde83
 8003d48:	10624dd3 	.word	0x10624dd3

08003d4c <HAL_I2C_EV_IRQHandler>:
 8003d4c:	b580      	push	{r7, lr}
 8003d4e:	b088      	sub	sp, #32
 8003d50:	af00      	add	r7, sp, #0
 8003d52:	6078      	str	r0, [r7, #4]
 8003d54:	2300      	movs	r3, #0
 8003d56:	61bb      	str	r3, [r7, #24]
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	685b      	ldr	r3, [r3, #4]
 8003d5e:	617b      	str	r3, [r7, #20]
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d64:	613b      	str	r3, [r7, #16]
 8003d66:	687b      	ldr	r3, [r7, #4]
 8003d68:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003d6c:	73fb      	strb	r3, [r7, #15]
 8003d6e:	687b      	ldr	r3, [r7, #4]
 8003d70:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003d74:	73bb      	strb	r3, [r7, #14]
 8003d76:	7bfb      	ldrb	r3, [r7, #15]
 8003d78:	2b10      	cmp	r3, #16
 8003d7a:	d003      	beq.n	8003d84 <HAL_I2C_EV_IRQHandler+0x38>
 8003d7c:	7bfb      	ldrb	r3, [r7, #15]
 8003d7e:	2b40      	cmp	r3, #64	; 0x40
 8003d80:	f040 80c1 	bne.w	8003f06 <HAL_I2C_EV_IRQHandler+0x1ba>
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	681b      	ldr	r3, [r3, #0]
 8003d88:	699b      	ldr	r3, [r3, #24]
 8003d8a:	61bb      	str	r3, [r7, #24]
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	695b      	ldr	r3, [r3, #20]
 8003d92:	61fb      	str	r3, [r7, #28]
 8003d94:	69fb      	ldr	r3, [r7, #28]
 8003d96:	f003 0301 	and.w	r3, r3, #1
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d10d      	bne.n	8003dba <HAL_I2C_EV_IRQHandler+0x6e>
 8003d9e:	693b      	ldr	r3, [r7, #16]
 8003da0:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 8003da4:	d003      	beq.n	8003dae <HAL_I2C_EV_IRQHandler+0x62>
 8003da6:	693b      	ldr	r3, [r7, #16]
 8003da8:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 8003dac:	d101      	bne.n	8003db2 <HAL_I2C_EV_IRQHandler+0x66>
 8003dae:	2301      	movs	r3, #1
 8003db0:	e000      	b.n	8003db4 <HAL_I2C_EV_IRQHandler+0x68>
 8003db2:	2300      	movs	r3, #0
 8003db4:	2b01      	cmp	r3, #1
 8003db6:	f000 8132 	beq.w	800401e <HAL_I2C_EV_IRQHandler+0x2d2>
 8003dba:	69fb      	ldr	r3, [r7, #28]
 8003dbc:	f003 0301 	and.w	r3, r3, #1
 8003dc0:	2b00      	cmp	r3, #0
 8003dc2:	d00c      	beq.n	8003dde <HAL_I2C_EV_IRQHandler+0x92>
 8003dc4:	697b      	ldr	r3, [r7, #20]
 8003dc6:	0a5b      	lsrs	r3, r3, #9
 8003dc8:	f003 0301 	and.w	r3, r3, #1
 8003dcc:	2b00      	cmp	r3, #0
 8003dce:	d006      	beq.n	8003dde <HAL_I2C_EV_IRQHandler+0x92>
 8003dd0:	6878      	ldr	r0, [r7, #4]
 8003dd2:	f001 fc7b 	bl	80056cc <I2C_ConvertOtherXferOptions>
 8003dd6:	6878      	ldr	r0, [r7, #4]
 8003dd8:	f000 fd83 	bl	80048e2 <I2C_Master_SB>
 8003ddc:	e092      	b.n	8003f04 <HAL_I2C_EV_IRQHandler+0x1b8>
 8003dde:	69fb      	ldr	r3, [r7, #28]
 8003de0:	08db      	lsrs	r3, r3, #3
 8003de2:	f003 0301 	and.w	r3, r3, #1
 8003de6:	2b00      	cmp	r3, #0
 8003de8:	d009      	beq.n	8003dfe <HAL_I2C_EV_IRQHandler+0xb2>
 8003dea:	697b      	ldr	r3, [r7, #20]
 8003dec:	0a5b      	lsrs	r3, r3, #9
 8003dee:	f003 0301 	and.w	r3, r3, #1
 8003df2:	2b00      	cmp	r3, #0
 8003df4:	d003      	beq.n	8003dfe <HAL_I2C_EV_IRQHandler+0xb2>
 8003df6:	6878      	ldr	r0, [r7, #4]
 8003df8:	f000 fdf9 	bl	80049ee <I2C_Master_ADD10>
 8003dfc:	e082      	b.n	8003f04 <HAL_I2C_EV_IRQHandler+0x1b8>
 8003dfe:	69fb      	ldr	r3, [r7, #28]
 8003e00:	085b      	lsrs	r3, r3, #1
 8003e02:	f003 0301 	and.w	r3, r3, #1
 8003e06:	2b00      	cmp	r3, #0
 8003e08:	d009      	beq.n	8003e1e <HAL_I2C_EV_IRQHandler+0xd2>
 8003e0a:	697b      	ldr	r3, [r7, #20]
 8003e0c:	0a5b      	lsrs	r3, r3, #9
 8003e0e:	f003 0301 	and.w	r3, r3, #1
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d003      	beq.n	8003e1e <HAL_I2C_EV_IRQHandler+0xd2>
 8003e16:	6878      	ldr	r0, [r7, #4]
 8003e18:	f000 fe13 	bl	8004a42 <I2C_Master_ADDR>
 8003e1c:	e072      	b.n	8003f04 <HAL_I2C_EV_IRQHandler+0x1b8>
 8003e1e:	69bb      	ldr	r3, [r7, #24]
 8003e20:	089b      	lsrs	r3, r3, #2
 8003e22:	f003 0301 	and.w	r3, r3, #1
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	d03b      	beq.n	8003ea2 <HAL_I2C_EV_IRQHandler+0x156>
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	685b      	ldr	r3, [r3, #4]
 8003e30:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003e34:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003e38:	f000 80f3 	beq.w	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003e3c:	69fb      	ldr	r3, [r7, #28]
 8003e3e:	09db      	lsrs	r3, r3, #7
 8003e40:	f003 0301 	and.w	r3, r3, #1
 8003e44:	2b00      	cmp	r3, #0
 8003e46:	d00f      	beq.n	8003e68 <HAL_I2C_EV_IRQHandler+0x11c>
 8003e48:	697b      	ldr	r3, [r7, #20]
 8003e4a:	0a9b      	lsrs	r3, r3, #10
 8003e4c:	f003 0301 	and.w	r3, r3, #1
 8003e50:	2b00      	cmp	r3, #0
 8003e52:	d009      	beq.n	8003e68 <HAL_I2C_EV_IRQHandler+0x11c>
 8003e54:	69fb      	ldr	r3, [r7, #28]
 8003e56:	089b      	lsrs	r3, r3, #2
 8003e58:	f003 0301 	and.w	r3, r3, #1
 8003e5c:	2b00      	cmp	r3, #0
 8003e5e:	d103      	bne.n	8003e68 <HAL_I2C_EV_IRQHandler+0x11c>
 8003e60:	6878      	ldr	r0, [r7, #4]
 8003e62:	f000 f9f3 	bl	800424c <I2C_MasterTransmit_TXE>
 8003e66:	e04d      	b.n	8003f04 <HAL_I2C_EV_IRQHandler+0x1b8>
 8003e68:	69fb      	ldr	r3, [r7, #28]
 8003e6a:	089b      	lsrs	r3, r3, #2
 8003e6c:	f003 0301 	and.w	r3, r3, #1
 8003e70:	2b00      	cmp	r3, #0
 8003e72:	f000 80d6 	beq.w	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003e76:	697b      	ldr	r3, [r7, #20]
 8003e78:	0a5b      	lsrs	r3, r3, #9
 8003e7a:	f003 0301 	and.w	r3, r3, #1
 8003e7e:	2b00      	cmp	r3, #0
 8003e80:	f000 80cf 	beq.w	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003e84:	7bbb      	ldrb	r3, [r7, #14]
 8003e86:	2b21      	cmp	r3, #33	; 0x21
 8003e88:	d103      	bne.n	8003e92 <HAL_I2C_EV_IRQHandler+0x146>
 8003e8a:	6878      	ldr	r0, [r7, #4]
 8003e8c:	f000 fa7a 	bl	8004384 <I2C_MasterTransmit_BTF>
 8003e90:	e0c7      	b.n	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003e92:	7bfb      	ldrb	r3, [r7, #15]
 8003e94:	2b40      	cmp	r3, #64	; 0x40
 8003e96:	f040 80c4 	bne.w	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003e9a:	6878      	ldr	r0, [r7, #4]
 8003e9c:	f000 fae8 	bl	8004470 <I2C_MemoryTransmit_TXE_BTF>
 8003ea0:	e0bf      	b.n	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	681b      	ldr	r3, [r3, #0]
 8003ea6:	685b      	ldr	r3, [r3, #4]
 8003ea8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003eac:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8003eb0:	f000 80b7 	beq.w	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003eb4:	69fb      	ldr	r3, [r7, #28]
 8003eb6:	099b      	lsrs	r3, r3, #6
 8003eb8:	f003 0301 	and.w	r3, r3, #1
 8003ebc:	2b00      	cmp	r3, #0
 8003ebe:	d00f      	beq.n	8003ee0 <HAL_I2C_EV_IRQHandler+0x194>
 8003ec0:	697b      	ldr	r3, [r7, #20]
 8003ec2:	0a9b      	lsrs	r3, r3, #10
 8003ec4:	f003 0301 	and.w	r3, r3, #1
 8003ec8:	2b00      	cmp	r3, #0
 8003eca:	d009      	beq.n	8003ee0 <HAL_I2C_EV_IRQHandler+0x194>
 8003ecc:	69fb      	ldr	r3, [r7, #28]
 8003ece:	089b      	lsrs	r3, r3, #2
 8003ed0:	f003 0301 	and.w	r3, r3, #1
 8003ed4:	2b00      	cmp	r3, #0
 8003ed6:	d103      	bne.n	8003ee0 <HAL_I2C_EV_IRQHandler+0x194>
 8003ed8:	6878      	ldr	r0, [r7, #4]
 8003eda:	f000 fb5d 	bl	8004598 <I2C_MasterReceive_RXNE>
 8003ede:	e011      	b.n	8003f04 <HAL_I2C_EV_IRQHandler+0x1b8>
 8003ee0:	69fb      	ldr	r3, [r7, #28]
 8003ee2:	089b      	lsrs	r3, r3, #2
 8003ee4:	f003 0301 	and.w	r3, r3, #1
 8003ee8:	2b00      	cmp	r3, #0
 8003eea:	f000 809a 	beq.w	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003eee:	697b      	ldr	r3, [r7, #20]
 8003ef0:	0a5b      	lsrs	r3, r3, #9
 8003ef2:	f003 0301 	and.w	r3, r3, #1
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	f000 8093 	beq.w	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003efc:	6878      	ldr	r0, [r7, #4]
 8003efe:	f000 fc06 	bl	800470e <I2C_MasterReceive_BTF>
 8003f02:	e08e      	b.n	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003f04:	e08d      	b.n	8004022 <HAL_I2C_EV_IRQHandler+0x2d6>
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f0a:	2b00      	cmp	r3, #0
 8003f0c:	d004      	beq.n	8003f18 <HAL_I2C_EV_IRQHandler+0x1cc>
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	681b      	ldr	r3, [r3, #0]
 8003f12:	695b      	ldr	r3, [r3, #20]
 8003f14:	61fb      	str	r3, [r7, #28]
 8003f16:	e007      	b.n	8003f28 <HAL_I2C_EV_IRQHandler+0x1dc>
 8003f18:	687b      	ldr	r3, [r7, #4]
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	699b      	ldr	r3, [r3, #24]
 8003f1e:	61bb      	str	r3, [r7, #24]
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	681b      	ldr	r3, [r3, #0]
 8003f24:	695b      	ldr	r3, [r3, #20]
 8003f26:	61fb      	str	r3, [r7, #28]
 8003f28:	69fb      	ldr	r3, [r7, #28]
 8003f2a:	085b      	lsrs	r3, r3, #1
 8003f2c:	f003 0301 	and.w	r3, r3, #1
 8003f30:	2b00      	cmp	r3, #0
 8003f32:	d012      	beq.n	8003f5a <HAL_I2C_EV_IRQHandler+0x20e>
 8003f34:	697b      	ldr	r3, [r7, #20]
 8003f36:	0a5b      	lsrs	r3, r3, #9
 8003f38:	f003 0301 	and.w	r3, r3, #1
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	d00c      	beq.n	8003f5a <HAL_I2C_EV_IRQHandler+0x20e>
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f44:	2b00      	cmp	r3, #0
 8003f46:	d003      	beq.n	8003f50 <HAL_I2C_EV_IRQHandler+0x204>
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	699b      	ldr	r3, [r3, #24]
 8003f4e:	61bb      	str	r3, [r7, #24]
 8003f50:	69b9      	ldr	r1, [r7, #24]
 8003f52:	6878      	ldr	r0, [r7, #4]
 8003f54:	f000 ffc4 	bl	8004ee0 <I2C_Slave_ADDR>
 8003f58:	e066      	b.n	8004028 <HAL_I2C_EV_IRQHandler+0x2dc>
 8003f5a:	69fb      	ldr	r3, [r7, #28]
 8003f5c:	091b      	lsrs	r3, r3, #4
 8003f5e:	f003 0301 	and.w	r3, r3, #1
 8003f62:	2b00      	cmp	r3, #0
 8003f64:	d009      	beq.n	8003f7a <HAL_I2C_EV_IRQHandler+0x22e>
 8003f66:	697b      	ldr	r3, [r7, #20]
 8003f68:	0a5b      	lsrs	r3, r3, #9
 8003f6a:	f003 0301 	and.w	r3, r3, #1
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	d003      	beq.n	8003f7a <HAL_I2C_EV_IRQHandler+0x22e>
 8003f72:	6878      	ldr	r0, [r7, #4]
 8003f74:	f000 fffe 	bl	8004f74 <I2C_Slave_STOPF>
 8003f78:	e056      	b.n	8004028 <HAL_I2C_EV_IRQHandler+0x2dc>
 8003f7a:	7bbb      	ldrb	r3, [r7, #14]
 8003f7c:	2b21      	cmp	r3, #33	; 0x21
 8003f7e:	d002      	beq.n	8003f86 <HAL_I2C_EV_IRQHandler+0x23a>
 8003f80:	7bbb      	ldrb	r3, [r7, #14]
 8003f82:	2b29      	cmp	r3, #41	; 0x29
 8003f84:	d125      	bne.n	8003fd2 <HAL_I2C_EV_IRQHandler+0x286>
 8003f86:	69fb      	ldr	r3, [r7, #28]
 8003f88:	09db      	lsrs	r3, r3, #7
 8003f8a:	f003 0301 	and.w	r3, r3, #1
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	d00f      	beq.n	8003fb2 <HAL_I2C_EV_IRQHandler+0x266>
 8003f92:	697b      	ldr	r3, [r7, #20]
 8003f94:	0a9b      	lsrs	r3, r3, #10
 8003f96:	f003 0301 	and.w	r3, r3, #1
 8003f9a:	2b00      	cmp	r3, #0
 8003f9c:	d009      	beq.n	8003fb2 <HAL_I2C_EV_IRQHandler+0x266>
 8003f9e:	69fb      	ldr	r3, [r7, #28]
 8003fa0:	089b      	lsrs	r3, r3, #2
 8003fa2:	f003 0301 	and.w	r3, r3, #1
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d103      	bne.n	8003fb2 <HAL_I2C_EV_IRQHandler+0x266>
 8003faa:	6878      	ldr	r0, [r7, #4]
 8003fac:	f000 feda 	bl	8004d64 <I2C_SlaveTransmit_TXE>
 8003fb0:	e039      	b.n	8004026 <HAL_I2C_EV_IRQHandler+0x2da>
 8003fb2:	69fb      	ldr	r3, [r7, #28]
 8003fb4:	089b      	lsrs	r3, r3, #2
 8003fb6:	f003 0301 	and.w	r3, r3, #1
 8003fba:	2b00      	cmp	r3, #0
 8003fbc:	d033      	beq.n	8004026 <HAL_I2C_EV_IRQHandler+0x2da>
 8003fbe:	697b      	ldr	r3, [r7, #20]
 8003fc0:	0a5b      	lsrs	r3, r3, #9
 8003fc2:	f003 0301 	and.w	r3, r3, #1
 8003fc6:	2b00      	cmp	r3, #0
 8003fc8:	d02d      	beq.n	8004026 <HAL_I2C_EV_IRQHandler+0x2da>
 8003fca:	6878      	ldr	r0, [r7, #4]
 8003fcc:	f000 ff07 	bl	8004dde <I2C_SlaveTransmit_BTF>
 8003fd0:	e029      	b.n	8004026 <HAL_I2C_EV_IRQHandler+0x2da>
 8003fd2:	69fb      	ldr	r3, [r7, #28]
 8003fd4:	099b      	lsrs	r3, r3, #6
 8003fd6:	f003 0301 	and.w	r3, r3, #1
 8003fda:	2b00      	cmp	r3, #0
 8003fdc:	d00f      	beq.n	8003ffe <HAL_I2C_EV_IRQHandler+0x2b2>
 8003fde:	697b      	ldr	r3, [r7, #20]
 8003fe0:	0a9b      	lsrs	r3, r3, #10
 8003fe2:	f003 0301 	and.w	r3, r3, #1
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	d009      	beq.n	8003ffe <HAL_I2C_EV_IRQHandler+0x2b2>
 8003fea:	69fb      	ldr	r3, [r7, #28]
 8003fec:	089b      	lsrs	r3, r3, #2
 8003fee:	f003 0301 	and.w	r3, r3, #1
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d103      	bne.n	8003ffe <HAL_I2C_EV_IRQHandler+0x2b2>
 8003ff6:	6878      	ldr	r0, [r7, #4]
 8003ff8:	f000 ff12 	bl	8004e20 <I2C_SlaveReceive_RXNE>
 8003ffc:	e014      	b.n	8004028 <HAL_I2C_EV_IRQHandler+0x2dc>
 8003ffe:	69fb      	ldr	r3, [r7, #28]
 8004000:	089b      	lsrs	r3, r3, #2
 8004002:	f003 0301 	and.w	r3, r3, #1
 8004006:	2b00      	cmp	r3, #0
 8004008:	d00e      	beq.n	8004028 <HAL_I2C_EV_IRQHandler+0x2dc>
 800400a:	697b      	ldr	r3, [r7, #20]
 800400c:	0a5b      	lsrs	r3, r3, #9
 800400e:	f003 0301 	and.w	r3, r3, #1
 8004012:	2b00      	cmp	r3, #0
 8004014:	d008      	beq.n	8004028 <HAL_I2C_EV_IRQHandler+0x2dc>
 8004016:	6878      	ldr	r0, [r7, #4]
 8004018:	f000 ff40 	bl	8004e9c <I2C_SlaveReceive_BTF>
 800401c:	e004      	b.n	8004028 <HAL_I2C_EV_IRQHandler+0x2dc>
 800401e:	bf00      	nop
 8004020:	e002      	b.n	8004028 <HAL_I2C_EV_IRQHandler+0x2dc>
 8004022:	bf00      	nop
 8004024:	e000      	b.n	8004028 <HAL_I2C_EV_IRQHandler+0x2dc>
 8004026:	bf00      	nop
 8004028:	3720      	adds	r7, #32
 800402a:	46bd      	mov	sp, r7
 800402c:	bd80      	pop	{r7, pc}

0800402e <HAL_I2C_ER_IRQHandler>:
 800402e:	b580      	push	{r7, lr}
 8004030:	b08a      	sub	sp, #40	; 0x28
 8004032:	af00      	add	r7, sp, #0
 8004034:	6078      	str	r0, [r7, #4]
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	695b      	ldr	r3, [r3, #20]
 800403c:	623b      	str	r3, [r7, #32]
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	685b      	ldr	r3, [r3, #4]
 8004044:	61fb      	str	r3, [r7, #28]
 8004046:	2300      	movs	r3, #0
 8004048:	627b      	str	r3, [r7, #36]	; 0x24
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004050:	76fb      	strb	r3, [r7, #27]
 8004052:	6a3b      	ldr	r3, [r7, #32]
 8004054:	0a1b      	lsrs	r3, r3, #8
 8004056:	f003 0301 	and.w	r3, r3, #1
 800405a:	2b00      	cmp	r3, #0
 800405c:	d00e      	beq.n	800407c <HAL_I2C_ER_IRQHandler+0x4e>
 800405e:	69fb      	ldr	r3, [r7, #28]
 8004060:	0a1b      	lsrs	r3, r3, #8
 8004062:	f003 0301 	and.w	r3, r3, #1
 8004066:	2b00      	cmp	r3, #0
 8004068:	d008      	beq.n	800407c <HAL_I2C_ER_IRQHandler+0x4e>
 800406a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800406c:	f043 0301 	orr.w	r3, r3, #1
 8004070:	627b      	str	r3, [r7, #36]	; 0x24
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	681b      	ldr	r3, [r3, #0]
 8004076:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800407a:	615a      	str	r2, [r3, #20]
 800407c:	6a3b      	ldr	r3, [r7, #32]
 800407e:	0a5b      	lsrs	r3, r3, #9
 8004080:	f003 0301 	and.w	r3, r3, #1
 8004084:	2b00      	cmp	r3, #0
 8004086:	d00e      	beq.n	80040a6 <HAL_I2C_ER_IRQHandler+0x78>
 8004088:	69fb      	ldr	r3, [r7, #28]
 800408a:	0a1b      	lsrs	r3, r3, #8
 800408c:	f003 0301 	and.w	r3, r3, #1
 8004090:	2b00      	cmp	r3, #0
 8004092:	d008      	beq.n	80040a6 <HAL_I2C_ER_IRQHandler+0x78>
 8004094:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004096:	f043 0302 	orr.w	r3, r3, #2
 800409a:	627b      	str	r3, [r7, #36]	; 0x24
 800409c:	687b      	ldr	r3, [r7, #4]
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	f46f 7200 	mvn.w	r2, #512	; 0x200
 80040a4:	615a      	str	r2, [r3, #20]
 80040a6:	6a3b      	ldr	r3, [r7, #32]
 80040a8:	0a9b      	lsrs	r3, r3, #10
 80040aa:	f003 0301 	and.w	r3, r3, #1
 80040ae:	2b00      	cmp	r3, #0
 80040b0:	d03f      	beq.n	8004132 <HAL_I2C_ER_IRQHandler+0x104>
 80040b2:	69fb      	ldr	r3, [r7, #28]
 80040b4:	0a1b      	lsrs	r3, r3, #8
 80040b6:	f003 0301 	and.w	r3, r3, #1
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d039      	beq.n	8004132 <HAL_I2C_ER_IRQHandler+0x104>
 80040be:	7efb      	ldrb	r3, [r7, #27]
 80040c0:	76bb      	strb	r3, [r7, #26]
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80040c6:	b29b      	uxth	r3, r3
 80040c8:	617b      	str	r3, [r7, #20]
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80040d0:	74fb      	strb	r3, [r7, #19]
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040d6:	60fb      	str	r3, [r7, #12]
 80040d8:	7ebb      	ldrb	r3, [r7, #26]
 80040da:	2b20      	cmp	r3, #32
 80040dc:	d112      	bne.n	8004104 <HAL_I2C_ER_IRQHandler+0xd6>
 80040de:	697b      	ldr	r3, [r7, #20]
 80040e0:	2b00      	cmp	r3, #0
 80040e2:	d10f      	bne.n	8004104 <HAL_I2C_ER_IRQHandler+0xd6>
 80040e4:	7cfb      	ldrb	r3, [r7, #19]
 80040e6:	2b21      	cmp	r3, #33	; 0x21
 80040e8:	d008      	beq.n	80040fc <HAL_I2C_ER_IRQHandler+0xce>
 80040ea:	7cfb      	ldrb	r3, [r7, #19]
 80040ec:	2b29      	cmp	r3, #41	; 0x29
 80040ee:	d005      	beq.n	80040fc <HAL_I2C_ER_IRQHandler+0xce>
 80040f0:	7cfb      	ldrb	r3, [r7, #19]
 80040f2:	2b28      	cmp	r3, #40	; 0x28
 80040f4:	d106      	bne.n	8004104 <HAL_I2C_ER_IRQHandler+0xd6>
 80040f6:	68fb      	ldr	r3, [r7, #12]
 80040f8:	2b21      	cmp	r3, #33	; 0x21
 80040fa:	d103      	bne.n	8004104 <HAL_I2C_ER_IRQHandler+0xd6>
 80040fc:	6878      	ldr	r0, [r7, #4]
 80040fe:	f001 f869 	bl	80051d4 <I2C_Slave_AF>
 8004102:	e016      	b.n	8004132 <HAL_I2C_ER_IRQHandler+0x104>
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	681b      	ldr	r3, [r3, #0]
 8004108:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800410c:	615a      	str	r2, [r3, #20]
 800410e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004110:	f043 0304 	orr.w	r3, r3, #4
 8004114:	627b      	str	r3, [r7, #36]	; 0x24
 8004116:	7efb      	ldrb	r3, [r7, #27]
 8004118:	2b10      	cmp	r3, #16
 800411a:	d002      	beq.n	8004122 <HAL_I2C_ER_IRQHandler+0xf4>
 800411c:	7efb      	ldrb	r3, [r7, #27]
 800411e:	2b40      	cmp	r3, #64	; 0x40
 8004120:	d107      	bne.n	8004132 <HAL_I2C_ER_IRQHandler+0x104>
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	681a      	ldr	r2, [r3, #0]
 8004128:	687b      	ldr	r3, [r7, #4]
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004130:	601a      	str	r2, [r3, #0]
 8004132:	6a3b      	ldr	r3, [r7, #32]
 8004134:	0adb      	lsrs	r3, r3, #11
 8004136:	f003 0301 	and.w	r3, r3, #1
 800413a:	2b00      	cmp	r3, #0
 800413c:	d00e      	beq.n	800415c <HAL_I2C_ER_IRQHandler+0x12e>
 800413e:	69fb      	ldr	r3, [r7, #28]
 8004140:	0a1b      	lsrs	r3, r3, #8
 8004142:	f003 0301 	and.w	r3, r3, #1
 8004146:	2b00      	cmp	r3, #0
 8004148:	d008      	beq.n	800415c <HAL_I2C_ER_IRQHandler+0x12e>
 800414a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800414c:	f043 0308 	orr.w	r3, r3, #8
 8004150:	627b      	str	r3, [r7, #36]	; 0x24
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 800415a:	615a      	str	r2, [r3, #20]
 800415c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800415e:	2b00      	cmp	r3, #0
 8004160:	d008      	beq.n	8004174 <HAL_I2C_ER_IRQHandler+0x146>
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004166:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004168:	431a      	orrs	r2, r3
 800416a:	687b      	ldr	r3, [r7, #4]
 800416c:	641a      	str	r2, [r3, #64]	; 0x40
 800416e:	6878      	ldr	r0, [r7, #4]
 8004170:	f001 f8a0 	bl	80052b4 <I2C_ITError>
 8004174:	bf00      	nop
 8004176:	3728      	adds	r7, #40	; 0x28
 8004178:	46bd      	mov	sp, r7
 800417a:	bd80      	pop	{r7, pc}

0800417c <HAL_I2C_MasterTxCpltCallback>:
 800417c:	b480      	push	{r7}
 800417e:	b083      	sub	sp, #12
 8004180:	af00      	add	r7, sp, #0
 8004182:	6078      	str	r0, [r7, #4]
 8004184:	bf00      	nop
 8004186:	370c      	adds	r7, #12
 8004188:	46bd      	mov	sp, r7
 800418a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800418e:	4770      	bx	lr

08004190 <HAL_I2C_MasterRxCpltCallback>:
 8004190:	b480      	push	{r7}
 8004192:	b083      	sub	sp, #12
 8004194:	af00      	add	r7, sp, #0
 8004196:	6078      	str	r0, [r7, #4]
 8004198:	bf00      	nop
 800419a:	370c      	adds	r7, #12
 800419c:	46bd      	mov	sp, r7
 800419e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041a2:	4770      	bx	lr

080041a4 <HAL_I2C_SlaveTxCpltCallback>:
 80041a4:	b480      	push	{r7}
 80041a6:	b083      	sub	sp, #12
 80041a8:	af00      	add	r7, sp, #0
 80041aa:	6078      	str	r0, [r7, #4]
 80041ac:	bf00      	nop
 80041ae:	370c      	adds	r7, #12
 80041b0:	46bd      	mov	sp, r7
 80041b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041b6:	4770      	bx	lr

080041b8 <HAL_I2C_SlaveRxCpltCallback>:
 80041b8:	b480      	push	{r7}
 80041ba:	b083      	sub	sp, #12
 80041bc:	af00      	add	r7, sp, #0
 80041be:	6078      	str	r0, [r7, #4]
 80041c0:	bf00      	nop
 80041c2:	370c      	adds	r7, #12
 80041c4:	46bd      	mov	sp, r7
 80041c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041ca:	4770      	bx	lr

080041cc <HAL_I2C_AddrCallback>:
 80041cc:	b480      	push	{r7}
 80041ce:	b083      	sub	sp, #12
 80041d0:	af00      	add	r7, sp, #0
 80041d2:	6078      	str	r0, [r7, #4]
 80041d4:	460b      	mov	r3, r1
 80041d6:	70fb      	strb	r3, [r7, #3]
 80041d8:	4613      	mov	r3, r2
 80041da:	803b      	strh	r3, [r7, #0]
 80041dc:	bf00      	nop
 80041de:	370c      	adds	r7, #12
 80041e0:	46bd      	mov	sp, r7
 80041e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041e6:	4770      	bx	lr

080041e8 <HAL_I2C_ListenCpltCallback>:
 80041e8:	b480      	push	{r7}
 80041ea:	b083      	sub	sp, #12
 80041ec:	af00      	add	r7, sp, #0
 80041ee:	6078      	str	r0, [r7, #4]
 80041f0:	bf00      	nop
 80041f2:	370c      	adds	r7, #12
 80041f4:	46bd      	mov	sp, r7
 80041f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041fa:	4770      	bx	lr

080041fc <HAL_I2C_MemTxCpltCallback>:
 80041fc:	b480      	push	{r7}
 80041fe:	b083      	sub	sp, #12
 8004200:	af00      	add	r7, sp, #0
 8004202:	6078      	str	r0, [r7, #4]
 8004204:	bf00      	nop
 8004206:	370c      	adds	r7, #12
 8004208:	46bd      	mov	sp, r7
 800420a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800420e:	4770      	bx	lr

08004210 <HAL_I2C_MemRxCpltCallback>:
 8004210:	b480      	push	{r7}
 8004212:	b083      	sub	sp, #12
 8004214:	af00      	add	r7, sp, #0
 8004216:	6078      	str	r0, [r7, #4]
 8004218:	bf00      	nop
 800421a:	370c      	adds	r7, #12
 800421c:	46bd      	mov	sp, r7
 800421e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004222:	4770      	bx	lr

08004224 <HAL_I2C_ErrorCallback>:
 8004224:	b480      	push	{r7}
 8004226:	b083      	sub	sp, #12
 8004228:	af00      	add	r7, sp, #0
 800422a:	6078      	str	r0, [r7, #4]
 800422c:	bf00      	nop
 800422e:	370c      	adds	r7, #12
 8004230:	46bd      	mov	sp, r7
 8004232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004236:	4770      	bx	lr

08004238 <HAL_I2C_AbortCpltCallback>:
 8004238:	b480      	push	{r7}
 800423a:	b083      	sub	sp, #12
 800423c:	af00      	add	r7, sp, #0
 800423e:	6078      	str	r0, [r7, #4]
 8004240:	bf00      	nop
 8004242:	370c      	adds	r7, #12
 8004244:	46bd      	mov	sp, r7
 8004246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800424a:	4770      	bx	lr

0800424c <I2C_MasterTransmit_TXE>:
 800424c:	b580      	push	{r7, lr}
 800424e:	b084      	sub	sp, #16
 8004250:	af00      	add	r7, sp, #0
 8004252:	6078      	str	r0, [r7, #4]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800425a:	73fb      	strb	r3, [r7, #15]
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004262:	73bb      	strb	r3, [r7, #14]
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004268:	60bb      	str	r3, [r7, #8]
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800426e:	2b00      	cmp	r3, #0
 8004270:	d150      	bne.n	8004314 <I2C_MasterTransmit_TXE+0xc8>
 8004272:	7bfb      	ldrb	r3, [r7, #15]
 8004274:	2b21      	cmp	r3, #33	; 0x21
 8004276:	d14d      	bne.n	8004314 <I2C_MasterTransmit_TXE+0xc8>
 8004278:	68bb      	ldr	r3, [r7, #8]
 800427a:	2b08      	cmp	r3, #8
 800427c:	d01d      	beq.n	80042ba <I2C_MasterTransmit_TXE+0x6e>
 800427e:	68bb      	ldr	r3, [r7, #8]
 8004280:	2b20      	cmp	r3, #32
 8004282:	d01a      	beq.n	80042ba <I2C_MasterTransmit_TXE+0x6e>
 8004284:	68bb      	ldr	r3, [r7, #8]
 8004286:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800428a:	d016      	beq.n	80042ba <I2C_MasterTransmit_TXE+0x6e>
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	681b      	ldr	r3, [r3, #0]
 8004290:	685a      	ldr	r2, [r3, #4]
 8004292:	687b      	ldr	r3, [r7, #4]
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800429a:	605a      	str	r2, [r3, #4]
 800429c:	687b      	ldr	r3, [r7, #4]
 800429e:	2211      	movs	r2, #17
 80042a0:	631a      	str	r2, [r3, #48]	; 0x30
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	2200      	movs	r2, #0
 80042a6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	2220      	movs	r2, #32
 80042ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80042b2:	6878      	ldr	r0, [r7, #4]
 80042b4:	f7ff ff62 	bl	800417c <HAL_I2C_MasterTxCpltCallback>
 80042b8:	e060      	b.n	800437c <I2C_MasterTransmit_TXE+0x130>
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	685a      	ldr	r2, [r3, #4]
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80042c8:	605a      	str	r2, [r3, #4]
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	681a      	ldr	r2, [r3, #0]
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	681b      	ldr	r3, [r3, #0]
 80042d4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80042d8:	601a      	str	r2, [r3, #0]
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	2200      	movs	r2, #0
 80042de:	631a      	str	r2, [r3, #48]	; 0x30
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	2220      	movs	r2, #32
 80042e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80042ee:	b2db      	uxtb	r3, r3
 80042f0:	2b40      	cmp	r3, #64	; 0x40
 80042f2:	d107      	bne.n	8004304 <I2C_MasterTransmit_TXE+0xb8>
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	2200      	movs	r2, #0
 80042f8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80042fc:	6878      	ldr	r0, [r7, #4]
 80042fe:	f7ff ff7d 	bl	80041fc <HAL_I2C_MemTxCpltCallback>
 8004302:	e03b      	b.n	800437c <I2C_MasterTransmit_TXE+0x130>
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	2200      	movs	r2, #0
 8004308:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800430c:	6878      	ldr	r0, [r7, #4]
 800430e:	f7ff ff35 	bl	800417c <HAL_I2C_MasterTxCpltCallback>
 8004312:	e033      	b.n	800437c <I2C_MasterTransmit_TXE+0x130>
 8004314:	7bfb      	ldrb	r3, [r7, #15]
 8004316:	2b21      	cmp	r3, #33	; 0x21
 8004318:	d005      	beq.n	8004326 <I2C_MasterTransmit_TXE+0xda>
 800431a:	7bbb      	ldrb	r3, [r7, #14]
 800431c:	2b40      	cmp	r3, #64	; 0x40
 800431e:	d12d      	bne.n	800437c <I2C_MasterTransmit_TXE+0x130>
 8004320:	7bfb      	ldrb	r3, [r7, #15]
 8004322:	2b22      	cmp	r3, #34	; 0x22
 8004324:	d12a      	bne.n	800437c <I2C_MasterTransmit_TXE+0x130>
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800432a:	b29b      	uxth	r3, r3
 800432c:	2b00      	cmp	r3, #0
 800432e:	d108      	bne.n	8004342 <I2C_MasterTransmit_TXE+0xf6>
 8004330:	687b      	ldr	r3, [r7, #4]
 8004332:	681b      	ldr	r3, [r3, #0]
 8004334:	685a      	ldr	r2, [r3, #4]
 8004336:	687b      	ldr	r3, [r7, #4]
 8004338:	681b      	ldr	r3, [r3, #0]
 800433a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800433e:	605a      	str	r2, [r3, #4]
 8004340:	e01c      	b.n	800437c <I2C_MasterTransmit_TXE+0x130>
 8004342:	687b      	ldr	r3, [r7, #4]
 8004344:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004348:	b2db      	uxtb	r3, r3
 800434a:	2b40      	cmp	r3, #64	; 0x40
 800434c:	d103      	bne.n	8004356 <I2C_MasterTransmit_TXE+0x10a>
 800434e:	6878      	ldr	r0, [r7, #4]
 8004350:	f000 f88e 	bl	8004470 <I2C_MemoryTransmit_TXE_BTF>
 8004354:	e012      	b.n	800437c <I2C_MasterTransmit_TXE+0x130>
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800435a:	781a      	ldrb	r2, [r3, #0]
 800435c:	687b      	ldr	r3, [r7, #4]
 800435e:	681b      	ldr	r3, [r3, #0]
 8004360:	611a      	str	r2, [r3, #16]
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004366:	1c5a      	adds	r2, r3, #1
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	625a      	str	r2, [r3, #36]	; 0x24
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004370:	b29b      	uxth	r3, r3
 8004372:	3b01      	subs	r3, #1
 8004374:	b29a      	uxth	r2, r3
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	855a      	strh	r2, [r3, #42]	; 0x2a
 800437a:	e7ff      	b.n	800437c <I2C_MasterTransmit_TXE+0x130>
 800437c:	bf00      	nop
 800437e:	3710      	adds	r7, #16
 8004380:	46bd      	mov	sp, r7
 8004382:	bd80      	pop	{r7, pc}

08004384 <I2C_MasterTransmit_BTF>:
 8004384:	b580      	push	{r7, lr}
 8004386:	b084      	sub	sp, #16
 8004388:	af00      	add	r7, sp, #0
 800438a:	6078      	str	r0, [r7, #4]
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004390:	60fb      	str	r3, [r7, #12]
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004398:	b2db      	uxtb	r3, r3
 800439a:	2b21      	cmp	r3, #33	; 0x21
 800439c:	d164      	bne.n	8004468 <I2C_MasterTransmit_BTF+0xe4>
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80043a2:	b29b      	uxth	r3, r3
 80043a4:	2b00      	cmp	r3, #0
 80043a6:	d012      	beq.n	80043ce <I2C_MasterTransmit_BTF+0x4a>
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043ac:	781a      	ldrb	r2, [r3, #0]
 80043ae:	687b      	ldr	r3, [r7, #4]
 80043b0:	681b      	ldr	r3, [r3, #0]
 80043b2:	611a      	str	r2, [r3, #16]
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043b8:	1c5a      	adds	r2, r3, #1
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	625a      	str	r2, [r3, #36]	; 0x24
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80043c2:	b29b      	uxth	r3, r3
 80043c4:	3b01      	subs	r3, #1
 80043c6:	b29a      	uxth	r2, r3
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	855a      	strh	r2, [r3, #42]	; 0x2a
 80043cc:	e04c      	b.n	8004468 <I2C_MasterTransmit_BTF+0xe4>
 80043ce:	68fb      	ldr	r3, [r7, #12]
 80043d0:	2b08      	cmp	r3, #8
 80043d2:	d01d      	beq.n	8004410 <I2C_MasterTransmit_BTF+0x8c>
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	2b20      	cmp	r3, #32
 80043d8:	d01a      	beq.n	8004410 <I2C_MasterTransmit_BTF+0x8c>
 80043da:	68fb      	ldr	r3, [r7, #12]
 80043dc:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80043e0:	d016      	beq.n	8004410 <I2C_MasterTransmit_BTF+0x8c>
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	685a      	ldr	r2, [r3, #4]
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80043f0:	605a      	str	r2, [r3, #4]
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	2211      	movs	r2, #17
 80043f6:	631a      	str	r2, [r3, #48]	; 0x30
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	2200      	movs	r2, #0
 80043fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	2220      	movs	r2, #32
 8004404:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004408:	6878      	ldr	r0, [r7, #4]
 800440a:	f7ff feb7 	bl	800417c <HAL_I2C_MasterTxCpltCallback>
 800440e:	e02b      	b.n	8004468 <I2C_MasterTransmit_BTF+0xe4>
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	685a      	ldr	r2, [r3, #4]
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800441e:	605a      	str	r2, [r3, #4]
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	681b      	ldr	r3, [r3, #0]
 8004424:	681a      	ldr	r2, [r3, #0]
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	681b      	ldr	r3, [r3, #0]
 800442a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800442e:	601a      	str	r2, [r3, #0]
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	2200      	movs	r2, #0
 8004434:	631a      	str	r2, [r3, #48]	; 0x30
 8004436:	687b      	ldr	r3, [r7, #4]
 8004438:	2220      	movs	r2, #32
 800443a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800443e:	687b      	ldr	r3, [r7, #4]
 8004440:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004444:	b2db      	uxtb	r3, r3
 8004446:	2b40      	cmp	r3, #64	; 0x40
 8004448:	d107      	bne.n	800445a <I2C_MasterTransmit_BTF+0xd6>
 800444a:	687b      	ldr	r3, [r7, #4]
 800444c:	2200      	movs	r2, #0
 800444e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004452:	6878      	ldr	r0, [r7, #4]
 8004454:	f7ff fed2 	bl	80041fc <HAL_I2C_MemTxCpltCallback>
 8004458:	e006      	b.n	8004468 <I2C_MasterTransmit_BTF+0xe4>
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	2200      	movs	r2, #0
 800445e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004462:	6878      	ldr	r0, [r7, #4]
 8004464:	f7ff fe8a 	bl	800417c <HAL_I2C_MasterTxCpltCallback>
 8004468:	bf00      	nop
 800446a:	3710      	adds	r7, #16
 800446c:	46bd      	mov	sp, r7
 800446e:	bd80      	pop	{r7, pc}

08004470 <I2C_MemoryTransmit_TXE_BTF>:
 8004470:	b580      	push	{r7, lr}
 8004472:	b084      	sub	sp, #16
 8004474:	af00      	add	r7, sp, #0
 8004476:	6078      	str	r0, [r7, #4]
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800447e:	73fb      	strb	r3, [r7, #15]
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004484:	2b00      	cmp	r3, #0
 8004486:	d11d      	bne.n	80044c4 <I2C_MemoryTransmit_TXE_BTF+0x54>
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800448c:	2b01      	cmp	r3, #1
 800448e:	d10b      	bne.n	80044a8 <I2C_MemoryTransmit_TXE_BTF+0x38>
 8004490:	687b      	ldr	r3, [r7, #4]
 8004492:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004494:	b2da      	uxtb	r2, r3
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	681b      	ldr	r3, [r3, #0]
 800449a:	611a      	str	r2, [r3, #16]
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80044a0:	1c9a      	adds	r2, r3, #2
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	651a      	str	r2, [r3, #80]	; 0x50
 80044a6:	e073      	b.n	8004590 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80044ac:	b29b      	uxth	r3, r3
 80044ae:	121b      	asrs	r3, r3, #8
 80044b0:	b2da      	uxtb	r2, r3
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	611a      	str	r2, [r3, #16]
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80044bc:	1c5a      	adds	r2, r3, #1
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	651a      	str	r2, [r3, #80]	; 0x50
 80044c2:	e065      	b.n	8004590 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80044c8:	2b01      	cmp	r3, #1
 80044ca:	d10b      	bne.n	80044e4 <I2C_MemoryTransmit_TXE_BTF+0x74>
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80044d0:	b2da      	uxtb	r2, r3
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	611a      	str	r2, [r3, #16]
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80044dc:	1c5a      	adds	r2, r3, #1
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	651a      	str	r2, [r3, #80]	; 0x50
 80044e2:	e055      	b.n	8004590 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80044e8:	2b02      	cmp	r3, #2
 80044ea:	d151      	bne.n	8004590 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80044ec:	7bfb      	ldrb	r3, [r7, #15]
 80044ee:	2b22      	cmp	r3, #34	; 0x22
 80044f0:	d10d      	bne.n	800450e <I2C_MemoryTransmit_TXE_BTF+0x9e>
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	681b      	ldr	r3, [r3, #0]
 80044f6:	681a      	ldr	r2, [r3, #0]
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004500:	601a      	str	r2, [r3, #0]
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004506:	1c5a      	adds	r2, r3, #1
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	651a      	str	r2, [r3, #80]	; 0x50
 800450c:	e040      	b.n	8004590 <I2C_MemoryTransmit_TXE_BTF+0x120>
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004512:	b29b      	uxth	r3, r3
 8004514:	2b00      	cmp	r3, #0
 8004516:	d015      	beq.n	8004544 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 8004518:	7bfb      	ldrb	r3, [r7, #15]
 800451a:	2b21      	cmp	r3, #33	; 0x21
 800451c:	d112      	bne.n	8004544 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004522:	781a      	ldrb	r2, [r3, #0]
 8004524:	687b      	ldr	r3, [r7, #4]
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	611a      	str	r2, [r3, #16]
 800452a:	687b      	ldr	r3, [r7, #4]
 800452c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800452e:	1c5a      	adds	r2, r3, #1
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	625a      	str	r2, [r3, #36]	; 0x24
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004538:	b29b      	uxth	r3, r3
 800453a:	3b01      	subs	r3, #1
 800453c:	b29a      	uxth	r2, r3
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004542:	e025      	b.n	8004590 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004548:	b29b      	uxth	r3, r3
 800454a:	2b00      	cmp	r3, #0
 800454c:	d120      	bne.n	8004590 <I2C_MemoryTransmit_TXE_BTF+0x120>
 800454e:	7bfb      	ldrb	r3, [r7, #15]
 8004550:	2b21      	cmp	r3, #33	; 0x21
 8004552:	d11d      	bne.n	8004590 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	685a      	ldr	r2, [r3, #4]
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	681b      	ldr	r3, [r3, #0]
 800455e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8004562:	605a      	str	r2, [r3, #4]
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	681a      	ldr	r2, [r3, #0]
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004572:	601a      	str	r2, [r3, #0]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	2200      	movs	r2, #0
 8004578:	631a      	str	r2, [r3, #48]	; 0x30
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	2220      	movs	r2, #32
 800457e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	2200      	movs	r2, #0
 8004586:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800458a:	6878      	ldr	r0, [r7, #4]
 800458c:	f7ff fe36 	bl	80041fc <HAL_I2C_MemTxCpltCallback>
 8004590:	bf00      	nop
 8004592:	3710      	adds	r7, #16
 8004594:	46bd      	mov	sp, r7
 8004596:	bd80      	pop	{r7, pc}

08004598 <I2C_MasterReceive_RXNE>:
 8004598:	b580      	push	{r7, lr}
 800459a:	b084      	sub	sp, #16
 800459c:	af00      	add	r7, sp, #0
 800459e:	6078      	str	r0, [r7, #4]
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80045a6:	b2db      	uxtb	r3, r3
 80045a8:	2b22      	cmp	r3, #34	; 0x22
 80045aa:	f040 80ac 	bne.w	8004706 <I2C_MasterReceive_RXNE+0x16e>
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80045b2:	b29b      	uxth	r3, r3
 80045b4:	60fb      	str	r3, [r7, #12]
 80045b6:	68fb      	ldr	r3, [r7, #12]
 80045b8:	2b03      	cmp	r3, #3
 80045ba:	d921      	bls.n	8004600 <I2C_MasterReceive_RXNE+0x68>
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	681b      	ldr	r3, [r3, #0]
 80045c0:	691a      	ldr	r2, [r3, #16]
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045c6:	b2d2      	uxtb	r2, r2
 80045c8:	701a      	strb	r2, [r3, #0]
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045ce:	1c5a      	adds	r2, r3, #1
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	625a      	str	r2, [r3, #36]	; 0x24
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80045d8:	b29b      	uxth	r3, r3
 80045da:	3b01      	subs	r3, #1
 80045dc:	b29a      	uxth	r2, r3
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80045e6:	b29b      	uxth	r3, r3
 80045e8:	2b03      	cmp	r3, #3
 80045ea:	f040 808c 	bne.w	8004706 <I2C_MasterReceive_RXNE+0x16e>
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	681b      	ldr	r3, [r3, #0]
 80045f2:	685a      	ldr	r2, [r3, #4]
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80045fc:	605a      	str	r2, [r3, #4]
 80045fe:	e082      	b.n	8004706 <I2C_MasterReceive_RXNE+0x16e>
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004604:	2b02      	cmp	r3, #2
 8004606:	d075      	beq.n	80046f4 <I2C_MasterReceive_RXNE+0x15c>
 8004608:	68fb      	ldr	r3, [r7, #12]
 800460a:	2b01      	cmp	r3, #1
 800460c:	d002      	beq.n	8004614 <I2C_MasterReceive_RXNE+0x7c>
 800460e:	68fb      	ldr	r3, [r7, #12]
 8004610:	2b00      	cmp	r3, #0
 8004612:	d16f      	bne.n	80046f4 <I2C_MasterReceive_RXNE+0x15c>
 8004614:	6878      	ldr	r0, [r7, #4]
 8004616:	f001 f827 	bl	8005668 <I2C_WaitOnSTOPRequestThroughIT>
 800461a:	4603      	mov	r3, r0
 800461c:	2b00      	cmp	r3, #0
 800461e:	d142      	bne.n	80046a6 <I2C_MasterReceive_RXNE+0x10e>
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	681a      	ldr	r2, [r3, #0]
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	681b      	ldr	r3, [r3, #0]
 800462a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800462e:	601a      	str	r2, [r3, #0]
 8004630:	687b      	ldr	r3, [r7, #4]
 8004632:	681b      	ldr	r3, [r3, #0]
 8004634:	685a      	ldr	r2, [r3, #4]
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800463e:	605a      	str	r2, [r3, #4]
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	691a      	ldr	r2, [r3, #16]
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800464a:	b2d2      	uxtb	r2, r2
 800464c:	701a      	strb	r2, [r3, #0]
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004652:	1c5a      	adds	r2, r3, #1
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	625a      	str	r2, [r3, #36]	; 0x24
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800465c:	b29b      	uxth	r3, r3
 800465e:	3b01      	subs	r3, #1
 8004660:	b29a      	uxth	r2, r3
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	2220      	movs	r2, #32
 800466a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004674:	b2db      	uxtb	r3, r3
 8004676:	2b40      	cmp	r3, #64	; 0x40
 8004678:	d10a      	bne.n	8004690 <I2C_MasterReceive_RXNE+0xf8>
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	2200      	movs	r2, #0
 800467e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	2200      	movs	r2, #0
 8004686:	631a      	str	r2, [r3, #48]	; 0x30
 8004688:	6878      	ldr	r0, [r7, #4]
 800468a:	f7ff fdc1 	bl	8004210 <HAL_I2C_MemRxCpltCallback>
 800468e:	e03a      	b.n	8004706 <I2C_MasterReceive_RXNE+0x16e>
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	2200      	movs	r2, #0
 8004694:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	2212      	movs	r2, #18
 800469c:	631a      	str	r2, [r3, #48]	; 0x30
 800469e:	6878      	ldr	r0, [r7, #4]
 80046a0:	f7ff fd76 	bl	8004190 <HAL_I2C_MasterRxCpltCallback>
 80046a4:	e02f      	b.n	8004706 <I2C_MasterReceive_RXNE+0x16e>
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	685a      	ldr	r2, [r3, #4]
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80046b4:	605a      	str	r2, [r3, #4]
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	691a      	ldr	r2, [r3, #16]
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046c0:	b2d2      	uxtb	r2, r2
 80046c2:	701a      	strb	r2, [r3, #0]
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046c8:	1c5a      	adds	r2, r3, #1
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	625a      	str	r2, [r3, #36]	; 0x24
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80046d2:	b29b      	uxth	r3, r3
 80046d4:	3b01      	subs	r3, #1
 80046d6:	b29a      	uxth	r2, r3
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	855a      	strh	r2, [r3, #42]	; 0x2a
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	2220      	movs	r2, #32
 80046e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	2200      	movs	r2, #0
 80046e8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80046ec:	6878      	ldr	r0, [r7, #4]
 80046ee:	f7ff fd99 	bl	8004224 <HAL_I2C_ErrorCallback>
 80046f2:	e008      	b.n	8004706 <I2C_MasterReceive_RXNE+0x16e>
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	685a      	ldr	r2, [r3, #4]
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	681b      	ldr	r3, [r3, #0]
 80046fe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004702:	605a      	str	r2, [r3, #4]
 8004704:	e7ff      	b.n	8004706 <I2C_MasterReceive_RXNE+0x16e>
 8004706:	bf00      	nop
 8004708:	3710      	adds	r7, #16
 800470a:	46bd      	mov	sp, r7
 800470c:	bd80      	pop	{r7, pc}

0800470e <I2C_MasterReceive_BTF>:
 800470e:	b580      	push	{r7, lr}
 8004710:	b084      	sub	sp, #16
 8004712:	af00      	add	r7, sp, #0
 8004714:	6078      	str	r0, [r7, #4]
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800471a:	60fb      	str	r3, [r7, #12]
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004720:	b29b      	uxth	r3, r3
 8004722:	2b04      	cmp	r3, #4
 8004724:	d11b      	bne.n	800475e <I2C_MasterReceive_BTF+0x50>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	685a      	ldr	r2, [r3, #4]
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004734:	605a      	str	r2, [r3, #4]
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	681b      	ldr	r3, [r3, #0]
 800473a:	691a      	ldr	r2, [r3, #16]
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004740:	b2d2      	uxtb	r2, r2
 8004742:	701a      	strb	r2, [r3, #0]
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004748:	1c5a      	adds	r2, r3, #1
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	625a      	str	r2, [r3, #36]	; 0x24
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004752:	b29b      	uxth	r3, r3
 8004754:	3b01      	subs	r3, #1
 8004756:	b29a      	uxth	r2, r3
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800475c:	e0bd      	b.n	80048da <I2C_MasterReceive_BTF+0x1cc>
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004762:	b29b      	uxth	r3, r3
 8004764:	2b03      	cmp	r3, #3
 8004766:	d129      	bne.n	80047bc <I2C_MasterReceive_BTF+0xae>
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	681b      	ldr	r3, [r3, #0]
 800476c:	685a      	ldr	r2, [r3, #4]
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	681b      	ldr	r3, [r3, #0]
 8004772:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004776:	605a      	str	r2, [r3, #4]
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	2b04      	cmp	r3, #4
 800477c:	d00a      	beq.n	8004794 <I2C_MasterReceive_BTF+0x86>
 800477e:	68fb      	ldr	r3, [r7, #12]
 8004780:	2b02      	cmp	r3, #2
 8004782:	d007      	beq.n	8004794 <I2C_MasterReceive_BTF+0x86>
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	681a      	ldr	r2, [r3, #0]
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	681b      	ldr	r3, [r3, #0]
 800478e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004792:	601a      	str	r2, [r3, #0]
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	691a      	ldr	r2, [r3, #16]
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800479e:	b2d2      	uxtb	r2, r2
 80047a0:	701a      	strb	r2, [r3, #0]
 80047a2:	687b      	ldr	r3, [r7, #4]
 80047a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047a6:	1c5a      	adds	r2, r3, #1
 80047a8:	687b      	ldr	r3, [r7, #4]
 80047aa:	625a      	str	r2, [r3, #36]	; 0x24
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80047b0:	b29b      	uxth	r3, r3
 80047b2:	3b01      	subs	r3, #1
 80047b4:	b29a      	uxth	r2, r3
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80047ba:	e08e      	b.n	80048da <I2C_MasterReceive_BTF+0x1cc>
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80047c0:	b29b      	uxth	r3, r3
 80047c2:	2b02      	cmp	r3, #2
 80047c4:	d176      	bne.n	80048b4 <I2C_MasterReceive_BTF+0x1a6>
 80047c6:	68fb      	ldr	r3, [r7, #12]
 80047c8:	2b01      	cmp	r3, #1
 80047ca:	d002      	beq.n	80047d2 <I2C_MasterReceive_BTF+0xc4>
 80047cc:	68fb      	ldr	r3, [r7, #12]
 80047ce:	2b10      	cmp	r3, #16
 80047d0:	d108      	bne.n	80047e4 <I2C_MasterReceive_BTF+0xd6>
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	681a      	ldr	r2, [r3, #0]
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80047e0:	601a      	str	r2, [r3, #0]
 80047e2:	e019      	b.n	8004818 <I2C_MasterReceive_BTF+0x10a>
 80047e4:	68fb      	ldr	r3, [r7, #12]
 80047e6:	2b04      	cmp	r3, #4
 80047e8:	d002      	beq.n	80047f0 <I2C_MasterReceive_BTF+0xe2>
 80047ea:	68fb      	ldr	r3, [r7, #12]
 80047ec:	2b02      	cmp	r3, #2
 80047ee:	d108      	bne.n	8004802 <I2C_MasterReceive_BTF+0xf4>
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	681a      	ldr	r2, [r3, #0]
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80047fe:	601a      	str	r2, [r3, #0]
 8004800:	e00a      	b.n	8004818 <I2C_MasterReceive_BTF+0x10a>
 8004802:	68fb      	ldr	r3, [r7, #12]
 8004804:	2b10      	cmp	r3, #16
 8004806:	d007      	beq.n	8004818 <I2C_MasterReceive_BTF+0x10a>
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	681a      	ldr	r2, [r3, #0]
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	681b      	ldr	r3, [r3, #0]
 8004812:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004816:	601a      	str	r2, [r3, #0]
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	691a      	ldr	r2, [r3, #16]
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004822:	b2d2      	uxtb	r2, r2
 8004824:	701a      	strb	r2, [r3, #0]
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800482a:	1c5a      	adds	r2, r3, #1
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	625a      	str	r2, [r3, #36]	; 0x24
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004834:	b29b      	uxth	r3, r3
 8004836:	3b01      	subs	r3, #1
 8004838:	b29a      	uxth	r2, r3
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	691a      	ldr	r2, [r3, #16]
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004848:	b2d2      	uxtb	r2, r2
 800484a:	701a      	strb	r2, [r3, #0]
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004850:	1c5a      	adds	r2, r3, #1
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	625a      	str	r2, [r3, #36]	; 0x24
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800485a:	b29b      	uxth	r3, r3
 800485c:	3b01      	subs	r3, #1
 800485e:	b29a      	uxth	r2, r3
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004864:	687b      	ldr	r3, [r7, #4]
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	685a      	ldr	r2, [r3, #4]
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8004872:	605a      	str	r2, [r3, #4]
 8004874:	687b      	ldr	r3, [r7, #4]
 8004876:	2220      	movs	r2, #32
 8004878:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004882:	b2db      	uxtb	r3, r3
 8004884:	2b40      	cmp	r3, #64	; 0x40
 8004886:	d10a      	bne.n	800489e <I2C_MasterReceive_BTF+0x190>
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	2200      	movs	r2, #0
 800488c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	2200      	movs	r2, #0
 8004894:	631a      	str	r2, [r3, #48]	; 0x30
 8004896:	6878      	ldr	r0, [r7, #4]
 8004898:	f7ff fcba 	bl	8004210 <HAL_I2C_MemRxCpltCallback>
 800489c:	e01d      	b.n	80048da <I2C_MasterReceive_BTF+0x1cc>
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	2200      	movs	r2, #0
 80048a2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	2212      	movs	r2, #18
 80048aa:	631a      	str	r2, [r3, #48]	; 0x30
 80048ac:	6878      	ldr	r0, [r7, #4]
 80048ae:	f7ff fc6f 	bl	8004190 <HAL_I2C_MasterRxCpltCallback>
 80048b2:	e012      	b.n	80048da <I2C_MasterReceive_BTF+0x1cc>
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	691a      	ldr	r2, [r3, #16]
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048be:	b2d2      	uxtb	r2, r2
 80048c0:	701a      	strb	r2, [r3, #0]
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048c6:	1c5a      	adds	r2, r3, #1
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	625a      	str	r2, [r3, #36]	; 0x24
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80048d0:	b29b      	uxth	r3, r3
 80048d2:	3b01      	subs	r3, #1
 80048d4:	b29a      	uxth	r2, r3
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80048da:	bf00      	nop
 80048dc:	3710      	adds	r7, #16
 80048de:	46bd      	mov	sp, r7
 80048e0:	bd80      	pop	{r7, pc}

080048e2 <I2C_Master_SB>:
 80048e2:	b480      	push	{r7}
 80048e4:	b083      	sub	sp, #12
 80048e6:	af00      	add	r7, sp, #0
 80048e8:	6078      	str	r0, [r7, #4]
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80048f0:	b2db      	uxtb	r3, r3
 80048f2:	2b40      	cmp	r3, #64	; 0x40
 80048f4:	d117      	bne.n	8004926 <I2C_Master_SB+0x44>
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80048fa:	2b00      	cmp	r3, #0
 80048fc:	d109      	bne.n	8004912 <I2C_Master_SB+0x30>
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004902:	b2db      	uxtb	r3, r3
 8004904:	461a      	mov	r2, r3
 8004906:	687b      	ldr	r3, [r7, #4]
 8004908:	681b      	ldr	r3, [r3, #0]
 800490a:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800490e:	611a      	str	r2, [r3, #16]
 8004910:	e067      	b.n	80049e2 <I2C_Master_SB+0x100>
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004916:	b2db      	uxtb	r3, r3
 8004918:	f043 0301 	orr.w	r3, r3, #1
 800491c:	b2da      	uxtb	r2, r3
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	611a      	str	r2, [r3, #16]
 8004924:	e05d      	b.n	80049e2 <I2C_Master_SB+0x100>
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	691b      	ldr	r3, [r3, #16]
 800492a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800492e:	d133      	bne.n	8004998 <I2C_Master_SB+0xb6>
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004936:	b2db      	uxtb	r3, r3
 8004938:	2b21      	cmp	r3, #33	; 0x21
 800493a:	d109      	bne.n	8004950 <I2C_Master_SB+0x6e>
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004940:	b2db      	uxtb	r3, r3
 8004942:	461a      	mov	r2, r3
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800494c:	611a      	str	r2, [r3, #16]
 800494e:	e008      	b.n	8004962 <I2C_Master_SB+0x80>
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004954:	b2db      	uxtb	r3, r3
 8004956:	f043 0301 	orr.w	r3, r3, #1
 800495a:	b2da      	uxtb	r2, r3
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	611a      	str	r2, [r3, #16]
 8004962:	687b      	ldr	r3, [r7, #4]
 8004964:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004966:	2b00      	cmp	r3, #0
 8004968:	d004      	beq.n	8004974 <I2C_Master_SB+0x92>
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800496e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004970:	2b00      	cmp	r3, #0
 8004972:	d108      	bne.n	8004986 <I2C_Master_SB+0xa4>
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004978:	2b00      	cmp	r3, #0
 800497a:	d032      	beq.n	80049e2 <I2C_Master_SB+0x100>
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004980:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004982:	2b00      	cmp	r3, #0
 8004984:	d02d      	beq.n	80049e2 <I2C_Master_SB+0x100>
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	681b      	ldr	r3, [r3, #0]
 800498a:	685a      	ldr	r2, [r3, #4]
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	681b      	ldr	r3, [r3, #0]
 8004990:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004994:	605a      	str	r2, [r3, #4]
 8004996:	e024      	b.n	80049e2 <I2C_Master_SB+0x100>
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800499c:	2b00      	cmp	r3, #0
 800499e:	d10e      	bne.n	80049be <I2C_Master_SB+0xdc>
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049a4:	b29b      	uxth	r3, r3
 80049a6:	11db      	asrs	r3, r3, #7
 80049a8:	b2db      	uxtb	r3, r3
 80049aa:	f003 0306 	and.w	r3, r3, #6
 80049ae:	b2db      	uxtb	r3, r3
 80049b0:	f063 030f 	orn	r3, r3, #15
 80049b4:	b2da      	uxtb	r2, r3
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	611a      	str	r2, [r3, #16]
 80049bc:	e011      	b.n	80049e2 <I2C_Master_SB+0x100>
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80049c2:	2b01      	cmp	r3, #1
 80049c4:	d10d      	bne.n	80049e2 <I2C_Master_SB+0x100>
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049ca:	b29b      	uxth	r3, r3
 80049cc:	11db      	asrs	r3, r3, #7
 80049ce:	b2db      	uxtb	r3, r3
 80049d0:	f003 0306 	and.w	r3, r3, #6
 80049d4:	b2db      	uxtb	r3, r3
 80049d6:	f063 030e 	orn	r3, r3, #14
 80049da:	b2da      	uxtb	r2, r3
 80049dc:	687b      	ldr	r3, [r7, #4]
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	611a      	str	r2, [r3, #16]
 80049e2:	bf00      	nop
 80049e4:	370c      	adds	r7, #12
 80049e6:	46bd      	mov	sp, r7
 80049e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049ec:	4770      	bx	lr

080049ee <I2C_Master_ADD10>:
 80049ee:	b480      	push	{r7}
 80049f0:	b083      	sub	sp, #12
 80049f2:	af00      	add	r7, sp, #0
 80049f4:	6078      	str	r0, [r7, #4]
 80049f6:	687b      	ldr	r3, [r7, #4]
 80049f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049fa:	b2da      	uxtb	r2, r3
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	611a      	str	r2, [r3, #16]
 8004a02:	687b      	ldr	r3, [r7, #4]
 8004a04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d004      	beq.n	8004a14 <I2C_Master_ADD10+0x26>
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004a0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004a10:	2b00      	cmp	r3, #0
 8004a12:	d108      	bne.n	8004a26 <I2C_Master_ADD10+0x38>
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	d00c      	beq.n	8004a36 <I2C_Master_ADD10+0x48>
 8004a1c:	687b      	ldr	r3, [r7, #4]
 8004a1e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004a20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004a22:	2b00      	cmp	r3, #0
 8004a24:	d007      	beq.n	8004a36 <I2C_Master_ADD10+0x48>
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	685a      	ldr	r2, [r3, #4]
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004a34:	605a      	str	r2, [r3, #4]
 8004a36:	bf00      	nop
 8004a38:	370c      	adds	r7, #12
 8004a3a:	46bd      	mov	sp, r7
 8004a3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a40:	4770      	bx	lr

08004a42 <I2C_Master_ADDR>:
 8004a42:	b480      	push	{r7}
 8004a44:	b091      	sub	sp, #68	; 0x44
 8004a46:	af00      	add	r7, sp, #0
 8004a48:	6078      	str	r0, [r7, #4]
 8004a4a:	687b      	ldr	r3, [r7, #4]
 8004a4c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004a50:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8004a54:	687b      	ldr	r3, [r7, #4]
 8004a56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004a58:	63bb      	str	r3, [r7, #56]	; 0x38
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a5e:	637b      	str	r3, [r7, #52]	; 0x34
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004a66:	b2db      	uxtb	r3, r3
 8004a68:	2b22      	cmp	r3, #34	; 0x22
 8004a6a:	f040 8169 	bne.w	8004d40 <I2C_Master_ADDR+0x2fe>
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004a72:	2b00      	cmp	r3, #0
 8004a74:	d10f      	bne.n	8004a96 <I2C_Master_ADDR+0x54>
 8004a76:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8004a7a:	2b40      	cmp	r3, #64	; 0x40
 8004a7c:	d10b      	bne.n	8004a96 <I2C_Master_ADDR+0x54>
 8004a7e:	2300      	movs	r3, #0
 8004a80:	633b      	str	r3, [r7, #48]	; 0x30
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	695b      	ldr	r3, [r3, #20]
 8004a88:	633b      	str	r3, [r7, #48]	; 0x30
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	681b      	ldr	r3, [r3, #0]
 8004a8e:	699b      	ldr	r3, [r3, #24]
 8004a90:	633b      	str	r3, [r7, #48]	; 0x30
 8004a92:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a94:	e160      	b.n	8004d58 <I2C_Master_ADDR+0x316>
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004a9a:	2b00      	cmp	r3, #0
 8004a9c:	d11d      	bne.n	8004ada <I2C_Master_ADDR+0x98>
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	691b      	ldr	r3, [r3, #16]
 8004aa2:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8004aa6:	d118      	bne.n	8004ada <I2C_Master_ADDR+0x98>
 8004aa8:	2300      	movs	r3, #0
 8004aaa:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004aac:	687b      	ldr	r3, [r7, #4]
 8004aae:	681b      	ldr	r3, [r3, #0]
 8004ab0:	695b      	ldr	r3, [r3, #20]
 8004ab2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	699b      	ldr	r3, [r3, #24]
 8004aba:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004abc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004abe:	687b      	ldr	r3, [r7, #4]
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	681a      	ldr	r2, [r3, #0]
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004acc:	601a      	str	r2, [r3, #0]
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004ad2:	1c5a      	adds	r2, r3, #1
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	651a      	str	r2, [r3, #80]	; 0x50
 8004ad8:	e13e      	b.n	8004d58 <I2C_Master_ADDR+0x316>
 8004ada:	687b      	ldr	r3, [r7, #4]
 8004adc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004ade:	b29b      	uxth	r3, r3
 8004ae0:	2b00      	cmp	r3, #0
 8004ae2:	d113      	bne.n	8004b0c <I2C_Master_ADDR+0xca>
 8004ae4:	2300      	movs	r3, #0
 8004ae6:	62bb      	str	r3, [r7, #40]	; 0x28
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	681b      	ldr	r3, [r3, #0]
 8004aec:	695b      	ldr	r3, [r3, #20]
 8004aee:	62bb      	str	r3, [r7, #40]	; 0x28
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	699b      	ldr	r3, [r3, #24]
 8004af6:	62bb      	str	r3, [r7, #40]	; 0x28
 8004af8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	681a      	ldr	r2, [r3, #0]
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004b08:	601a      	str	r2, [r3, #0]
 8004b0a:	e115      	b.n	8004d38 <I2C_Master_ADDR+0x2f6>
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004b10:	b29b      	uxth	r3, r3
 8004b12:	2b01      	cmp	r3, #1
 8004b14:	f040 808a 	bne.w	8004c2c <I2C_Master_ADDR+0x1ea>
 8004b18:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004b1a:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8004b1e:	d137      	bne.n	8004b90 <I2C_Master_ADDR+0x14e>
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	681b      	ldr	r3, [r3, #0]
 8004b24:	681a      	ldr	r2, [r3, #0]
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	681b      	ldr	r3, [r3, #0]
 8004b2a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004b2e:	601a      	str	r2, [r3, #0]
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	685b      	ldr	r3, [r3, #4]
 8004b36:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004b3a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004b3e:	d113      	bne.n	8004b68 <I2C_Master_ADDR+0x126>
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	681b      	ldr	r3, [r3, #0]
 8004b44:	681a      	ldr	r2, [r3, #0]
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004b4e:	601a      	str	r2, [r3, #0]
 8004b50:	2300      	movs	r3, #0
 8004b52:	627b      	str	r3, [r7, #36]	; 0x24
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	681b      	ldr	r3, [r3, #0]
 8004b58:	695b      	ldr	r3, [r3, #20]
 8004b5a:	627b      	str	r3, [r7, #36]	; 0x24
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	699b      	ldr	r3, [r3, #24]
 8004b62:	627b      	str	r3, [r7, #36]	; 0x24
 8004b64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b66:	e0e7      	b.n	8004d38 <I2C_Master_ADDR+0x2f6>
 8004b68:	2300      	movs	r3, #0
 8004b6a:	623b      	str	r3, [r7, #32]
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	695b      	ldr	r3, [r3, #20]
 8004b72:	623b      	str	r3, [r7, #32]
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	699b      	ldr	r3, [r3, #24]
 8004b7a:	623b      	str	r3, [r7, #32]
 8004b7c:	6a3b      	ldr	r3, [r7, #32]
 8004b7e:	687b      	ldr	r3, [r7, #4]
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	681a      	ldr	r2, [r3, #0]
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	681b      	ldr	r3, [r3, #0]
 8004b88:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004b8c:	601a      	str	r2, [r3, #0]
 8004b8e:	e0d3      	b.n	8004d38 <I2C_Master_ADDR+0x2f6>
 8004b90:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004b92:	2b08      	cmp	r3, #8
 8004b94:	d02e      	beq.n	8004bf4 <I2C_Master_ADDR+0x1b2>
 8004b96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004b98:	2b20      	cmp	r3, #32
 8004b9a:	d02b      	beq.n	8004bf4 <I2C_Master_ADDR+0x1b2>
 8004b9c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004b9e:	2b12      	cmp	r3, #18
 8004ba0:	d102      	bne.n	8004ba8 <I2C_Master_ADDR+0x166>
 8004ba2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004ba4:	2b01      	cmp	r3, #1
 8004ba6:	d125      	bne.n	8004bf4 <I2C_Master_ADDR+0x1b2>
 8004ba8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004baa:	2b04      	cmp	r3, #4
 8004bac:	d00e      	beq.n	8004bcc <I2C_Master_ADDR+0x18a>
 8004bae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004bb0:	2b02      	cmp	r3, #2
 8004bb2:	d00b      	beq.n	8004bcc <I2C_Master_ADDR+0x18a>
 8004bb4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004bb6:	2b10      	cmp	r3, #16
 8004bb8:	d008      	beq.n	8004bcc <I2C_Master_ADDR+0x18a>
 8004bba:	687b      	ldr	r3, [r7, #4]
 8004bbc:	681b      	ldr	r3, [r3, #0]
 8004bbe:	681a      	ldr	r2, [r3, #0]
 8004bc0:	687b      	ldr	r3, [r7, #4]
 8004bc2:	681b      	ldr	r3, [r3, #0]
 8004bc4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004bc8:	601a      	str	r2, [r3, #0]
 8004bca:	e007      	b.n	8004bdc <I2C_Master_ADDR+0x19a>
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	681a      	ldr	r2, [r3, #0]
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004bda:	601a      	str	r2, [r3, #0]
 8004bdc:	2300      	movs	r3, #0
 8004bde:	61fb      	str	r3, [r7, #28]
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	695b      	ldr	r3, [r3, #20]
 8004be6:	61fb      	str	r3, [r7, #28]
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	681b      	ldr	r3, [r3, #0]
 8004bec:	699b      	ldr	r3, [r3, #24]
 8004bee:	61fb      	str	r3, [r7, #28]
 8004bf0:	69fb      	ldr	r3, [r7, #28]
 8004bf2:	e0a1      	b.n	8004d38 <I2C_Master_ADDR+0x2f6>
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	681a      	ldr	r2, [r3, #0]
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c02:	601a      	str	r2, [r3, #0]
 8004c04:	2300      	movs	r3, #0
 8004c06:	61bb      	str	r3, [r7, #24]
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	695b      	ldr	r3, [r3, #20]
 8004c0e:	61bb      	str	r3, [r7, #24]
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	681b      	ldr	r3, [r3, #0]
 8004c14:	699b      	ldr	r3, [r3, #24]
 8004c16:	61bb      	str	r3, [r7, #24]
 8004c18:	69bb      	ldr	r3, [r7, #24]
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	681a      	ldr	r2, [r3, #0]
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	681b      	ldr	r3, [r3, #0]
 8004c24:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004c28:	601a      	str	r2, [r3, #0]
 8004c2a:	e085      	b.n	8004d38 <I2C_Master_ADDR+0x2f6>
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004c30:	b29b      	uxth	r3, r3
 8004c32:	2b02      	cmp	r3, #2
 8004c34:	d14d      	bne.n	8004cd2 <I2C_Master_ADDR+0x290>
 8004c36:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004c38:	2b04      	cmp	r3, #4
 8004c3a:	d016      	beq.n	8004c6a <I2C_Master_ADDR+0x228>
 8004c3c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004c3e:	2b02      	cmp	r3, #2
 8004c40:	d013      	beq.n	8004c6a <I2C_Master_ADDR+0x228>
 8004c42:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004c44:	2b10      	cmp	r3, #16
 8004c46:	d010      	beq.n	8004c6a <I2C_Master_ADDR+0x228>
 8004c48:	687b      	ldr	r3, [r7, #4]
 8004c4a:	681b      	ldr	r3, [r3, #0]
 8004c4c:	681a      	ldr	r2, [r3, #0]
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	681b      	ldr	r3, [r3, #0]
 8004c52:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c56:	601a      	str	r2, [r3, #0]
 8004c58:	687b      	ldr	r3, [r7, #4]
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	681a      	ldr	r2, [r3, #0]
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	681b      	ldr	r3, [r3, #0]
 8004c62:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004c66:	601a      	str	r2, [r3, #0]
 8004c68:	e007      	b.n	8004c7a <I2C_Master_ADDR+0x238>
 8004c6a:	687b      	ldr	r3, [r7, #4]
 8004c6c:	681b      	ldr	r3, [r3, #0]
 8004c6e:	681a      	ldr	r2, [r3, #0]
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	681b      	ldr	r3, [r3, #0]
 8004c74:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004c78:	601a      	str	r2, [r3, #0]
 8004c7a:	687b      	ldr	r3, [r7, #4]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	685b      	ldr	r3, [r3, #4]
 8004c80:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004c84:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004c88:	d117      	bne.n	8004cba <I2C_Master_ADDR+0x278>
 8004c8a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004c8c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8004c90:	d00b      	beq.n	8004caa <I2C_Master_ADDR+0x268>
 8004c92:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004c94:	2b01      	cmp	r3, #1
 8004c96:	d008      	beq.n	8004caa <I2C_Master_ADDR+0x268>
 8004c98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004c9a:	2b08      	cmp	r3, #8
 8004c9c:	d005      	beq.n	8004caa <I2C_Master_ADDR+0x268>
 8004c9e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004ca0:	2b10      	cmp	r3, #16
 8004ca2:	d002      	beq.n	8004caa <I2C_Master_ADDR+0x268>
 8004ca4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004ca6:	2b20      	cmp	r3, #32
 8004ca8:	d107      	bne.n	8004cba <I2C_Master_ADDR+0x278>
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	685a      	ldr	r2, [r3, #4]
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8004cb8:	605a      	str	r2, [r3, #4]
 8004cba:	2300      	movs	r3, #0
 8004cbc:	617b      	str	r3, [r7, #20]
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	695b      	ldr	r3, [r3, #20]
 8004cc4:	617b      	str	r3, [r7, #20]
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	681b      	ldr	r3, [r3, #0]
 8004cca:	699b      	ldr	r3, [r3, #24]
 8004ccc:	617b      	str	r3, [r7, #20]
 8004cce:	697b      	ldr	r3, [r7, #20]
 8004cd0:	e032      	b.n	8004d38 <I2C_Master_ADDR+0x2f6>
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	681a      	ldr	r2, [r3, #0]
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	681b      	ldr	r3, [r3, #0]
 8004cdc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004ce0:	601a      	str	r2, [r3, #0]
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	681b      	ldr	r3, [r3, #0]
 8004ce6:	685b      	ldr	r3, [r3, #4]
 8004ce8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004cec:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004cf0:	d117      	bne.n	8004d22 <I2C_Master_ADDR+0x2e0>
 8004cf2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004cf4:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8004cf8:	d00b      	beq.n	8004d12 <I2C_Master_ADDR+0x2d0>
 8004cfa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004cfc:	2b01      	cmp	r3, #1
 8004cfe:	d008      	beq.n	8004d12 <I2C_Master_ADDR+0x2d0>
 8004d00:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004d02:	2b08      	cmp	r3, #8
 8004d04:	d005      	beq.n	8004d12 <I2C_Master_ADDR+0x2d0>
 8004d06:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004d08:	2b10      	cmp	r3, #16
 8004d0a:	d002      	beq.n	8004d12 <I2C_Master_ADDR+0x2d0>
 8004d0c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004d0e:	2b20      	cmp	r3, #32
 8004d10:	d107      	bne.n	8004d22 <I2C_Master_ADDR+0x2e0>
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	681b      	ldr	r3, [r3, #0]
 8004d16:	685a      	ldr	r2, [r3, #4]
 8004d18:	687b      	ldr	r3, [r7, #4]
 8004d1a:	681b      	ldr	r3, [r3, #0]
 8004d1c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8004d20:	605a      	str	r2, [r3, #4]
 8004d22:	2300      	movs	r3, #0
 8004d24:	613b      	str	r3, [r7, #16]
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	695b      	ldr	r3, [r3, #20]
 8004d2c:	613b      	str	r3, [r7, #16]
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	681b      	ldr	r3, [r3, #0]
 8004d32:	699b      	ldr	r3, [r3, #24]
 8004d34:	613b      	str	r3, [r7, #16]
 8004d36:	693b      	ldr	r3, [r7, #16]
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	2200      	movs	r2, #0
 8004d3c:	651a      	str	r2, [r3, #80]	; 0x50
 8004d3e:	e00b      	b.n	8004d58 <I2C_Master_ADDR+0x316>
 8004d40:	2300      	movs	r3, #0
 8004d42:	60fb      	str	r3, [r7, #12]
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	681b      	ldr	r3, [r3, #0]
 8004d48:	695b      	ldr	r3, [r3, #20]
 8004d4a:	60fb      	str	r3, [r7, #12]
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	699b      	ldr	r3, [r3, #24]
 8004d52:	60fb      	str	r3, [r7, #12]
 8004d54:	68fb      	ldr	r3, [r7, #12]
 8004d56:	e7ff      	b.n	8004d58 <I2C_Master_ADDR+0x316>
 8004d58:	bf00      	nop
 8004d5a:	3744      	adds	r7, #68	; 0x44
 8004d5c:	46bd      	mov	sp, r7
 8004d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d62:	4770      	bx	lr

08004d64 <I2C_SlaveTransmit_TXE>:
 8004d64:	b580      	push	{r7, lr}
 8004d66:	b084      	sub	sp, #16
 8004d68:	af00      	add	r7, sp, #0
 8004d6a:	6078      	str	r0, [r7, #4]
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004d72:	73fb      	strb	r3, [r7, #15]
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004d78:	b29b      	uxth	r3, r3
 8004d7a:	2b00      	cmp	r3, #0
 8004d7c:	d02b      	beq.n	8004dd6 <I2C_SlaveTransmit_TXE+0x72>
 8004d7e:	687b      	ldr	r3, [r7, #4]
 8004d80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d82:	781a      	ldrb	r2, [r3, #0]
 8004d84:	687b      	ldr	r3, [r7, #4]
 8004d86:	681b      	ldr	r3, [r3, #0]
 8004d88:	611a      	str	r2, [r3, #16]
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d8e:	1c5a      	adds	r2, r3, #1
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	625a      	str	r2, [r3, #36]	; 0x24
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004d98:	b29b      	uxth	r3, r3
 8004d9a:	3b01      	subs	r3, #1
 8004d9c:	b29a      	uxth	r2, r3
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004da6:	b29b      	uxth	r3, r3
 8004da8:	2b00      	cmp	r3, #0
 8004daa:	d114      	bne.n	8004dd6 <I2C_SlaveTransmit_TXE+0x72>
 8004dac:	7bfb      	ldrb	r3, [r7, #15]
 8004dae:	2b29      	cmp	r3, #41	; 0x29
 8004db0:	d111      	bne.n	8004dd6 <I2C_SlaveTransmit_TXE+0x72>
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	685a      	ldr	r2, [r3, #4]
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004dc0:	605a      	str	r2, [r3, #4]
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	2221      	movs	r2, #33	; 0x21
 8004dc6:	631a      	str	r2, [r3, #48]	; 0x30
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	2228      	movs	r2, #40	; 0x28
 8004dcc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004dd0:	6878      	ldr	r0, [r7, #4]
 8004dd2:	f7ff f9e7 	bl	80041a4 <HAL_I2C_SlaveTxCpltCallback>
 8004dd6:	bf00      	nop
 8004dd8:	3710      	adds	r7, #16
 8004dda:	46bd      	mov	sp, r7
 8004ddc:	bd80      	pop	{r7, pc}

08004dde <I2C_SlaveTransmit_BTF>:
 8004dde:	b480      	push	{r7}
 8004de0:	b083      	sub	sp, #12
 8004de2:	af00      	add	r7, sp, #0
 8004de4:	6078      	str	r0, [r7, #4]
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004dea:	b29b      	uxth	r3, r3
 8004dec:	2b00      	cmp	r3, #0
 8004dee:	d011      	beq.n	8004e14 <I2C_SlaveTransmit_BTF+0x36>
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004df4:	781a      	ldrb	r2, [r3, #0]
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	681b      	ldr	r3, [r3, #0]
 8004dfa:	611a      	str	r2, [r3, #16]
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e00:	1c5a      	adds	r2, r3, #1
 8004e02:	687b      	ldr	r3, [r7, #4]
 8004e04:	625a      	str	r2, [r3, #36]	; 0x24
 8004e06:	687b      	ldr	r3, [r7, #4]
 8004e08:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e0a:	b29b      	uxth	r3, r3
 8004e0c:	3b01      	subs	r3, #1
 8004e0e:	b29a      	uxth	r2, r3
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004e14:	bf00      	nop
 8004e16:	370c      	adds	r7, #12
 8004e18:	46bd      	mov	sp, r7
 8004e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e1e:	4770      	bx	lr

08004e20 <I2C_SlaveReceive_RXNE>:
 8004e20:	b580      	push	{r7, lr}
 8004e22:	b084      	sub	sp, #16
 8004e24:	af00      	add	r7, sp, #0
 8004e26:	6078      	str	r0, [r7, #4]
 8004e28:	687b      	ldr	r3, [r7, #4]
 8004e2a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004e2e:	73fb      	strb	r3, [r7, #15]
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e34:	b29b      	uxth	r3, r3
 8004e36:	2b00      	cmp	r3, #0
 8004e38:	d02c      	beq.n	8004e94 <I2C_SlaveReceive_RXNE+0x74>
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	691a      	ldr	r2, [r3, #16]
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e44:	b2d2      	uxtb	r2, r2
 8004e46:	701a      	strb	r2, [r3, #0]
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e4c:	1c5a      	adds	r2, r3, #1
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	625a      	str	r2, [r3, #36]	; 0x24
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e56:	b29b      	uxth	r3, r3
 8004e58:	3b01      	subs	r3, #1
 8004e5a:	b29a      	uxth	r2, r3
 8004e5c:	687b      	ldr	r3, [r7, #4]
 8004e5e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e64:	b29b      	uxth	r3, r3
 8004e66:	2b00      	cmp	r3, #0
 8004e68:	d114      	bne.n	8004e94 <I2C_SlaveReceive_RXNE+0x74>
 8004e6a:	7bfb      	ldrb	r3, [r7, #15]
 8004e6c:	2b2a      	cmp	r3, #42	; 0x2a
 8004e6e:	d111      	bne.n	8004e94 <I2C_SlaveReceive_RXNE+0x74>
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	685a      	ldr	r2, [r3, #4]
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004e7e:	605a      	str	r2, [r3, #4]
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	2222      	movs	r2, #34	; 0x22
 8004e84:	631a      	str	r2, [r3, #48]	; 0x30
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	2228      	movs	r2, #40	; 0x28
 8004e8a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004e8e:	6878      	ldr	r0, [r7, #4]
 8004e90:	f7ff f992 	bl	80041b8 <HAL_I2C_SlaveRxCpltCallback>
 8004e94:	bf00      	nop
 8004e96:	3710      	adds	r7, #16
 8004e98:	46bd      	mov	sp, r7
 8004e9a:	bd80      	pop	{r7, pc}

08004e9c <I2C_SlaveReceive_BTF>:
 8004e9c:	b480      	push	{r7}
 8004e9e:	b083      	sub	sp, #12
 8004ea0:	af00      	add	r7, sp, #0
 8004ea2:	6078      	str	r0, [r7, #4]
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004ea8:	b29b      	uxth	r3, r3
 8004eaa:	2b00      	cmp	r3, #0
 8004eac:	d012      	beq.n	8004ed4 <I2C_SlaveReceive_BTF+0x38>
 8004eae:	687b      	ldr	r3, [r7, #4]
 8004eb0:	681b      	ldr	r3, [r3, #0]
 8004eb2:	691a      	ldr	r2, [r3, #16]
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004eb8:	b2d2      	uxtb	r2, r2
 8004eba:	701a      	strb	r2, [r3, #0]
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ec0:	1c5a      	adds	r2, r3, #1
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	625a      	str	r2, [r3, #36]	; 0x24
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004eca:	b29b      	uxth	r3, r3
 8004ecc:	3b01      	subs	r3, #1
 8004ece:	b29a      	uxth	r2, r3
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004ed4:	bf00      	nop
 8004ed6:	370c      	adds	r7, #12
 8004ed8:	46bd      	mov	sp, r7
 8004eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ede:	4770      	bx	lr

08004ee0 <I2C_Slave_ADDR>:
 8004ee0:	b580      	push	{r7, lr}
 8004ee2:	b084      	sub	sp, #16
 8004ee4:	af00      	add	r7, sp, #0
 8004ee6:	6078      	str	r0, [r7, #4]
 8004ee8:	6039      	str	r1, [r7, #0]
 8004eea:	2300      	movs	r3, #0
 8004eec:	73fb      	strb	r3, [r7, #15]
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004ef4:	b2db      	uxtb	r3, r3
 8004ef6:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8004efa:	2b28      	cmp	r3, #40	; 0x28
 8004efc:	d127      	bne.n	8004f4e <I2C_Slave_ADDR+0x6e>
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	681b      	ldr	r3, [r3, #0]
 8004f02:	685a      	ldr	r2, [r3, #4]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004f0c:	605a      	str	r2, [r3, #4]
 8004f0e:	683b      	ldr	r3, [r7, #0]
 8004f10:	089b      	lsrs	r3, r3, #2
 8004f12:	f003 0301 	and.w	r3, r3, #1
 8004f16:	2b00      	cmp	r3, #0
 8004f18:	d101      	bne.n	8004f1e <I2C_Slave_ADDR+0x3e>
 8004f1a:	2301      	movs	r3, #1
 8004f1c:	73fb      	strb	r3, [r7, #15]
 8004f1e:	683b      	ldr	r3, [r7, #0]
 8004f20:	09db      	lsrs	r3, r3, #7
 8004f22:	f003 0301 	and.w	r3, r3, #1
 8004f26:	2b00      	cmp	r3, #0
 8004f28:	d103      	bne.n	8004f32 <I2C_Slave_ADDR+0x52>
 8004f2a:	687b      	ldr	r3, [r7, #4]
 8004f2c:	68db      	ldr	r3, [r3, #12]
 8004f2e:	81bb      	strh	r3, [r7, #12]
 8004f30:	e002      	b.n	8004f38 <I2C_Slave_ADDR+0x58>
 8004f32:	687b      	ldr	r3, [r7, #4]
 8004f34:	699b      	ldr	r3, [r3, #24]
 8004f36:	81bb      	strh	r3, [r7, #12]
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	2200      	movs	r2, #0
 8004f3c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004f40:	89ba      	ldrh	r2, [r7, #12]
 8004f42:	7bfb      	ldrb	r3, [r7, #15]
 8004f44:	4619      	mov	r1, r3
 8004f46:	6878      	ldr	r0, [r7, #4]
 8004f48:	f7ff f940 	bl	80041cc <HAL_I2C_AddrCallback>
 8004f4c:	e00e      	b.n	8004f6c <I2C_Slave_ADDR+0x8c>
 8004f4e:	2300      	movs	r3, #0
 8004f50:	60bb      	str	r3, [r7, #8]
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	695b      	ldr	r3, [r3, #20]
 8004f58:	60bb      	str	r3, [r7, #8]
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	681b      	ldr	r3, [r3, #0]
 8004f5e:	699b      	ldr	r3, [r3, #24]
 8004f60:	60bb      	str	r3, [r7, #8]
 8004f62:	68bb      	ldr	r3, [r7, #8]
 8004f64:	687b      	ldr	r3, [r7, #4]
 8004f66:	2200      	movs	r2, #0
 8004f68:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004f6c:	bf00      	nop
 8004f6e:	3710      	adds	r7, #16
 8004f70:	46bd      	mov	sp, r7
 8004f72:	bd80      	pop	{r7, pc}

08004f74 <I2C_Slave_STOPF>:
 8004f74:	b580      	push	{r7, lr}
 8004f76:	b084      	sub	sp, #16
 8004f78:	af00      	add	r7, sp, #0
 8004f7a:	6078      	str	r0, [r7, #4]
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004f82:	73fb      	strb	r3, [r7, #15]
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	685a      	ldr	r2, [r3, #4]
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	681b      	ldr	r3, [r3, #0]
 8004f8e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8004f92:	605a      	str	r2, [r3, #4]
 8004f94:	2300      	movs	r3, #0
 8004f96:	60bb      	str	r3, [r7, #8]
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	681b      	ldr	r3, [r3, #0]
 8004f9c:	695b      	ldr	r3, [r3, #20]
 8004f9e:	60bb      	str	r3, [r7, #8]
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	681a      	ldr	r2, [r3, #0]
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	f042 0201 	orr.w	r2, r2, #1
 8004fae:	601a      	str	r2, [r3, #0]
 8004fb0:	68bb      	ldr	r3, [r7, #8]
 8004fb2:	687b      	ldr	r3, [r7, #4]
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	681a      	ldr	r2, [r3, #0]
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004fc0:	601a      	str	r2, [r3, #0]
 8004fc2:	687b      	ldr	r3, [r7, #4]
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	685b      	ldr	r3, [r3, #4]
 8004fc8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004fcc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004fd0:	d172      	bne.n	80050b8 <I2C_Slave_STOPF+0x144>
 8004fd2:	7bfb      	ldrb	r3, [r7, #15]
 8004fd4:	2b22      	cmp	r3, #34	; 0x22
 8004fd6:	d002      	beq.n	8004fde <I2C_Slave_STOPF+0x6a>
 8004fd8:	7bfb      	ldrb	r3, [r7, #15]
 8004fda:	2b2a      	cmp	r3, #42	; 0x2a
 8004fdc:	d135      	bne.n	800504a <I2C_Slave_STOPF+0xd6>
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	685b      	ldr	r3, [r3, #4]
 8004fe6:	b29a      	uxth	r2, r3
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004ff0:	b29b      	uxth	r3, r3
 8004ff2:	2b00      	cmp	r3, #0
 8004ff4:	d005      	beq.n	8005002 <I2C_Slave_STOPF+0x8e>
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ffa:	f043 0204 	orr.w	r2, r3, #4
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	641a      	str	r2, [r3, #64]	; 0x40
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	685a      	ldr	r2, [r3, #4]
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	681b      	ldr	r3, [r3, #0]
 800500c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005010:	605a      	str	r2, [r3, #4]
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005016:	4618      	mov	r0, r3
 8005018:	f7fe fb75 	bl	8003706 <HAL_DMA_GetState>
 800501c:	4603      	mov	r3, r0
 800501e:	2b01      	cmp	r3, #1
 8005020:	d049      	beq.n	80050b6 <I2C_Slave_STOPF+0x142>
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005026:	4a69      	ldr	r2, [pc, #420]	; (80051cc <I2C_Slave_STOPF+0x258>)
 8005028:	651a      	str	r2, [r3, #80]	; 0x50
 800502a:	687b      	ldr	r3, [r7, #4]
 800502c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800502e:	4618      	mov	r0, r3
 8005030:	f7fe fb47 	bl	80036c2 <HAL_DMA_Abort_IT>
 8005034:	4603      	mov	r3, r0
 8005036:	2b00      	cmp	r3, #0
 8005038:	d03d      	beq.n	80050b6 <I2C_Slave_STOPF+0x142>
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800503e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005040:	687a      	ldr	r2, [r7, #4]
 8005042:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8005044:	4610      	mov	r0, r2
 8005046:	4798      	blx	r3
 8005048:	e035      	b.n	80050b6 <I2C_Slave_STOPF+0x142>
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	685b      	ldr	r3, [r3, #4]
 8005052:	b29a      	uxth	r2, r3
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800505c:	b29b      	uxth	r3, r3
 800505e:	2b00      	cmp	r3, #0
 8005060:	d005      	beq.n	800506e <I2C_Slave_STOPF+0xfa>
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005066:	f043 0204 	orr.w	r2, r3, #4
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	641a      	str	r2, [r3, #64]	; 0x40
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	681b      	ldr	r3, [r3, #0]
 8005072:	685a      	ldr	r2, [r3, #4]
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800507c:	605a      	str	r2, [r3, #4]
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005082:	4618      	mov	r0, r3
 8005084:	f7fe fb3f 	bl	8003706 <HAL_DMA_GetState>
 8005088:	4603      	mov	r3, r0
 800508a:	2b01      	cmp	r3, #1
 800508c:	d014      	beq.n	80050b8 <I2C_Slave_STOPF+0x144>
 800508e:	687b      	ldr	r3, [r7, #4]
 8005090:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005092:	4a4e      	ldr	r2, [pc, #312]	; (80051cc <I2C_Slave_STOPF+0x258>)
 8005094:	651a      	str	r2, [r3, #80]	; 0x50
 8005096:	687b      	ldr	r3, [r7, #4]
 8005098:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800509a:	4618      	mov	r0, r3
 800509c:	f7fe fb11 	bl	80036c2 <HAL_DMA_Abort_IT>
 80050a0:	4603      	mov	r3, r0
 80050a2:	2b00      	cmp	r3, #0
 80050a4:	d008      	beq.n	80050b8 <I2C_Slave_STOPF+0x144>
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80050aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80050ac:	687a      	ldr	r2, [r7, #4]
 80050ae:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80050b0:	4610      	mov	r0, r2
 80050b2:	4798      	blx	r3
 80050b4:	e000      	b.n	80050b8 <I2C_Slave_STOPF+0x144>
 80050b6:	bf00      	nop
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80050bc:	b29b      	uxth	r3, r3
 80050be:	2b00      	cmp	r3, #0
 80050c0:	d03e      	beq.n	8005140 <I2C_Slave_STOPF+0x1cc>
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	695b      	ldr	r3, [r3, #20]
 80050c8:	f003 0304 	and.w	r3, r3, #4
 80050cc:	2b04      	cmp	r3, #4
 80050ce:	d112      	bne.n	80050f6 <I2C_Slave_STOPF+0x182>
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	691a      	ldr	r2, [r3, #16]
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050da:	b2d2      	uxtb	r2, r2
 80050dc:	701a      	strb	r2, [r3, #0]
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050e2:	1c5a      	adds	r2, r3, #1
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	625a      	str	r2, [r3, #36]	; 0x24
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80050ec:	b29b      	uxth	r3, r3
 80050ee:	3b01      	subs	r3, #1
 80050f0:	b29a      	uxth	r2, r3
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	855a      	strh	r2, [r3, #42]	; 0x2a
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	681b      	ldr	r3, [r3, #0]
 80050fa:	695b      	ldr	r3, [r3, #20]
 80050fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005100:	2b40      	cmp	r3, #64	; 0x40
 8005102:	d112      	bne.n	800512a <I2C_Slave_STOPF+0x1b6>
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	691a      	ldr	r2, [r3, #16]
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800510e:	b2d2      	uxtb	r2, r2
 8005110:	701a      	strb	r2, [r3, #0]
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005116:	1c5a      	adds	r2, r3, #1
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	625a      	str	r2, [r3, #36]	; 0x24
 800511c:	687b      	ldr	r3, [r7, #4]
 800511e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005120:	b29b      	uxth	r3, r3
 8005122:	3b01      	subs	r3, #1
 8005124:	b29a      	uxth	r2, r3
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	855a      	strh	r2, [r3, #42]	; 0x2a
 800512a:	687b      	ldr	r3, [r7, #4]
 800512c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800512e:	b29b      	uxth	r3, r3
 8005130:	2b00      	cmp	r3, #0
 8005132:	d005      	beq.n	8005140 <I2C_Slave_STOPF+0x1cc>
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005138:	f043 0204 	orr.w	r2, r3, #4
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	641a      	str	r2, [r3, #64]	; 0x40
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005144:	2b00      	cmp	r3, #0
 8005146:	d003      	beq.n	8005150 <I2C_Slave_STOPF+0x1dc>
 8005148:	6878      	ldr	r0, [r7, #4]
 800514a:	f000 f8b3 	bl	80052b4 <I2C_ITError>
 800514e:	e039      	b.n	80051c4 <I2C_Slave_STOPF+0x250>
 8005150:	7bfb      	ldrb	r3, [r7, #15]
 8005152:	2b2a      	cmp	r3, #42	; 0x2a
 8005154:	d109      	bne.n	800516a <I2C_Slave_STOPF+0x1f6>
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	2200      	movs	r2, #0
 800515a:	631a      	str	r2, [r3, #48]	; 0x30
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	2228      	movs	r2, #40	; 0x28
 8005160:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005164:	6878      	ldr	r0, [r7, #4]
 8005166:	f7ff f827 	bl	80041b8 <HAL_I2C_SlaveRxCpltCallback>
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005170:	b2db      	uxtb	r3, r3
 8005172:	2b28      	cmp	r3, #40	; 0x28
 8005174:	d111      	bne.n	800519a <I2C_Slave_STOPF+0x226>
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	4a15      	ldr	r2, [pc, #84]	; (80051d0 <I2C_Slave_STOPF+0x25c>)
 800517a:	62da      	str	r2, [r3, #44]	; 0x2c
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	2200      	movs	r2, #0
 8005180:	631a      	str	r2, [r3, #48]	; 0x30
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	2220      	movs	r2, #32
 8005186:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	2200      	movs	r2, #0
 800518e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005192:	6878      	ldr	r0, [r7, #4]
 8005194:	f7ff f828 	bl	80041e8 <HAL_I2C_ListenCpltCallback>
 8005198:	e014      	b.n	80051c4 <I2C_Slave_STOPF+0x250>
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800519e:	2b22      	cmp	r3, #34	; 0x22
 80051a0:	d002      	beq.n	80051a8 <I2C_Slave_STOPF+0x234>
 80051a2:	7bfb      	ldrb	r3, [r7, #15]
 80051a4:	2b22      	cmp	r3, #34	; 0x22
 80051a6:	d10d      	bne.n	80051c4 <I2C_Slave_STOPF+0x250>
 80051a8:	687b      	ldr	r3, [r7, #4]
 80051aa:	2200      	movs	r2, #0
 80051ac:	631a      	str	r2, [r3, #48]	; 0x30
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	2220      	movs	r2, #32
 80051b2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	2200      	movs	r2, #0
 80051ba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80051be:	6878      	ldr	r0, [r7, #4]
 80051c0:	f7fe fffa 	bl	80041b8 <HAL_I2C_SlaveRxCpltCallback>
 80051c4:	bf00      	nop
 80051c6:	3710      	adds	r7, #16
 80051c8:	46bd      	mov	sp, r7
 80051ca:	bd80      	pop	{r7, pc}
 80051cc:	08005519 	.word	0x08005519
 80051d0:	ffff0000 	.word	0xffff0000

080051d4 <I2C_Slave_AF>:
 80051d4:	b580      	push	{r7, lr}
 80051d6:	b084      	sub	sp, #16
 80051d8:	af00      	add	r7, sp, #0
 80051da:	6078      	str	r0, [r7, #4]
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80051e2:	73fb      	strb	r3, [r7, #15]
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80051e8:	60bb      	str	r3, [r7, #8]
 80051ea:	68bb      	ldr	r3, [r7, #8]
 80051ec:	2b08      	cmp	r3, #8
 80051ee:	d002      	beq.n	80051f6 <I2C_Slave_AF+0x22>
 80051f0:	68bb      	ldr	r3, [r7, #8]
 80051f2:	2b20      	cmp	r3, #32
 80051f4:	d129      	bne.n	800524a <I2C_Slave_AF+0x76>
 80051f6:	7bfb      	ldrb	r3, [r7, #15]
 80051f8:	2b28      	cmp	r3, #40	; 0x28
 80051fa:	d126      	bne.n	800524a <I2C_Slave_AF+0x76>
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	4a2c      	ldr	r2, [pc, #176]	; (80052b0 <I2C_Slave_AF+0xdc>)
 8005200:	62da      	str	r2, [r3, #44]	; 0x2c
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	685a      	ldr	r2, [r3, #4]
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005210:	605a      	str	r2, [r3, #4]
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800521a:	615a      	str	r2, [r3, #20]
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	681b      	ldr	r3, [r3, #0]
 8005220:	681a      	ldr	r2, [r3, #0]
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800522a:	601a      	str	r2, [r3, #0]
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	2200      	movs	r2, #0
 8005230:	631a      	str	r2, [r3, #48]	; 0x30
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	2220      	movs	r2, #32
 8005236:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	2200      	movs	r2, #0
 800523e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005242:	6878      	ldr	r0, [r7, #4]
 8005244:	f7fe ffd0 	bl	80041e8 <HAL_I2C_ListenCpltCallback>
 8005248:	e02e      	b.n	80052a8 <I2C_Slave_AF+0xd4>
 800524a:	7bfb      	ldrb	r3, [r7, #15]
 800524c:	2b21      	cmp	r3, #33	; 0x21
 800524e:	d126      	bne.n	800529e <I2C_Slave_AF+0xca>
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	4a17      	ldr	r2, [pc, #92]	; (80052b0 <I2C_Slave_AF+0xdc>)
 8005254:	62da      	str	r2, [r3, #44]	; 0x2c
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	2221      	movs	r2, #33	; 0x21
 800525a:	631a      	str	r2, [r3, #48]	; 0x30
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	2220      	movs	r2, #32
 8005260:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	2200      	movs	r2, #0
 8005268:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	681b      	ldr	r3, [r3, #0]
 8005270:	685a      	ldr	r2, [r3, #4]
 8005272:	687b      	ldr	r3, [r7, #4]
 8005274:	681b      	ldr	r3, [r3, #0]
 8005276:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800527a:	605a      	str	r2, [r3, #4]
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8005284:	615a      	str	r2, [r3, #20]
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	681a      	ldr	r2, [r3, #0]
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005294:	601a      	str	r2, [r3, #0]
 8005296:	6878      	ldr	r0, [r7, #4]
 8005298:	f7fe ff84 	bl	80041a4 <HAL_I2C_SlaveTxCpltCallback>
 800529c:	e004      	b.n	80052a8 <I2C_Slave_AF+0xd4>
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	681b      	ldr	r3, [r3, #0]
 80052a2:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80052a6:	615a      	str	r2, [r3, #20]
 80052a8:	bf00      	nop
 80052aa:	3710      	adds	r7, #16
 80052ac:	46bd      	mov	sp, r7
 80052ae:	bd80      	pop	{r7, pc}
 80052b0:	ffff0000 	.word	0xffff0000

080052b4 <I2C_ITError>:
 80052b4:	b580      	push	{r7, lr}
 80052b6:	b084      	sub	sp, #16
 80052b8:	af00      	add	r7, sp, #0
 80052ba:	6078      	str	r0, [r7, #4]
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80052c2:	73fb      	strb	r3, [r7, #15]
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80052ca:	73bb      	strb	r3, [r7, #14]
 80052cc:	7bbb      	ldrb	r3, [r7, #14]
 80052ce:	2b10      	cmp	r3, #16
 80052d0:	d002      	beq.n	80052d8 <I2C_ITError+0x24>
 80052d2:	7bbb      	ldrb	r3, [r7, #14]
 80052d4:	2b40      	cmp	r3, #64	; 0x40
 80052d6:	d10a      	bne.n	80052ee <I2C_ITError+0x3a>
 80052d8:	7bfb      	ldrb	r3, [r7, #15]
 80052da:	2b22      	cmp	r3, #34	; 0x22
 80052dc:	d107      	bne.n	80052ee <I2C_ITError+0x3a>
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	681a      	ldr	r2, [r3, #0]
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	681b      	ldr	r3, [r3, #0]
 80052e8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80052ec:	601a      	str	r2, [r3, #0]
 80052ee:	7bfb      	ldrb	r3, [r7, #15]
 80052f0:	f003 0328 	and.w	r3, r3, #40	; 0x28
 80052f4:	2b28      	cmp	r3, #40	; 0x28
 80052f6:	d107      	bne.n	8005308 <I2C_ITError+0x54>
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	2200      	movs	r2, #0
 80052fc:	631a      	str	r2, [r3, #48]	; 0x30
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	2228      	movs	r2, #40	; 0x28
 8005302:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005306:	e015      	b.n	8005334 <I2C_ITError+0x80>
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	685b      	ldr	r3, [r3, #4]
 800530e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8005312:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005316:	d00a      	beq.n	800532e <I2C_ITError+0x7a>
 8005318:	7bfb      	ldrb	r3, [r7, #15]
 800531a:	2b60      	cmp	r3, #96	; 0x60
 800531c:	d007      	beq.n	800532e <I2C_ITError+0x7a>
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	2220      	movs	r2, #32
 8005322:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	2200      	movs	r2, #0
 800532a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	2200      	movs	r2, #0
 8005332:	631a      	str	r2, [r3, #48]	; 0x30
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	685b      	ldr	r3, [r3, #4]
 800533a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800533e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005342:	d162      	bne.n	800540a <I2C_ITError+0x156>
 8005344:	687b      	ldr	r3, [r7, #4]
 8005346:	681b      	ldr	r3, [r3, #0]
 8005348:	685a      	ldr	r2, [r3, #4]
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	681b      	ldr	r3, [r3, #0]
 800534e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005352:	605a      	str	r2, [r3, #4]
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005358:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800535c:	b2db      	uxtb	r3, r3
 800535e:	2b01      	cmp	r3, #1
 8005360:	d020      	beq.n	80053a4 <I2C_ITError+0xf0>
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005366:	4a6a      	ldr	r2, [pc, #424]	; (8005510 <I2C_ITError+0x25c>)
 8005368:	651a      	str	r2, [r3, #80]	; 0x50
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800536e:	4618      	mov	r0, r3
 8005370:	f7fe f9a7 	bl	80036c2 <HAL_DMA_Abort_IT>
 8005374:	4603      	mov	r3, r0
 8005376:	2b00      	cmp	r3, #0
 8005378:	f000 8089 	beq.w	800548e <I2C_ITError+0x1da>
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	681a      	ldr	r2, [r3, #0]
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	f022 0201 	bic.w	r2, r2, #1
 800538a:	601a      	str	r2, [r3, #0]
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	2220      	movs	r2, #32
 8005390:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005398:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800539a:	687a      	ldr	r2, [r7, #4]
 800539c:	6b52      	ldr	r2, [r2, #52]	; 0x34
 800539e:	4610      	mov	r0, r2
 80053a0:	4798      	blx	r3
 80053a2:	e074      	b.n	800548e <I2C_ITError+0x1da>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80053a8:	4a59      	ldr	r2, [pc, #356]	; (8005510 <I2C_ITError+0x25c>)
 80053aa:	651a      	str	r2, [r3, #80]	; 0x50
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80053b0:	4618      	mov	r0, r3
 80053b2:	f7fe f986 	bl	80036c2 <HAL_DMA_Abort_IT>
 80053b6:	4603      	mov	r3, r0
 80053b8:	2b00      	cmp	r3, #0
 80053ba:	d068      	beq.n	800548e <I2C_ITError+0x1da>
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	681b      	ldr	r3, [r3, #0]
 80053c0:	695b      	ldr	r3, [r3, #20]
 80053c2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80053c6:	2b40      	cmp	r3, #64	; 0x40
 80053c8:	d10b      	bne.n	80053e2 <I2C_ITError+0x12e>
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	691a      	ldr	r2, [r3, #16]
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053d4:	b2d2      	uxtb	r2, r2
 80053d6:	701a      	strb	r2, [r3, #0]
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053dc:	1c5a      	adds	r2, r3, #1
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	625a      	str	r2, [r3, #36]	; 0x24
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	681a      	ldr	r2, [r3, #0]
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	681b      	ldr	r3, [r3, #0]
 80053ec:	f022 0201 	bic.w	r2, r2, #1
 80053f0:	601a      	str	r2, [r3, #0]
 80053f2:	687b      	ldr	r3, [r7, #4]
 80053f4:	2220      	movs	r2, #32
 80053f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80053fe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005400:	687a      	ldr	r2, [r7, #4]
 8005402:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8005404:	4610      	mov	r0, r2
 8005406:	4798      	blx	r3
 8005408:	e041      	b.n	800548e <I2C_ITError+0x1da>
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005410:	b2db      	uxtb	r3, r3
 8005412:	2b60      	cmp	r3, #96	; 0x60
 8005414:	d125      	bne.n	8005462 <I2C_ITError+0x1ae>
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	2220      	movs	r2, #32
 800541a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	2200      	movs	r2, #0
 8005422:	641a      	str	r2, [r3, #64]	; 0x40
 8005424:	687b      	ldr	r3, [r7, #4]
 8005426:	681b      	ldr	r3, [r3, #0]
 8005428:	695b      	ldr	r3, [r3, #20]
 800542a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800542e:	2b40      	cmp	r3, #64	; 0x40
 8005430:	d10b      	bne.n	800544a <I2C_ITError+0x196>
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	691a      	ldr	r2, [r3, #16]
 8005438:	687b      	ldr	r3, [r7, #4]
 800543a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800543c:	b2d2      	uxtb	r2, r2
 800543e:	701a      	strb	r2, [r3, #0]
 8005440:	687b      	ldr	r3, [r7, #4]
 8005442:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005444:	1c5a      	adds	r2, r3, #1
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	625a      	str	r2, [r3, #36]	; 0x24
 800544a:	687b      	ldr	r3, [r7, #4]
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	681a      	ldr	r2, [r3, #0]
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	681b      	ldr	r3, [r3, #0]
 8005454:	f022 0201 	bic.w	r2, r2, #1
 8005458:	601a      	str	r2, [r3, #0]
 800545a:	6878      	ldr	r0, [r7, #4]
 800545c:	f7fe feec 	bl	8004238 <HAL_I2C_AbortCpltCallback>
 8005460:	e015      	b.n	800548e <I2C_ITError+0x1da>
 8005462:	687b      	ldr	r3, [r7, #4]
 8005464:	681b      	ldr	r3, [r3, #0]
 8005466:	695b      	ldr	r3, [r3, #20]
 8005468:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800546c:	2b40      	cmp	r3, #64	; 0x40
 800546e:	d10b      	bne.n	8005488 <I2C_ITError+0x1d4>
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	681b      	ldr	r3, [r3, #0]
 8005474:	691a      	ldr	r2, [r3, #16]
 8005476:	687b      	ldr	r3, [r7, #4]
 8005478:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800547a:	b2d2      	uxtb	r2, r2
 800547c:	701a      	strb	r2, [r3, #0]
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005482:	1c5a      	adds	r2, r3, #1
 8005484:	687b      	ldr	r3, [r7, #4]
 8005486:	625a      	str	r2, [r3, #36]	; 0x24
 8005488:	6878      	ldr	r0, [r7, #4]
 800548a:	f7fe fecb 	bl	8004224 <HAL_I2C_ErrorCallback>
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005492:	60bb      	str	r3, [r7, #8]
 8005494:	68bb      	ldr	r3, [r7, #8]
 8005496:	f003 0301 	and.w	r3, r3, #1
 800549a:	2b00      	cmp	r3, #0
 800549c:	d10e      	bne.n	80054bc <I2C_ITError+0x208>
 800549e:	68bb      	ldr	r3, [r7, #8]
 80054a0:	f003 0302 	and.w	r3, r3, #2
 80054a4:	2b00      	cmp	r3, #0
 80054a6:	d109      	bne.n	80054bc <I2C_ITError+0x208>
 80054a8:	68bb      	ldr	r3, [r7, #8]
 80054aa:	f003 0304 	and.w	r3, r3, #4
 80054ae:	2b00      	cmp	r3, #0
 80054b0:	d104      	bne.n	80054bc <I2C_ITError+0x208>
 80054b2:	68bb      	ldr	r3, [r7, #8]
 80054b4:	f003 0308 	and.w	r3, r3, #8
 80054b8:	2b00      	cmp	r3, #0
 80054ba:	d007      	beq.n	80054cc <I2C_ITError+0x218>
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	685a      	ldr	r2, [r3, #4]
 80054c2:	687b      	ldr	r3, [r7, #4]
 80054c4:	681b      	ldr	r3, [r3, #0]
 80054c6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80054ca:	605a      	str	r2, [r3, #4]
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80054d2:	73fb      	strb	r3, [r7, #15]
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054d8:	f003 0304 	and.w	r3, r3, #4
 80054dc:	2b04      	cmp	r3, #4
 80054de:	d113      	bne.n	8005508 <I2C_ITError+0x254>
 80054e0:	7bfb      	ldrb	r3, [r7, #15]
 80054e2:	2b28      	cmp	r3, #40	; 0x28
 80054e4:	d110      	bne.n	8005508 <I2C_ITError+0x254>
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	4a0a      	ldr	r2, [pc, #40]	; (8005514 <I2C_ITError+0x260>)
 80054ea:	62da      	str	r2, [r3, #44]	; 0x2c
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	2200      	movs	r2, #0
 80054f0:	631a      	str	r2, [r3, #48]	; 0x30
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	2220      	movs	r2, #32
 80054f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	2200      	movs	r2, #0
 80054fe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005502:	6878      	ldr	r0, [r7, #4]
 8005504:	f7fe fe70 	bl	80041e8 <HAL_I2C_ListenCpltCallback>
 8005508:	bf00      	nop
 800550a:	3710      	adds	r7, #16
 800550c:	46bd      	mov	sp, r7
 800550e:	bd80      	pop	{r7, pc}
 8005510:	08005519 	.word	0x08005519
 8005514:	ffff0000 	.word	0xffff0000

08005518 <I2C_DMAAbort>:
 8005518:	b580      	push	{r7, lr}
 800551a:	b086      	sub	sp, #24
 800551c:	af00      	add	r7, sp, #0
 800551e:	6078      	str	r0, [r7, #4]
 8005520:	2300      	movs	r3, #0
 8005522:	60fb      	str	r3, [r7, #12]
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005528:	617b      	str	r3, [r7, #20]
 800552a:	697b      	ldr	r3, [r7, #20]
 800552c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005530:	74fb      	strb	r3, [r7, #19]
 8005532:	4b4b      	ldr	r3, [pc, #300]	; (8005660 <I2C_DMAAbort+0x148>)
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	08db      	lsrs	r3, r3, #3
 8005538:	4a4a      	ldr	r2, [pc, #296]	; (8005664 <I2C_DMAAbort+0x14c>)
 800553a:	fba2 2303 	umull	r2, r3, r2, r3
 800553e:	0a1a      	lsrs	r2, r3, #8
 8005540:	4613      	mov	r3, r2
 8005542:	009b      	lsls	r3, r3, #2
 8005544:	4413      	add	r3, r2
 8005546:	00da      	lsls	r2, r3, #3
 8005548:	1ad3      	subs	r3, r2, r3
 800554a:	60fb      	str	r3, [r7, #12]
 800554c:	68fb      	ldr	r3, [r7, #12]
 800554e:	2b00      	cmp	r3, #0
 8005550:	d106      	bne.n	8005560 <I2C_DMAAbort+0x48>
 8005552:	697b      	ldr	r3, [r7, #20]
 8005554:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005556:	f043 0220 	orr.w	r2, r3, #32
 800555a:	697b      	ldr	r3, [r7, #20]
 800555c:	641a      	str	r2, [r3, #64]	; 0x40
 800555e:	e00a      	b.n	8005576 <I2C_DMAAbort+0x5e>
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	3b01      	subs	r3, #1
 8005564:	60fb      	str	r3, [r7, #12]
 8005566:	697b      	ldr	r3, [r7, #20]
 8005568:	681b      	ldr	r3, [r3, #0]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005570:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005574:	d0ea      	beq.n	800554c <I2C_DMAAbort+0x34>
 8005576:	697b      	ldr	r3, [r7, #20]
 8005578:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800557a:	2b00      	cmp	r3, #0
 800557c:	d003      	beq.n	8005586 <I2C_DMAAbort+0x6e>
 800557e:	697b      	ldr	r3, [r7, #20]
 8005580:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005582:	2200      	movs	r2, #0
 8005584:	63da      	str	r2, [r3, #60]	; 0x3c
 8005586:	697b      	ldr	r3, [r7, #20]
 8005588:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800558a:	2b00      	cmp	r3, #0
 800558c:	d003      	beq.n	8005596 <I2C_DMAAbort+0x7e>
 800558e:	697b      	ldr	r3, [r7, #20]
 8005590:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005592:	2200      	movs	r2, #0
 8005594:	63da      	str	r2, [r3, #60]	; 0x3c
 8005596:	697b      	ldr	r3, [r7, #20]
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	681a      	ldr	r2, [r3, #0]
 800559c:	697b      	ldr	r3, [r7, #20]
 800559e:	681b      	ldr	r3, [r3, #0]
 80055a0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80055a4:	601a      	str	r2, [r3, #0]
 80055a6:	697b      	ldr	r3, [r7, #20]
 80055a8:	2200      	movs	r2, #0
 80055aa:	855a      	strh	r2, [r3, #42]	; 0x2a
 80055ac:	697b      	ldr	r3, [r7, #20]
 80055ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80055b0:	2b00      	cmp	r3, #0
 80055b2:	d003      	beq.n	80055bc <I2C_DMAAbort+0xa4>
 80055b4:	697b      	ldr	r3, [r7, #20]
 80055b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80055b8:	2200      	movs	r2, #0
 80055ba:	651a      	str	r2, [r3, #80]	; 0x50
 80055bc:	697b      	ldr	r3, [r7, #20]
 80055be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80055c0:	2b00      	cmp	r3, #0
 80055c2:	d003      	beq.n	80055cc <I2C_DMAAbort+0xb4>
 80055c4:	697b      	ldr	r3, [r7, #20]
 80055c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80055c8:	2200      	movs	r2, #0
 80055ca:	651a      	str	r2, [r3, #80]	; 0x50
 80055cc:	697b      	ldr	r3, [r7, #20]
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	681a      	ldr	r2, [r3, #0]
 80055d2:	697b      	ldr	r3, [r7, #20]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	f022 0201 	bic.w	r2, r2, #1
 80055da:	601a      	str	r2, [r3, #0]
 80055dc:	697b      	ldr	r3, [r7, #20]
 80055de:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80055e2:	b2db      	uxtb	r3, r3
 80055e4:	2b60      	cmp	r3, #96	; 0x60
 80055e6:	d10e      	bne.n	8005606 <I2C_DMAAbort+0xee>
 80055e8:	697b      	ldr	r3, [r7, #20]
 80055ea:	2220      	movs	r2, #32
 80055ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80055f0:	697b      	ldr	r3, [r7, #20]
 80055f2:	2200      	movs	r2, #0
 80055f4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80055f8:	697b      	ldr	r3, [r7, #20]
 80055fa:	2200      	movs	r2, #0
 80055fc:	641a      	str	r2, [r3, #64]	; 0x40
 80055fe:	6978      	ldr	r0, [r7, #20]
 8005600:	f7fe fe1a 	bl	8004238 <HAL_I2C_AbortCpltCallback>
 8005604:	e027      	b.n	8005656 <I2C_DMAAbort+0x13e>
 8005606:	7cfb      	ldrb	r3, [r7, #19]
 8005608:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800560c:	2b28      	cmp	r3, #40	; 0x28
 800560e:	d117      	bne.n	8005640 <I2C_DMAAbort+0x128>
 8005610:	697b      	ldr	r3, [r7, #20]
 8005612:	681b      	ldr	r3, [r3, #0]
 8005614:	681a      	ldr	r2, [r3, #0]
 8005616:	697b      	ldr	r3, [r7, #20]
 8005618:	681b      	ldr	r3, [r3, #0]
 800561a:	f042 0201 	orr.w	r2, r2, #1
 800561e:	601a      	str	r2, [r3, #0]
 8005620:	697b      	ldr	r3, [r7, #20]
 8005622:	681b      	ldr	r3, [r3, #0]
 8005624:	681a      	ldr	r2, [r3, #0]
 8005626:	697b      	ldr	r3, [r7, #20]
 8005628:	681b      	ldr	r3, [r3, #0]
 800562a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800562e:	601a      	str	r2, [r3, #0]
 8005630:	697b      	ldr	r3, [r7, #20]
 8005632:	2200      	movs	r2, #0
 8005634:	631a      	str	r2, [r3, #48]	; 0x30
 8005636:	697b      	ldr	r3, [r7, #20]
 8005638:	2228      	movs	r2, #40	; 0x28
 800563a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800563e:	e007      	b.n	8005650 <I2C_DMAAbort+0x138>
 8005640:	697b      	ldr	r3, [r7, #20]
 8005642:	2220      	movs	r2, #32
 8005644:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005648:	697b      	ldr	r3, [r7, #20]
 800564a:	2200      	movs	r2, #0
 800564c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005650:	6978      	ldr	r0, [r7, #20]
 8005652:	f7fe fde7 	bl	8004224 <HAL_I2C_ErrorCallback>
 8005656:	bf00      	nop
 8005658:	3718      	adds	r7, #24
 800565a:	46bd      	mov	sp, r7
 800565c:	bd80      	pop	{r7, pc}
 800565e:	bf00      	nop
 8005660:	20012c40 	.word	0x20012c40
 8005664:	14f8b589 	.word	0x14f8b589

08005668 <I2C_WaitOnSTOPRequestThroughIT>:
 8005668:	b480      	push	{r7}
 800566a:	b085      	sub	sp, #20
 800566c:	af00      	add	r7, sp, #0
 800566e:	6078      	str	r0, [r7, #4]
 8005670:	2300      	movs	r3, #0
 8005672:	60fb      	str	r3, [r7, #12]
 8005674:	4b13      	ldr	r3, [pc, #76]	; (80056c4 <I2C_WaitOnSTOPRequestThroughIT+0x5c>)
 8005676:	681b      	ldr	r3, [r3, #0]
 8005678:	08db      	lsrs	r3, r3, #3
 800567a:	4a13      	ldr	r2, [pc, #76]	; (80056c8 <I2C_WaitOnSTOPRequestThroughIT+0x60>)
 800567c:	fba2 2303 	umull	r2, r3, r2, r3
 8005680:	0a1a      	lsrs	r2, r3, #8
 8005682:	4613      	mov	r3, r2
 8005684:	009b      	lsls	r3, r3, #2
 8005686:	4413      	add	r3, r2
 8005688:	60fb      	str	r3, [r7, #12]
 800568a:	68fb      	ldr	r3, [r7, #12]
 800568c:	3b01      	subs	r3, #1
 800568e:	60fb      	str	r3, [r7, #12]
 8005690:	68fb      	ldr	r3, [r7, #12]
 8005692:	2b00      	cmp	r3, #0
 8005694:	d107      	bne.n	80056a6 <I2C_WaitOnSTOPRequestThroughIT+0x3e>
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800569a:	f043 0220 	orr.w	r2, r3, #32
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	641a      	str	r2, [r3, #64]	; 0x40
 80056a2:	2301      	movs	r3, #1
 80056a4:	e008      	b.n	80056b8 <I2C_WaitOnSTOPRequestThroughIT+0x50>
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	681b      	ldr	r3, [r3, #0]
 80056ac:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80056b0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80056b4:	d0e9      	beq.n	800568a <I2C_WaitOnSTOPRequestThroughIT+0x22>
 80056b6:	2300      	movs	r3, #0
 80056b8:	4618      	mov	r0, r3
 80056ba:	3714      	adds	r7, #20
 80056bc:	46bd      	mov	sp, r7
 80056be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056c2:	4770      	bx	lr
 80056c4:	20012c40 	.word	0x20012c40
 80056c8:	14f8b589 	.word	0x14f8b589

080056cc <I2C_ConvertOtherXferOptions>:
 80056cc:	b480      	push	{r7}
 80056ce:	b083      	sub	sp, #12
 80056d0:	af00      	add	r7, sp, #0
 80056d2:	6078      	str	r0, [r7, #4]
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80056d8:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 80056dc:	d103      	bne.n	80056e6 <I2C_ConvertOtherXferOptions+0x1a>
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	2201      	movs	r2, #1
 80056e2:	62da      	str	r2, [r3, #44]	; 0x2c
 80056e4:	e007      	b.n	80056f6 <I2C_ConvertOtherXferOptions+0x2a>
 80056e6:	687b      	ldr	r3, [r7, #4]
 80056e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80056ea:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 80056ee:	d102      	bne.n	80056f6 <I2C_ConvertOtherXferOptions+0x2a>
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	2208      	movs	r2, #8
 80056f4:	62da      	str	r2, [r3, #44]	; 0x2c
 80056f6:	bf00      	nop
 80056f8:	370c      	adds	r7, #12
 80056fa:	46bd      	mov	sp, r7
 80056fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005700:	4770      	bx	lr
	...

08005704 <HAL_RCC_ClockConfig>:
 8005704:	b580      	push	{r7, lr}
 8005706:	b084      	sub	sp, #16
 8005708:	af00      	add	r7, sp, #0
 800570a:	6078      	str	r0, [r7, #4]
 800570c:	6039      	str	r1, [r7, #0]
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	2b00      	cmp	r3, #0
 8005712:	d101      	bne.n	8005718 <HAL_RCC_ClockConfig+0x14>
 8005714:	2301      	movs	r3, #1
 8005716:	e0cc      	b.n	80058b2 <HAL_RCC_ClockConfig+0x1ae>
 8005718:	4b68      	ldr	r3, [pc, #416]	; (80058bc <HAL_RCC_ClockConfig+0x1b8>)
 800571a:	681b      	ldr	r3, [r3, #0]
 800571c:	f003 0307 	and.w	r3, r3, #7
 8005720:	683a      	ldr	r2, [r7, #0]
 8005722:	429a      	cmp	r2, r3
 8005724:	d90c      	bls.n	8005740 <HAL_RCC_ClockConfig+0x3c>
 8005726:	4b65      	ldr	r3, [pc, #404]	; (80058bc <HAL_RCC_ClockConfig+0x1b8>)
 8005728:	683a      	ldr	r2, [r7, #0]
 800572a:	b2d2      	uxtb	r2, r2
 800572c:	701a      	strb	r2, [r3, #0]
 800572e:	4b63      	ldr	r3, [pc, #396]	; (80058bc <HAL_RCC_ClockConfig+0x1b8>)
 8005730:	681b      	ldr	r3, [r3, #0]
 8005732:	f003 0307 	and.w	r3, r3, #7
 8005736:	683a      	ldr	r2, [r7, #0]
 8005738:	429a      	cmp	r2, r3
 800573a:	d001      	beq.n	8005740 <HAL_RCC_ClockConfig+0x3c>
 800573c:	2301      	movs	r3, #1
 800573e:	e0b8      	b.n	80058b2 <HAL_RCC_ClockConfig+0x1ae>
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	681b      	ldr	r3, [r3, #0]
 8005744:	f003 0302 	and.w	r3, r3, #2
 8005748:	2b00      	cmp	r3, #0
 800574a:	d020      	beq.n	800578e <HAL_RCC_ClockConfig+0x8a>
 800574c:	687b      	ldr	r3, [r7, #4]
 800574e:	681b      	ldr	r3, [r3, #0]
 8005750:	f003 0304 	and.w	r3, r3, #4
 8005754:	2b00      	cmp	r3, #0
 8005756:	d005      	beq.n	8005764 <HAL_RCC_ClockConfig+0x60>
 8005758:	4b59      	ldr	r3, [pc, #356]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 800575a:	689b      	ldr	r3, [r3, #8]
 800575c:	4a58      	ldr	r2, [pc, #352]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 800575e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8005762:	6093      	str	r3, [r2, #8]
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	681b      	ldr	r3, [r3, #0]
 8005768:	f003 0308 	and.w	r3, r3, #8
 800576c:	2b00      	cmp	r3, #0
 800576e:	d005      	beq.n	800577c <HAL_RCC_ClockConfig+0x78>
 8005770:	4b53      	ldr	r3, [pc, #332]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 8005772:	689b      	ldr	r3, [r3, #8]
 8005774:	4a52      	ldr	r2, [pc, #328]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 8005776:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800577a:	6093      	str	r3, [r2, #8]
 800577c:	4b50      	ldr	r3, [pc, #320]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 800577e:	689b      	ldr	r3, [r3, #8]
 8005780:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	689b      	ldr	r3, [r3, #8]
 8005788:	494d      	ldr	r1, [pc, #308]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 800578a:	4313      	orrs	r3, r2
 800578c:	608b      	str	r3, [r1, #8]
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	681b      	ldr	r3, [r3, #0]
 8005792:	f003 0301 	and.w	r3, r3, #1
 8005796:	2b00      	cmp	r3, #0
 8005798:	d044      	beq.n	8005824 <HAL_RCC_ClockConfig+0x120>
 800579a:	687b      	ldr	r3, [r7, #4]
 800579c:	685b      	ldr	r3, [r3, #4]
 800579e:	2b01      	cmp	r3, #1
 80057a0:	d107      	bne.n	80057b2 <HAL_RCC_ClockConfig+0xae>
 80057a2:	4b47      	ldr	r3, [pc, #284]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 80057a4:	681b      	ldr	r3, [r3, #0]
 80057a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80057aa:	2b00      	cmp	r3, #0
 80057ac:	d119      	bne.n	80057e2 <HAL_RCC_ClockConfig+0xde>
 80057ae:	2301      	movs	r3, #1
 80057b0:	e07f      	b.n	80058b2 <HAL_RCC_ClockConfig+0x1ae>
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	685b      	ldr	r3, [r3, #4]
 80057b6:	2b02      	cmp	r3, #2
 80057b8:	d003      	beq.n	80057c2 <HAL_RCC_ClockConfig+0xbe>
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	685b      	ldr	r3, [r3, #4]
 80057be:	2b03      	cmp	r3, #3
 80057c0:	d107      	bne.n	80057d2 <HAL_RCC_ClockConfig+0xce>
 80057c2:	4b3f      	ldr	r3, [pc, #252]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80057ca:	2b00      	cmp	r3, #0
 80057cc:	d109      	bne.n	80057e2 <HAL_RCC_ClockConfig+0xde>
 80057ce:	2301      	movs	r3, #1
 80057d0:	e06f      	b.n	80058b2 <HAL_RCC_ClockConfig+0x1ae>
 80057d2:	4b3b      	ldr	r3, [pc, #236]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 80057d4:	681b      	ldr	r3, [r3, #0]
 80057d6:	f003 0302 	and.w	r3, r3, #2
 80057da:	2b00      	cmp	r3, #0
 80057dc:	d101      	bne.n	80057e2 <HAL_RCC_ClockConfig+0xde>
 80057de:	2301      	movs	r3, #1
 80057e0:	e067      	b.n	80058b2 <HAL_RCC_ClockConfig+0x1ae>
 80057e2:	4b37      	ldr	r3, [pc, #220]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 80057e4:	689b      	ldr	r3, [r3, #8]
 80057e6:	f023 0203 	bic.w	r2, r3, #3
 80057ea:	687b      	ldr	r3, [r7, #4]
 80057ec:	685b      	ldr	r3, [r3, #4]
 80057ee:	4934      	ldr	r1, [pc, #208]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 80057f0:	4313      	orrs	r3, r2
 80057f2:	608b      	str	r3, [r1, #8]
 80057f4:	f7fc ff0e 	bl	8002614 <HAL_GetTick>
 80057f8:	60f8      	str	r0, [r7, #12]
 80057fa:	e00a      	b.n	8005812 <HAL_RCC_ClockConfig+0x10e>
 80057fc:	f7fc ff0a 	bl	8002614 <HAL_GetTick>
 8005800:	4602      	mov	r2, r0
 8005802:	68fb      	ldr	r3, [r7, #12]
 8005804:	1ad3      	subs	r3, r2, r3
 8005806:	f241 3288 	movw	r2, #5000	; 0x1388
 800580a:	4293      	cmp	r3, r2
 800580c:	d901      	bls.n	8005812 <HAL_RCC_ClockConfig+0x10e>
 800580e:	2303      	movs	r3, #3
 8005810:	e04f      	b.n	80058b2 <HAL_RCC_ClockConfig+0x1ae>
 8005812:	4b2b      	ldr	r3, [pc, #172]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 8005814:	689b      	ldr	r3, [r3, #8]
 8005816:	f003 020c 	and.w	r2, r3, #12
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	685b      	ldr	r3, [r3, #4]
 800581e:	009b      	lsls	r3, r3, #2
 8005820:	429a      	cmp	r2, r3
 8005822:	d1eb      	bne.n	80057fc <HAL_RCC_ClockConfig+0xf8>
 8005824:	4b25      	ldr	r3, [pc, #148]	; (80058bc <HAL_RCC_ClockConfig+0x1b8>)
 8005826:	681b      	ldr	r3, [r3, #0]
 8005828:	f003 0307 	and.w	r3, r3, #7
 800582c:	683a      	ldr	r2, [r7, #0]
 800582e:	429a      	cmp	r2, r3
 8005830:	d20c      	bcs.n	800584c <HAL_RCC_ClockConfig+0x148>
 8005832:	4b22      	ldr	r3, [pc, #136]	; (80058bc <HAL_RCC_ClockConfig+0x1b8>)
 8005834:	683a      	ldr	r2, [r7, #0]
 8005836:	b2d2      	uxtb	r2, r2
 8005838:	701a      	strb	r2, [r3, #0]
 800583a:	4b20      	ldr	r3, [pc, #128]	; (80058bc <HAL_RCC_ClockConfig+0x1b8>)
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	f003 0307 	and.w	r3, r3, #7
 8005842:	683a      	ldr	r2, [r7, #0]
 8005844:	429a      	cmp	r2, r3
 8005846:	d001      	beq.n	800584c <HAL_RCC_ClockConfig+0x148>
 8005848:	2301      	movs	r3, #1
 800584a:	e032      	b.n	80058b2 <HAL_RCC_ClockConfig+0x1ae>
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	681b      	ldr	r3, [r3, #0]
 8005850:	f003 0304 	and.w	r3, r3, #4
 8005854:	2b00      	cmp	r3, #0
 8005856:	d008      	beq.n	800586a <HAL_RCC_ClockConfig+0x166>
 8005858:	4b19      	ldr	r3, [pc, #100]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 800585a:	689b      	ldr	r3, [r3, #8]
 800585c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005860:	687b      	ldr	r3, [r7, #4]
 8005862:	68db      	ldr	r3, [r3, #12]
 8005864:	4916      	ldr	r1, [pc, #88]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 8005866:	4313      	orrs	r3, r2
 8005868:	608b      	str	r3, [r1, #8]
 800586a:	687b      	ldr	r3, [r7, #4]
 800586c:	681b      	ldr	r3, [r3, #0]
 800586e:	f003 0308 	and.w	r3, r3, #8
 8005872:	2b00      	cmp	r3, #0
 8005874:	d009      	beq.n	800588a <HAL_RCC_ClockConfig+0x186>
 8005876:	4b12      	ldr	r3, [pc, #72]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 8005878:	689b      	ldr	r3, [r3, #8]
 800587a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	691b      	ldr	r3, [r3, #16]
 8005882:	00db      	lsls	r3, r3, #3
 8005884:	490e      	ldr	r1, [pc, #56]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 8005886:	4313      	orrs	r3, r2
 8005888:	608b      	str	r3, [r1, #8]
 800588a:	f000 f821 	bl	80058d0 <HAL_RCC_GetSysClockFreq>
 800588e:	4602      	mov	r2, r0
 8005890:	4b0b      	ldr	r3, [pc, #44]	; (80058c0 <HAL_RCC_ClockConfig+0x1bc>)
 8005892:	689b      	ldr	r3, [r3, #8]
 8005894:	091b      	lsrs	r3, r3, #4
 8005896:	f003 030f 	and.w	r3, r3, #15
 800589a:	490a      	ldr	r1, [pc, #40]	; (80058c4 <HAL_RCC_ClockConfig+0x1c0>)
 800589c:	5ccb      	ldrb	r3, [r1, r3]
 800589e:	fa22 f303 	lsr.w	r3, r2, r3
 80058a2:	4a09      	ldr	r2, [pc, #36]	; (80058c8 <HAL_RCC_ClockConfig+0x1c4>)
 80058a4:	6013      	str	r3, [r2, #0]
 80058a6:	4b09      	ldr	r3, [pc, #36]	; (80058cc <HAL_RCC_ClockConfig+0x1c8>)
 80058a8:	681b      	ldr	r3, [r3, #0]
 80058aa:	4618      	mov	r0, r3
 80058ac:	f7fc fe6e 	bl	800258c <HAL_InitTick>
 80058b0:	2300      	movs	r3, #0
 80058b2:	4618      	mov	r0, r3
 80058b4:	3710      	adds	r7, #16
 80058b6:	46bd      	mov	sp, r7
 80058b8:	bd80      	pop	{r7, pc}
 80058ba:	bf00      	nop
 80058bc:	40023c00 	.word	0x40023c00
 80058c0:	40023800 	.word	0x40023800
 80058c4:	08007be4 	.word	0x08007be4
 80058c8:	20012c40 	.word	0x20012c40
 80058cc:	20012c54 	.word	0x20012c54

080058d0 <HAL_RCC_GetSysClockFreq>:
 80058d0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80058d4:	b094      	sub	sp, #80	; 0x50
 80058d6:	af00      	add	r7, sp, #0
 80058d8:	2300      	movs	r3, #0
 80058da:	647b      	str	r3, [r7, #68]	; 0x44
 80058dc:	2300      	movs	r3, #0
 80058de:	64fb      	str	r3, [r7, #76]	; 0x4c
 80058e0:	2300      	movs	r3, #0
 80058e2:	643b      	str	r3, [r7, #64]	; 0x40
 80058e4:	2300      	movs	r3, #0
 80058e6:	64bb      	str	r3, [r7, #72]	; 0x48
 80058e8:	4b79      	ldr	r3, [pc, #484]	; (8005ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 80058ea:	689b      	ldr	r3, [r3, #8]
 80058ec:	f003 030c 	and.w	r3, r3, #12
 80058f0:	2b08      	cmp	r3, #8
 80058f2:	d00d      	beq.n	8005910 <HAL_RCC_GetSysClockFreq+0x40>
 80058f4:	2b08      	cmp	r3, #8
 80058f6:	f200 80e1 	bhi.w	8005abc <HAL_RCC_GetSysClockFreq+0x1ec>
 80058fa:	2b00      	cmp	r3, #0
 80058fc:	d002      	beq.n	8005904 <HAL_RCC_GetSysClockFreq+0x34>
 80058fe:	2b04      	cmp	r3, #4
 8005900:	d003      	beq.n	800590a <HAL_RCC_GetSysClockFreq+0x3a>
 8005902:	e0db      	b.n	8005abc <HAL_RCC_GetSysClockFreq+0x1ec>
 8005904:	4b73      	ldr	r3, [pc, #460]	; (8005ad4 <HAL_RCC_GetSysClockFreq+0x204>)
 8005906:	64bb      	str	r3, [r7, #72]	; 0x48
 8005908:	e0db      	b.n	8005ac2 <HAL_RCC_GetSysClockFreq+0x1f2>
 800590a:	4b73      	ldr	r3, [pc, #460]	; (8005ad8 <HAL_RCC_GetSysClockFreq+0x208>)
 800590c:	64bb      	str	r3, [r7, #72]	; 0x48
 800590e:	e0d8      	b.n	8005ac2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8005910:	4b6f      	ldr	r3, [pc, #444]	; (8005ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 8005912:	685b      	ldr	r3, [r3, #4]
 8005914:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005918:	647b      	str	r3, [r7, #68]	; 0x44
 800591a:	4b6d      	ldr	r3, [pc, #436]	; (8005ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 800591c:	685b      	ldr	r3, [r3, #4]
 800591e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005922:	2b00      	cmp	r3, #0
 8005924:	d063      	beq.n	80059ee <HAL_RCC_GetSysClockFreq+0x11e>
 8005926:	4b6a      	ldr	r3, [pc, #424]	; (8005ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 8005928:	685b      	ldr	r3, [r3, #4]
 800592a:	099b      	lsrs	r3, r3, #6
 800592c:	2200      	movs	r2, #0
 800592e:	63bb      	str	r3, [r7, #56]	; 0x38
 8005930:	63fa      	str	r2, [r7, #60]	; 0x3c
 8005932:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005934:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005938:	633b      	str	r3, [r7, #48]	; 0x30
 800593a:	2300      	movs	r3, #0
 800593c:	637b      	str	r3, [r7, #52]	; 0x34
 800593e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8005942:	4622      	mov	r2, r4
 8005944:	462b      	mov	r3, r5
 8005946:	f04f 0000 	mov.w	r0, #0
 800594a:	f04f 0100 	mov.w	r1, #0
 800594e:	0159      	lsls	r1, r3, #5
 8005950:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005954:	0150      	lsls	r0, r2, #5
 8005956:	4602      	mov	r2, r0
 8005958:	460b      	mov	r3, r1
 800595a:	4621      	mov	r1, r4
 800595c:	1a51      	subs	r1, r2, r1
 800595e:	6139      	str	r1, [r7, #16]
 8005960:	4629      	mov	r1, r5
 8005962:	eb63 0301 	sbc.w	r3, r3, r1
 8005966:	617b      	str	r3, [r7, #20]
 8005968:	f04f 0200 	mov.w	r2, #0
 800596c:	f04f 0300 	mov.w	r3, #0
 8005970:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8005974:	4659      	mov	r1, fp
 8005976:	018b      	lsls	r3, r1, #6
 8005978:	4651      	mov	r1, sl
 800597a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800597e:	4651      	mov	r1, sl
 8005980:	018a      	lsls	r2, r1, #6
 8005982:	4651      	mov	r1, sl
 8005984:	ebb2 0801 	subs.w	r8, r2, r1
 8005988:	4659      	mov	r1, fp
 800598a:	eb63 0901 	sbc.w	r9, r3, r1
 800598e:	f04f 0200 	mov.w	r2, #0
 8005992:	f04f 0300 	mov.w	r3, #0
 8005996:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800599a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800599e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80059a2:	4690      	mov	r8, r2
 80059a4:	4699      	mov	r9, r3
 80059a6:	4623      	mov	r3, r4
 80059a8:	eb18 0303 	adds.w	r3, r8, r3
 80059ac:	60bb      	str	r3, [r7, #8]
 80059ae:	462b      	mov	r3, r5
 80059b0:	eb49 0303 	adc.w	r3, r9, r3
 80059b4:	60fb      	str	r3, [r7, #12]
 80059b6:	f04f 0200 	mov.w	r2, #0
 80059ba:	f04f 0300 	mov.w	r3, #0
 80059be:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80059c2:	4629      	mov	r1, r5
 80059c4:	024b      	lsls	r3, r1, #9
 80059c6:	4621      	mov	r1, r4
 80059c8:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80059cc:	4621      	mov	r1, r4
 80059ce:	024a      	lsls	r2, r1, #9
 80059d0:	4610      	mov	r0, r2
 80059d2:	4619      	mov	r1, r3
 80059d4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80059d6:	2200      	movs	r2, #0
 80059d8:	62bb      	str	r3, [r7, #40]	; 0x28
 80059da:	62fa      	str	r2, [r7, #44]	; 0x2c
 80059dc:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80059e0:	f7fa fc10 	bl	8000204 <__aeabi_uldivmod>
 80059e4:	4602      	mov	r2, r0
 80059e6:	460b      	mov	r3, r1
 80059e8:	4613      	mov	r3, r2
 80059ea:	64fb      	str	r3, [r7, #76]	; 0x4c
 80059ec:	e058      	b.n	8005aa0 <HAL_RCC_GetSysClockFreq+0x1d0>
 80059ee:	4b38      	ldr	r3, [pc, #224]	; (8005ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 80059f0:	685b      	ldr	r3, [r3, #4]
 80059f2:	099b      	lsrs	r3, r3, #6
 80059f4:	2200      	movs	r2, #0
 80059f6:	4618      	mov	r0, r3
 80059f8:	4611      	mov	r1, r2
 80059fa:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80059fe:	623b      	str	r3, [r7, #32]
 8005a00:	2300      	movs	r3, #0
 8005a02:	627b      	str	r3, [r7, #36]	; 0x24
 8005a04:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005a08:	4642      	mov	r2, r8
 8005a0a:	464b      	mov	r3, r9
 8005a0c:	f04f 0000 	mov.w	r0, #0
 8005a10:	f04f 0100 	mov.w	r1, #0
 8005a14:	0159      	lsls	r1, r3, #5
 8005a16:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005a1a:	0150      	lsls	r0, r2, #5
 8005a1c:	4602      	mov	r2, r0
 8005a1e:	460b      	mov	r3, r1
 8005a20:	4641      	mov	r1, r8
 8005a22:	ebb2 0a01 	subs.w	sl, r2, r1
 8005a26:	4649      	mov	r1, r9
 8005a28:	eb63 0b01 	sbc.w	fp, r3, r1
 8005a2c:	f04f 0200 	mov.w	r2, #0
 8005a30:	f04f 0300 	mov.w	r3, #0
 8005a34:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005a38:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8005a3c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8005a40:	ebb2 040a 	subs.w	r4, r2, sl
 8005a44:	eb63 050b 	sbc.w	r5, r3, fp
 8005a48:	f04f 0200 	mov.w	r2, #0
 8005a4c:	f04f 0300 	mov.w	r3, #0
 8005a50:	00eb      	lsls	r3, r5, #3
 8005a52:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8005a56:	00e2      	lsls	r2, r4, #3
 8005a58:	4614      	mov	r4, r2
 8005a5a:	461d      	mov	r5, r3
 8005a5c:	4643      	mov	r3, r8
 8005a5e:	18e3      	adds	r3, r4, r3
 8005a60:	603b      	str	r3, [r7, #0]
 8005a62:	464b      	mov	r3, r9
 8005a64:	eb45 0303 	adc.w	r3, r5, r3
 8005a68:	607b      	str	r3, [r7, #4]
 8005a6a:	f04f 0200 	mov.w	r2, #0
 8005a6e:	f04f 0300 	mov.w	r3, #0
 8005a72:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005a76:	4629      	mov	r1, r5
 8005a78:	028b      	lsls	r3, r1, #10
 8005a7a:	4621      	mov	r1, r4
 8005a7c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005a80:	4621      	mov	r1, r4
 8005a82:	028a      	lsls	r2, r1, #10
 8005a84:	4610      	mov	r0, r2
 8005a86:	4619      	mov	r1, r3
 8005a88:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005a8a:	2200      	movs	r2, #0
 8005a8c:	61bb      	str	r3, [r7, #24]
 8005a8e:	61fa      	str	r2, [r7, #28]
 8005a90:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005a94:	f7fa fbb6 	bl	8000204 <__aeabi_uldivmod>
 8005a98:	4602      	mov	r2, r0
 8005a9a:	460b      	mov	r3, r1
 8005a9c:	4613      	mov	r3, r2
 8005a9e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005aa0:	4b0b      	ldr	r3, [pc, #44]	; (8005ad0 <HAL_RCC_GetSysClockFreq+0x200>)
 8005aa2:	685b      	ldr	r3, [r3, #4]
 8005aa4:	0c1b      	lsrs	r3, r3, #16
 8005aa6:	f003 0303 	and.w	r3, r3, #3
 8005aaa:	3301      	adds	r3, #1
 8005aac:	005b      	lsls	r3, r3, #1
 8005aae:	643b      	str	r3, [r7, #64]	; 0x40
 8005ab0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8005ab2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005ab4:	fbb2 f3f3 	udiv	r3, r2, r3
 8005ab8:	64bb      	str	r3, [r7, #72]	; 0x48
 8005aba:	e002      	b.n	8005ac2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8005abc:	4b05      	ldr	r3, [pc, #20]	; (8005ad4 <HAL_RCC_GetSysClockFreq+0x204>)
 8005abe:	64bb      	str	r3, [r7, #72]	; 0x48
 8005ac0:	bf00      	nop
 8005ac2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005ac4:	4618      	mov	r0, r3
 8005ac6:	3750      	adds	r7, #80	; 0x50
 8005ac8:	46bd      	mov	sp, r7
 8005aca:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005ace:	bf00      	nop
 8005ad0:	40023800 	.word	0x40023800
 8005ad4:	00f42400 	.word	0x00f42400
 8005ad8:	007a1200 	.word	0x007a1200

08005adc <HAL_RCC_GetHCLKFreq>:
 8005adc:	b480      	push	{r7}
 8005ade:	af00      	add	r7, sp, #0
 8005ae0:	4b03      	ldr	r3, [pc, #12]	; (8005af0 <HAL_RCC_GetHCLKFreq+0x14>)
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	4618      	mov	r0, r3
 8005ae6:	46bd      	mov	sp, r7
 8005ae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aec:	4770      	bx	lr
 8005aee:	bf00      	nop
 8005af0:	20012c40 	.word	0x20012c40

08005af4 <HAL_RCC_GetPCLK1Freq>:
 8005af4:	b580      	push	{r7, lr}
 8005af6:	af00      	add	r7, sp, #0
 8005af8:	f7ff fff0 	bl	8005adc <HAL_RCC_GetHCLKFreq>
 8005afc:	4602      	mov	r2, r0
 8005afe:	4b05      	ldr	r3, [pc, #20]	; (8005b14 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005b00:	689b      	ldr	r3, [r3, #8]
 8005b02:	0a9b      	lsrs	r3, r3, #10
 8005b04:	f003 0307 	and.w	r3, r3, #7
 8005b08:	4903      	ldr	r1, [pc, #12]	; (8005b18 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005b0a:	5ccb      	ldrb	r3, [r1, r3]
 8005b0c:	fa22 f303 	lsr.w	r3, r2, r3
 8005b10:	4618      	mov	r0, r3
 8005b12:	bd80      	pop	{r7, pc}
 8005b14:	40023800 	.word	0x40023800
 8005b18:	08007bf4 	.word	0x08007bf4

08005b1c <HAL_RCC_OscConfig>:
 8005b1c:	b580      	push	{r7, lr}
 8005b1e:	b086      	sub	sp, #24
 8005b20:	af00      	add	r7, sp, #0
 8005b22:	6078      	str	r0, [r7, #4]
 8005b24:	687b      	ldr	r3, [r7, #4]
 8005b26:	2b00      	cmp	r3, #0
 8005b28:	d101      	bne.n	8005b2e <HAL_RCC_OscConfig+0x12>
 8005b2a:	2301      	movs	r3, #1
 8005b2c:	e273      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	f003 0301 	and.w	r3, r3, #1
 8005b36:	2b00      	cmp	r3, #0
 8005b38:	d075      	beq.n	8005c26 <HAL_RCC_OscConfig+0x10a>
 8005b3a:	4b88      	ldr	r3, [pc, #544]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005b3c:	689b      	ldr	r3, [r3, #8]
 8005b3e:	f003 030c 	and.w	r3, r3, #12
 8005b42:	2b04      	cmp	r3, #4
 8005b44:	d00c      	beq.n	8005b60 <HAL_RCC_OscConfig+0x44>
 8005b46:	4b85      	ldr	r3, [pc, #532]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005b48:	689b      	ldr	r3, [r3, #8]
 8005b4a:	f003 030c 	and.w	r3, r3, #12
 8005b4e:	2b08      	cmp	r3, #8
 8005b50:	d112      	bne.n	8005b78 <HAL_RCC_OscConfig+0x5c>
 8005b52:	4b82      	ldr	r3, [pc, #520]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005b54:	685b      	ldr	r3, [r3, #4]
 8005b56:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005b5a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005b5e:	d10b      	bne.n	8005b78 <HAL_RCC_OscConfig+0x5c>
 8005b60:	4b7e      	ldr	r3, [pc, #504]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005b68:	2b00      	cmp	r3, #0
 8005b6a:	d05b      	beq.n	8005c24 <HAL_RCC_OscConfig+0x108>
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	685b      	ldr	r3, [r3, #4]
 8005b70:	2b00      	cmp	r3, #0
 8005b72:	d157      	bne.n	8005c24 <HAL_RCC_OscConfig+0x108>
 8005b74:	2301      	movs	r3, #1
 8005b76:	e24e      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	685b      	ldr	r3, [r3, #4]
 8005b7c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005b80:	d106      	bne.n	8005b90 <HAL_RCC_OscConfig+0x74>
 8005b82:	4b76      	ldr	r3, [pc, #472]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005b84:	681b      	ldr	r3, [r3, #0]
 8005b86:	4a75      	ldr	r2, [pc, #468]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005b88:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005b8c:	6013      	str	r3, [r2, #0]
 8005b8e:	e01d      	b.n	8005bcc <HAL_RCC_OscConfig+0xb0>
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	685b      	ldr	r3, [r3, #4]
 8005b94:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005b98:	d10c      	bne.n	8005bb4 <HAL_RCC_OscConfig+0x98>
 8005b9a:	4b70      	ldr	r3, [pc, #448]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005b9c:	681b      	ldr	r3, [r3, #0]
 8005b9e:	4a6f      	ldr	r2, [pc, #444]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005ba0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005ba4:	6013      	str	r3, [r2, #0]
 8005ba6:	4b6d      	ldr	r3, [pc, #436]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005ba8:	681b      	ldr	r3, [r3, #0]
 8005baa:	4a6c      	ldr	r2, [pc, #432]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005bac:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005bb0:	6013      	str	r3, [r2, #0]
 8005bb2:	e00b      	b.n	8005bcc <HAL_RCC_OscConfig+0xb0>
 8005bb4:	4b69      	ldr	r3, [pc, #420]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005bb6:	681b      	ldr	r3, [r3, #0]
 8005bb8:	4a68      	ldr	r2, [pc, #416]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005bba:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005bbe:	6013      	str	r3, [r2, #0]
 8005bc0:	4b66      	ldr	r3, [pc, #408]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005bc2:	681b      	ldr	r3, [r3, #0]
 8005bc4:	4a65      	ldr	r2, [pc, #404]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005bc6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005bca:	6013      	str	r3, [r2, #0]
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	685b      	ldr	r3, [r3, #4]
 8005bd0:	2b00      	cmp	r3, #0
 8005bd2:	d013      	beq.n	8005bfc <HAL_RCC_OscConfig+0xe0>
 8005bd4:	f7fc fd1e 	bl	8002614 <HAL_GetTick>
 8005bd8:	6138      	str	r0, [r7, #16]
 8005bda:	e008      	b.n	8005bee <HAL_RCC_OscConfig+0xd2>
 8005bdc:	f7fc fd1a 	bl	8002614 <HAL_GetTick>
 8005be0:	4602      	mov	r2, r0
 8005be2:	693b      	ldr	r3, [r7, #16]
 8005be4:	1ad3      	subs	r3, r2, r3
 8005be6:	2b64      	cmp	r3, #100	; 0x64
 8005be8:	d901      	bls.n	8005bee <HAL_RCC_OscConfig+0xd2>
 8005bea:	2303      	movs	r3, #3
 8005bec:	e213      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005bee:	4b5b      	ldr	r3, [pc, #364]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005bf0:	681b      	ldr	r3, [r3, #0]
 8005bf2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005bf6:	2b00      	cmp	r3, #0
 8005bf8:	d0f0      	beq.n	8005bdc <HAL_RCC_OscConfig+0xc0>
 8005bfa:	e014      	b.n	8005c26 <HAL_RCC_OscConfig+0x10a>
 8005bfc:	f7fc fd0a 	bl	8002614 <HAL_GetTick>
 8005c00:	6138      	str	r0, [r7, #16]
 8005c02:	e008      	b.n	8005c16 <HAL_RCC_OscConfig+0xfa>
 8005c04:	f7fc fd06 	bl	8002614 <HAL_GetTick>
 8005c08:	4602      	mov	r2, r0
 8005c0a:	693b      	ldr	r3, [r7, #16]
 8005c0c:	1ad3      	subs	r3, r2, r3
 8005c0e:	2b64      	cmp	r3, #100	; 0x64
 8005c10:	d901      	bls.n	8005c16 <HAL_RCC_OscConfig+0xfa>
 8005c12:	2303      	movs	r3, #3
 8005c14:	e1ff      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005c16:	4b51      	ldr	r3, [pc, #324]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005c1e:	2b00      	cmp	r3, #0
 8005c20:	d1f0      	bne.n	8005c04 <HAL_RCC_OscConfig+0xe8>
 8005c22:	e000      	b.n	8005c26 <HAL_RCC_OscConfig+0x10a>
 8005c24:	bf00      	nop
 8005c26:	687b      	ldr	r3, [r7, #4]
 8005c28:	681b      	ldr	r3, [r3, #0]
 8005c2a:	f003 0302 	and.w	r3, r3, #2
 8005c2e:	2b00      	cmp	r3, #0
 8005c30:	d063      	beq.n	8005cfa <HAL_RCC_OscConfig+0x1de>
 8005c32:	4b4a      	ldr	r3, [pc, #296]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005c34:	689b      	ldr	r3, [r3, #8]
 8005c36:	f003 030c 	and.w	r3, r3, #12
 8005c3a:	2b00      	cmp	r3, #0
 8005c3c:	d00b      	beq.n	8005c56 <HAL_RCC_OscConfig+0x13a>
 8005c3e:	4b47      	ldr	r3, [pc, #284]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005c40:	689b      	ldr	r3, [r3, #8]
 8005c42:	f003 030c 	and.w	r3, r3, #12
 8005c46:	2b08      	cmp	r3, #8
 8005c48:	d11c      	bne.n	8005c84 <HAL_RCC_OscConfig+0x168>
 8005c4a:	4b44      	ldr	r3, [pc, #272]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005c4c:	685b      	ldr	r3, [r3, #4]
 8005c4e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005c52:	2b00      	cmp	r3, #0
 8005c54:	d116      	bne.n	8005c84 <HAL_RCC_OscConfig+0x168>
 8005c56:	4b41      	ldr	r3, [pc, #260]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	f003 0302 	and.w	r3, r3, #2
 8005c5e:	2b00      	cmp	r3, #0
 8005c60:	d005      	beq.n	8005c6e <HAL_RCC_OscConfig+0x152>
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	68db      	ldr	r3, [r3, #12]
 8005c66:	2b01      	cmp	r3, #1
 8005c68:	d001      	beq.n	8005c6e <HAL_RCC_OscConfig+0x152>
 8005c6a:	2301      	movs	r3, #1
 8005c6c:	e1d3      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005c6e:	4b3b      	ldr	r3, [pc, #236]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005c70:	681b      	ldr	r3, [r3, #0]
 8005c72:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005c76:	687b      	ldr	r3, [r7, #4]
 8005c78:	691b      	ldr	r3, [r3, #16]
 8005c7a:	00db      	lsls	r3, r3, #3
 8005c7c:	4937      	ldr	r1, [pc, #220]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005c7e:	4313      	orrs	r3, r2
 8005c80:	600b      	str	r3, [r1, #0]
 8005c82:	e03a      	b.n	8005cfa <HAL_RCC_OscConfig+0x1de>
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	68db      	ldr	r3, [r3, #12]
 8005c88:	2b00      	cmp	r3, #0
 8005c8a:	d020      	beq.n	8005cce <HAL_RCC_OscConfig+0x1b2>
 8005c8c:	4b34      	ldr	r3, [pc, #208]	; (8005d60 <HAL_RCC_OscConfig+0x244>)
 8005c8e:	2201      	movs	r2, #1
 8005c90:	601a      	str	r2, [r3, #0]
 8005c92:	f7fc fcbf 	bl	8002614 <HAL_GetTick>
 8005c96:	6138      	str	r0, [r7, #16]
 8005c98:	e008      	b.n	8005cac <HAL_RCC_OscConfig+0x190>
 8005c9a:	f7fc fcbb 	bl	8002614 <HAL_GetTick>
 8005c9e:	4602      	mov	r2, r0
 8005ca0:	693b      	ldr	r3, [r7, #16]
 8005ca2:	1ad3      	subs	r3, r2, r3
 8005ca4:	2b02      	cmp	r3, #2
 8005ca6:	d901      	bls.n	8005cac <HAL_RCC_OscConfig+0x190>
 8005ca8:	2303      	movs	r3, #3
 8005caa:	e1b4      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005cac:	4b2b      	ldr	r3, [pc, #172]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005cae:	681b      	ldr	r3, [r3, #0]
 8005cb0:	f003 0302 	and.w	r3, r3, #2
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	d0f0      	beq.n	8005c9a <HAL_RCC_OscConfig+0x17e>
 8005cb8:	4b28      	ldr	r3, [pc, #160]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005cba:	681b      	ldr	r3, [r3, #0]
 8005cbc:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005cc0:	687b      	ldr	r3, [r7, #4]
 8005cc2:	691b      	ldr	r3, [r3, #16]
 8005cc4:	00db      	lsls	r3, r3, #3
 8005cc6:	4925      	ldr	r1, [pc, #148]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005cc8:	4313      	orrs	r3, r2
 8005cca:	600b      	str	r3, [r1, #0]
 8005ccc:	e015      	b.n	8005cfa <HAL_RCC_OscConfig+0x1de>
 8005cce:	4b24      	ldr	r3, [pc, #144]	; (8005d60 <HAL_RCC_OscConfig+0x244>)
 8005cd0:	2200      	movs	r2, #0
 8005cd2:	601a      	str	r2, [r3, #0]
 8005cd4:	f7fc fc9e 	bl	8002614 <HAL_GetTick>
 8005cd8:	6138      	str	r0, [r7, #16]
 8005cda:	e008      	b.n	8005cee <HAL_RCC_OscConfig+0x1d2>
 8005cdc:	f7fc fc9a 	bl	8002614 <HAL_GetTick>
 8005ce0:	4602      	mov	r2, r0
 8005ce2:	693b      	ldr	r3, [r7, #16]
 8005ce4:	1ad3      	subs	r3, r2, r3
 8005ce6:	2b02      	cmp	r3, #2
 8005ce8:	d901      	bls.n	8005cee <HAL_RCC_OscConfig+0x1d2>
 8005cea:	2303      	movs	r3, #3
 8005cec:	e193      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005cee:	4b1b      	ldr	r3, [pc, #108]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005cf0:	681b      	ldr	r3, [r3, #0]
 8005cf2:	f003 0302 	and.w	r3, r3, #2
 8005cf6:	2b00      	cmp	r3, #0
 8005cf8:	d1f0      	bne.n	8005cdc <HAL_RCC_OscConfig+0x1c0>
 8005cfa:	687b      	ldr	r3, [r7, #4]
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	f003 0308 	and.w	r3, r3, #8
 8005d02:	2b00      	cmp	r3, #0
 8005d04:	d036      	beq.n	8005d74 <HAL_RCC_OscConfig+0x258>
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	695b      	ldr	r3, [r3, #20]
 8005d0a:	2b00      	cmp	r3, #0
 8005d0c:	d016      	beq.n	8005d3c <HAL_RCC_OscConfig+0x220>
 8005d0e:	4b15      	ldr	r3, [pc, #84]	; (8005d64 <HAL_RCC_OscConfig+0x248>)
 8005d10:	2201      	movs	r2, #1
 8005d12:	601a      	str	r2, [r3, #0]
 8005d14:	f7fc fc7e 	bl	8002614 <HAL_GetTick>
 8005d18:	6138      	str	r0, [r7, #16]
 8005d1a:	e008      	b.n	8005d2e <HAL_RCC_OscConfig+0x212>
 8005d1c:	f7fc fc7a 	bl	8002614 <HAL_GetTick>
 8005d20:	4602      	mov	r2, r0
 8005d22:	693b      	ldr	r3, [r7, #16]
 8005d24:	1ad3      	subs	r3, r2, r3
 8005d26:	2b02      	cmp	r3, #2
 8005d28:	d901      	bls.n	8005d2e <HAL_RCC_OscConfig+0x212>
 8005d2a:	2303      	movs	r3, #3
 8005d2c:	e173      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005d2e:	4b0b      	ldr	r3, [pc, #44]	; (8005d5c <HAL_RCC_OscConfig+0x240>)
 8005d30:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005d32:	f003 0302 	and.w	r3, r3, #2
 8005d36:	2b00      	cmp	r3, #0
 8005d38:	d0f0      	beq.n	8005d1c <HAL_RCC_OscConfig+0x200>
 8005d3a:	e01b      	b.n	8005d74 <HAL_RCC_OscConfig+0x258>
 8005d3c:	4b09      	ldr	r3, [pc, #36]	; (8005d64 <HAL_RCC_OscConfig+0x248>)
 8005d3e:	2200      	movs	r2, #0
 8005d40:	601a      	str	r2, [r3, #0]
 8005d42:	f7fc fc67 	bl	8002614 <HAL_GetTick>
 8005d46:	6138      	str	r0, [r7, #16]
 8005d48:	e00e      	b.n	8005d68 <HAL_RCC_OscConfig+0x24c>
 8005d4a:	f7fc fc63 	bl	8002614 <HAL_GetTick>
 8005d4e:	4602      	mov	r2, r0
 8005d50:	693b      	ldr	r3, [r7, #16]
 8005d52:	1ad3      	subs	r3, r2, r3
 8005d54:	2b02      	cmp	r3, #2
 8005d56:	d907      	bls.n	8005d68 <HAL_RCC_OscConfig+0x24c>
 8005d58:	2303      	movs	r3, #3
 8005d5a:	e15c      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005d5c:	40023800 	.word	0x40023800
 8005d60:	42470000 	.word	0x42470000
 8005d64:	42470e80 	.word	0x42470e80
 8005d68:	4b8a      	ldr	r3, [pc, #552]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005d6a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005d6c:	f003 0302 	and.w	r3, r3, #2
 8005d70:	2b00      	cmp	r3, #0
 8005d72:	d1ea      	bne.n	8005d4a <HAL_RCC_OscConfig+0x22e>
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	f003 0304 	and.w	r3, r3, #4
 8005d7c:	2b00      	cmp	r3, #0
 8005d7e:	f000 8097 	beq.w	8005eb0 <HAL_RCC_OscConfig+0x394>
 8005d82:	2300      	movs	r3, #0
 8005d84:	75fb      	strb	r3, [r7, #23]
 8005d86:	4b83      	ldr	r3, [pc, #524]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005d88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d8a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005d8e:	2b00      	cmp	r3, #0
 8005d90:	d10f      	bne.n	8005db2 <HAL_RCC_OscConfig+0x296>
 8005d92:	2300      	movs	r3, #0
 8005d94:	60bb      	str	r3, [r7, #8]
 8005d96:	4b7f      	ldr	r3, [pc, #508]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005d98:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d9a:	4a7e      	ldr	r2, [pc, #504]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005d9c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005da0:	6413      	str	r3, [r2, #64]	; 0x40
 8005da2:	4b7c      	ldr	r3, [pc, #496]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005da4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005da6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005daa:	60bb      	str	r3, [r7, #8]
 8005dac:	68bb      	ldr	r3, [r7, #8]
 8005dae:	2301      	movs	r3, #1
 8005db0:	75fb      	strb	r3, [r7, #23]
 8005db2:	4b79      	ldr	r3, [pc, #484]	; (8005f98 <HAL_RCC_OscConfig+0x47c>)
 8005db4:	681b      	ldr	r3, [r3, #0]
 8005db6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005dba:	2b00      	cmp	r3, #0
 8005dbc:	d118      	bne.n	8005df0 <HAL_RCC_OscConfig+0x2d4>
 8005dbe:	4b76      	ldr	r3, [pc, #472]	; (8005f98 <HAL_RCC_OscConfig+0x47c>)
 8005dc0:	681b      	ldr	r3, [r3, #0]
 8005dc2:	4a75      	ldr	r2, [pc, #468]	; (8005f98 <HAL_RCC_OscConfig+0x47c>)
 8005dc4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005dc8:	6013      	str	r3, [r2, #0]
 8005dca:	f7fc fc23 	bl	8002614 <HAL_GetTick>
 8005dce:	6138      	str	r0, [r7, #16]
 8005dd0:	e008      	b.n	8005de4 <HAL_RCC_OscConfig+0x2c8>
 8005dd2:	f7fc fc1f 	bl	8002614 <HAL_GetTick>
 8005dd6:	4602      	mov	r2, r0
 8005dd8:	693b      	ldr	r3, [r7, #16]
 8005dda:	1ad3      	subs	r3, r2, r3
 8005ddc:	2b02      	cmp	r3, #2
 8005dde:	d901      	bls.n	8005de4 <HAL_RCC_OscConfig+0x2c8>
 8005de0:	2303      	movs	r3, #3
 8005de2:	e118      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005de4:	4b6c      	ldr	r3, [pc, #432]	; (8005f98 <HAL_RCC_OscConfig+0x47c>)
 8005de6:	681b      	ldr	r3, [r3, #0]
 8005de8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005dec:	2b00      	cmp	r3, #0
 8005dee:	d0f0      	beq.n	8005dd2 <HAL_RCC_OscConfig+0x2b6>
 8005df0:	687b      	ldr	r3, [r7, #4]
 8005df2:	689b      	ldr	r3, [r3, #8]
 8005df4:	2b01      	cmp	r3, #1
 8005df6:	d106      	bne.n	8005e06 <HAL_RCC_OscConfig+0x2ea>
 8005df8:	4b66      	ldr	r3, [pc, #408]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005dfa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005dfc:	4a65      	ldr	r2, [pc, #404]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005dfe:	f043 0301 	orr.w	r3, r3, #1
 8005e02:	6713      	str	r3, [r2, #112]	; 0x70
 8005e04:	e01c      	b.n	8005e40 <HAL_RCC_OscConfig+0x324>
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	689b      	ldr	r3, [r3, #8]
 8005e0a:	2b05      	cmp	r3, #5
 8005e0c:	d10c      	bne.n	8005e28 <HAL_RCC_OscConfig+0x30c>
 8005e0e:	4b61      	ldr	r3, [pc, #388]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e10:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e12:	4a60      	ldr	r2, [pc, #384]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e14:	f043 0304 	orr.w	r3, r3, #4
 8005e18:	6713      	str	r3, [r2, #112]	; 0x70
 8005e1a:	4b5e      	ldr	r3, [pc, #376]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e1c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e1e:	4a5d      	ldr	r2, [pc, #372]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e20:	f043 0301 	orr.w	r3, r3, #1
 8005e24:	6713      	str	r3, [r2, #112]	; 0x70
 8005e26:	e00b      	b.n	8005e40 <HAL_RCC_OscConfig+0x324>
 8005e28:	4b5a      	ldr	r3, [pc, #360]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e2a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e2c:	4a59      	ldr	r2, [pc, #356]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e2e:	f023 0301 	bic.w	r3, r3, #1
 8005e32:	6713      	str	r3, [r2, #112]	; 0x70
 8005e34:	4b57      	ldr	r3, [pc, #348]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e36:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e38:	4a56      	ldr	r2, [pc, #344]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e3a:	f023 0304 	bic.w	r3, r3, #4
 8005e3e:	6713      	str	r3, [r2, #112]	; 0x70
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	689b      	ldr	r3, [r3, #8]
 8005e44:	2b00      	cmp	r3, #0
 8005e46:	d015      	beq.n	8005e74 <HAL_RCC_OscConfig+0x358>
 8005e48:	f7fc fbe4 	bl	8002614 <HAL_GetTick>
 8005e4c:	6138      	str	r0, [r7, #16]
 8005e4e:	e00a      	b.n	8005e66 <HAL_RCC_OscConfig+0x34a>
 8005e50:	f7fc fbe0 	bl	8002614 <HAL_GetTick>
 8005e54:	4602      	mov	r2, r0
 8005e56:	693b      	ldr	r3, [r7, #16]
 8005e58:	1ad3      	subs	r3, r2, r3
 8005e5a:	f241 3288 	movw	r2, #5000	; 0x1388
 8005e5e:	4293      	cmp	r3, r2
 8005e60:	d901      	bls.n	8005e66 <HAL_RCC_OscConfig+0x34a>
 8005e62:	2303      	movs	r3, #3
 8005e64:	e0d7      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005e66:	4b4b      	ldr	r3, [pc, #300]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e68:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e6a:	f003 0302 	and.w	r3, r3, #2
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	d0ee      	beq.n	8005e50 <HAL_RCC_OscConfig+0x334>
 8005e72:	e014      	b.n	8005e9e <HAL_RCC_OscConfig+0x382>
 8005e74:	f7fc fbce 	bl	8002614 <HAL_GetTick>
 8005e78:	6138      	str	r0, [r7, #16]
 8005e7a:	e00a      	b.n	8005e92 <HAL_RCC_OscConfig+0x376>
 8005e7c:	f7fc fbca 	bl	8002614 <HAL_GetTick>
 8005e80:	4602      	mov	r2, r0
 8005e82:	693b      	ldr	r3, [r7, #16]
 8005e84:	1ad3      	subs	r3, r2, r3
 8005e86:	f241 3288 	movw	r2, #5000	; 0x1388
 8005e8a:	4293      	cmp	r3, r2
 8005e8c:	d901      	bls.n	8005e92 <HAL_RCC_OscConfig+0x376>
 8005e8e:	2303      	movs	r3, #3
 8005e90:	e0c1      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005e92:	4b40      	ldr	r3, [pc, #256]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005e94:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005e96:	f003 0302 	and.w	r3, r3, #2
 8005e9a:	2b00      	cmp	r3, #0
 8005e9c:	d1ee      	bne.n	8005e7c <HAL_RCC_OscConfig+0x360>
 8005e9e:	7dfb      	ldrb	r3, [r7, #23]
 8005ea0:	2b01      	cmp	r3, #1
 8005ea2:	d105      	bne.n	8005eb0 <HAL_RCC_OscConfig+0x394>
 8005ea4:	4b3b      	ldr	r3, [pc, #236]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005ea6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ea8:	4a3a      	ldr	r2, [pc, #232]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005eaa:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005eae:	6413      	str	r3, [r2, #64]	; 0x40
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	699b      	ldr	r3, [r3, #24]
 8005eb4:	2b00      	cmp	r3, #0
 8005eb6:	f000 80ad 	beq.w	8006014 <HAL_RCC_OscConfig+0x4f8>
 8005eba:	4b36      	ldr	r3, [pc, #216]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005ebc:	689b      	ldr	r3, [r3, #8]
 8005ebe:	f003 030c 	and.w	r3, r3, #12
 8005ec2:	2b08      	cmp	r3, #8
 8005ec4:	d060      	beq.n	8005f88 <HAL_RCC_OscConfig+0x46c>
 8005ec6:	687b      	ldr	r3, [r7, #4]
 8005ec8:	699b      	ldr	r3, [r3, #24]
 8005eca:	2b02      	cmp	r3, #2
 8005ecc:	d145      	bne.n	8005f5a <HAL_RCC_OscConfig+0x43e>
 8005ece:	4b33      	ldr	r3, [pc, #204]	; (8005f9c <HAL_RCC_OscConfig+0x480>)
 8005ed0:	2200      	movs	r2, #0
 8005ed2:	601a      	str	r2, [r3, #0]
 8005ed4:	f7fc fb9e 	bl	8002614 <HAL_GetTick>
 8005ed8:	6138      	str	r0, [r7, #16]
 8005eda:	e008      	b.n	8005eee <HAL_RCC_OscConfig+0x3d2>
 8005edc:	f7fc fb9a 	bl	8002614 <HAL_GetTick>
 8005ee0:	4602      	mov	r2, r0
 8005ee2:	693b      	ldr	r3, [r7, #16]
 8005ee4:	1ad3      	subs	r3, r2, r3
 8005ee6:	2b02      	cmp	r3, #2
 8005ee8:	d901      	bls.n	8005eee <HAL_RCC_OscConfig+0x3d2>
 8005eea:	2303      	movs	r3, #3
 8005eec:	e093      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005eee:	4b29      	ldr	r3, [pc, #164]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005ef0:	681b      	ldr	r3, [r3, #0]
 8005ef2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005ef6:	2b00      	cmp	r3, #0
 8005ef8:	d1f0      	bne.n	8005edc <HAL_RCC_OscConfig+0x3c0>
 8005efa:	687b      	ldr	r3, [r7, #4]
 8005efc:	69da      	ldr	r2, [r3, #28]
 8005efe:	687b      	ldr	r3, [r7, #4]
 8005f00:	6a1b      	ldr	r3, [r3, #32]
 8005f02:	431a      	orrs	r2, r3
 8005f04:	687b      	ldr	r3, [r7, #4]
 8005f06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f08:	019b      	lsls	r3, r3, #6
 8005f0a:	431a      	orrs	r2, r3
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005f10:	085b      	lsrs	r3, r3, #1
 8005f12:	3b01      	subs	r3, #1
 8005f14:	041b      	lsls	r3, r3, #16
 8005f16:	431a      	orrs	r2, r3
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005f1c:	061b      	lsls	r3, r3, #24
 8005f1e:	431a      	orrs	r2, r3
 8005f20:	687b      	ldr	r3, [r7, #4]
 8005f22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f24:	071b      	lsls	r3, r3, #28
 8005f26:	491b      	ldr	r1, [pc, #108]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005f28:	4313      	orrs	r3, r2
 8005f2a:	604b      	str	r3, [r1, #4]
 8005f2c:	4b1b      	ldr	r3, [pc, #108]	; (8005f9c <HAL_RCC_OscConfig+0x480>)
 8005f2e:	2201      	movs	r2, #1
 8005f30:	601a      	str	r2, [r3, #0]
 8005f32:	f7fc fb6f 	bl	8002614 <HAL_GetTick>
 8005f36:	6138      	str	r0, [r7, #16]
 8005f38:	e008      	b.n	8005f4c <HAL_RCC_OscConfig+0x430>
 8005f3a:	f7fc fb6b 	bl	8002614 <HAL_GetTick>
 8005f3e:	4602      	mov	r2, r0
 8005f40:	693b      	ldr	r3, [r7, #16]
 8005f42:	1ad3      	subs	r3, r2, r3
 8005f44:	2b02      	cmp	r3, #2
 8005f46:	d901      	bls.n	8005f4c <HAL_RCC_OscConfig+0x430>
 8005f48:	2303      	movs	r3, #3
 8005f4a:	e064      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005f4c:	4b11      	ldr	r3, [pc, #68]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005f54:	2b00      	cmp	r3, #0
 8005f56:	d0f0      	beq.n	8005f3a <HAL_RCC_OscConfig+0x41e>
 8005f58:	e05c      	b.n	8006014 <HAL_RCC_OscConfig+0x4f8>
 8005f5a:	4b10      	ldr	r3, [pc, #64]	; (8005f9c <HAL_RCC_OscConfig+0x480>)
 8005f5c:	2200      	movs	r2, #0
 8005f5e:	601a      	str	r2, [r3, #0]
 8005f60:	f7fc fb58 	bl	8002614 <HAL_GetTick>
 8005f64:	6138      	str	r0, [r7, #16]
 8005f66:	e008      	b.n	8005f7a <HAL_RCC_OscConfig+0x45e>
 8005f68:	f7fc fb54 	bl	8002614 <HAL_GetTick>
 8005f6c:	4602      	mov	r2, r0
 8005f6e:	693b      	ldr	r3, [r7, #16]
 8005f70:	1ad3      	subs	r3, r2, r3
 8005f72:	2b02      	cmp	r3, #2
 8005f74:	d901      	bls.n	8005f7a <HAL_RCC_OscConfig+0x45e>
 8005f76:	2303      	movs	r3, #3
 8005f78:	e04d      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005f7a:	4b06      	ldr	r3, [pc, #24]	; (8005f94 <HAL_RCC_OscConfig+0x478>)
 8005f7c:	681b      	ldr	r3, [r3, #0]
 8005f7e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005f82:	2b00      	cmp	r3, #0
 8005f84:	d1f0      	bne.n	8005f68 <HAL_RCC_OscConfig+0x44c>
 8005f86:	e045      	b.n	8006014 <HAL_RCC_OscConfig+0x4f8>
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	699b      	ldr	r3, [r3, #24]
 8005f8c:	2b01      	cmp	r3, #1
 8005f8e:	d107      	bne.n	8005fa0 <HAL_RCC_OscConfig+0x484>
 8005f90:	2301      	movs	r3, #1
 8005f92:	e040      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8005f94:	40023800 	.word	0x40023800
 8005f98:	40007000 	.word	0x40007000
 8005f9c:	42470060 	.word	0x42470060
 8005fa0:	4b1f      	ldr	r3, [pc, #124]	; (8006020 <HAL_RCC_OscConfig+0x504>)
 8005fa2:	685b      	ldr	r3, [r3, #4]
 8005fa4:	60fb      	str	r3, [r7, #12]
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	699b      	ldr	r3, [r3, #24]
 8005faa:	2b01      	cmp	r3, #1
 8005fac:	d030      	beq.n	8006010 <HAL_RCC_OscConfig+0x4f4>
 8005fae:	68fb      	ldr	r3, [r7, #12]
 8005fb0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8005fb4:	687b      	ldr	r3, [r7, #4]
 8005fb6:	69db      	ldr	r3, [r3, #28]
 8005fb8:	429a      	cmp	r2, r3
 8005fba:	d129      	bne.n	8006010 <HAL_RCC_OscConfig+0x4f4>
 8005fbc:	68fb      	ldr	r3, [r7, #12]
 8005fbe:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8005fc2:	687b      	ldr	r3, [r7, #4]
 8005fc4:	6a1b      	ldr	r3, [r3, #32]
 8005fc6:	429a      	cmp	r2, r3
 8005fc8:	d122      	bne.n	8006010 <HAL_RCC_OscConfig+0x4f4>
 8005fca:	68fa      	ldr	r2, [r7, #12]
 8005fcc:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005fd0:	4013      	ands	r3, r2
 8005fd2:	687a      	ldr	r2, [r7, #4]
 8005fd4:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8005fd6:	0192      	lsls	r2, r2, #6
 8005fd8:	4293      	cmp	r3, r2
 8005fda:	d119      	bne.n	8006010 <HAL_RCC_OscConfig+0x4f4>
 8005fdc:	68fb      	ldr	r3, [r7, #12]
 8005fde:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8005fe2:	687b      	ldr	r3, [r7, #4]
 8005fe4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005fe6:	085b      	lsrs	r3, r3, #1
 8005fe8:	3b01      	subs	r3, #1
 8005fea:	041b      	lsls	r3, r3, #16
 8005fec:	429a      	cmp	r2, r3
 8005fee:	d10f      	bne.n	8006010 <HAL_RCC_OscConfig+0x4f4>
 8005ff0:	68fb      	ldr	r3, [r7, #12]
 8005ff2:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005ffa:	061b      	lsls	r3, r3, #24
 8005ffc:	429a      	cmp	r2, r3
 8005ffe:	d107      	bne.n	8006010 <HAL_RCC_OscConfig+0x4f4>
 8006000:	68fb      	ldr	r3, [r7, #12]
 8006002:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8006006:	687b      	ldr	r3, [r7, #4]
 8006008:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800600a:	071b      	lsls	r3, r3, #28
 800600c:	429a      	cmp	r2, r3
 800600e:	d001      	beq.n	8006014 <HAL_RCC_OscConfig+0x4f8>
 8006010:	2301      	movs	r3, #1
 8006012:	e000      	b.n	8006016 <HAL_RCC_OscConfig+0x4fa>
 8006014:	2300      	movs	r3, #0
 8006016:	4618      	mov	r0, r3
 8006018:	3718      	adds	r7, #24
 800601a:	46bd      	mov	sp, r7
 800601c:	bd80      	pop	{r7, pc}
 800601e:	bf00      	nop
 8006020:	40023800 	.word	0x40023800

08006024 <HAL_SPI_Init>:
 8006024:	b580      	push	{r7, lr}
 8006026:	b082      	sub	sp, #8
 8006028:	af00      	add	r7, sp, #0
 800602a:	6078      	str	r0, [r7, #4]
 800602c:	687b      	ldr	r3, [r7, #4]
 800602e:	2b00      	cmp	r3, #0
 8006030:	d101      	bne.n	8006036 <HAL_SPI_Init+0x12>
 8006032:	2301      	movs	r3, #1
 8006034:	e07b      	b.n	800612e <HAL_SPI_Init+0x10a>
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800603a:	2b00      	cmp	r3, #0
 800603c:	d108      	bne.n	8006050 <HAL_SPI_Init+0x2c>
 800603e:	687b      	ldr	r3, [r7, #4]
 8006040:	685b      	ldr	r3, [r3, #4]
 8006042:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006046:	d009      	beq.n	800605c <HAL_SPI_Init+0x38>
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	2200      	movs	r2, #0
 800604c:	61da      	str	r2, [r3, #28]
 800604e:	e005      	b.n	800605c <HAL_SPI_Init+0x38>
 8006050:	687b      	ldr	r3, [r7, #4]
 8006052:	2200      	movs	r2, #0
 8006054:	611a      	str	r2, [r3, #16]
 8006056:	687b      	ldr	r3, [r7, #4]
 8006058:	2200      	movs	r2, #0
 800605a:	615a      	str	r2, [r3, #20]
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	2200      	movs	r2, #0
 8006060:	629a      	str	r2, [r3, #40]	; 0x28
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006068:	b2db      	uxtb	r3, r3
 800606a:	2b00      	cmp	r3, #0
 800606c:	d106      	bne.n	800607c <HAL_SPI_Init+0x58>
 800606e:	687b      	ldr	r3, [r7, #4]
 8006070:	2200      	movs	r2, #0
 8006072:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006076:	6878      	ldr	r0, [r7, #4]
 8006078:	f7fb fe12 	bl	8001ca0 <HAL_SPI_MspInit>
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	2202      	movs	r2, #2
 8006080:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8006084:	687b      	ldr	r3, [r7, #4]
 8006086:	681b      	ldr	r3, [r3, #0]
 8006088:	681a      	ldr	r2, [r3, #0]
 800608a:	687b      	ldr	r3, [r7, #4]
 800608c:	681b      	ldr	r3, [r3, #0]
 800608e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006092:	601a      	str	r2, [r3, #0]
 8006094:	687b      	ldr	r3, [r7, #4]
 8006096:	685b      	ldr	r3, [r3, #4]
 8006098:	f403 7282 	and.w	r2, r3, #260	; 0x104
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	689b      	ldr	r3, [r3, #8]
 80060a0:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80060a4:	431a      	orrs	r2, r3
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	68db      	ldr	r3, [r3, #12]
 80060aa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80060ae:	431a      	orrs	r2, r3
 80060b0:	687b      	ldr	r3, [r7, #4]
 80060b2:	691b      	ldr	r3, [r3, #16]
 80060b4:	f003 0302 	and.w	r3, r3, #2
 80060b8:	431a      	orrs	r2, r3
 80060ba:	687b      	ldr	r3, [r7, #4]
 80060bc:	695b      	ldr	r3, [r3, #20]
 80060be:	f003 0301 	and.w	r3, r3, #1
 80060c2:	431a      	orrs	r2, r3
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	699b      	ldr	r3, [r3, #24]
 80060c8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80060cc:	431a      	orrs	r2, r3
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	69db      	ldr	r3, [r3, #28]
 80060d2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80060d6:	431a      	orrs	r2, r3
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	6a1b      	ldr	r3, [r3, #32]
 80060dc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80060e0:	ea42 0103 	orr.w	r1, r2, r3
 80060e4:	687b      	ldr	r3, [r7, #4]
 80060e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80060e8:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	681b      	ldr	r3, [r3, #0]
 80060f0:	430a      	orrs	r2, r1
 80060f2:	601a      	str	r2, [r3, #0]
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	699b      	ldr	r3, [r3, #24]
 80060f8:	0c1b      	lsrs	r3, r3, #16
 80060fa:	f003 0104 	and.w	r1, r3, #4
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006102:	f003 0210 	and.w	r2, r3, #16
 8006106:	687b      	ldr	r3, [r7, #4]
 8006108:	681b      	ldr	r3, [r3, #0]
 800610a:	430a      	orrs	r2, r1
 800610c:	605a      	str	r2, [r3, #4]
 800610e:	687b      	ldr	r3, [r7, #4]
 8006110:	681b      	ldr	r3, [r3, #0]
 8006112:	69da      	ldr	r2, [r3, #28]
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	681b      	ldr	r3, [r3, #0]
 8006118:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800611c:	61da      	str	r2, [r3, #28]
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	2200      	movs	r2, #0
 8006122:	655a      	str	r2, [r3, #84]	; 0x54
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	2201      	movs	r2, #1
 8006128:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800612c:	2300      	movs	r3, #0
 800612e:	4618      	mov	r0, r3
 8006130:	3708      	adds	r7, #8
 8006132:	46bd      	mov	sp, r7
 8006134:	bd80      	pop	{r7, pc}

08006136 <HAL_SPI_Transmit>:
 8006136:	b580      	push	{r7, lr}
 8006138:	b088      	sub	sp, #32
 800613a:	af00      	add	r7, sp, #0
 800613c:	60f8      	str	r0, [r7, #12]
 800613e:	60b9      	str	r1, [r7, #8]
 8006140:	603b      	str	r3, [r7, #0]
 8006142:	4613      	mov	r3, r2
 8006144:	80fb      	strh	r3, [r7, #6]
 8006146:	2300      	movs	r3, #0
 8006148:	77fb      	strb	r3, [r7, #31]
 800614a:	68fb      	ldr	r3, [r7, #12]
 800614c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006150:	2b01      	cmp	r3, #1
 8006152:	d101      	bne.n	8006158 <HAL_SPI_Transmit+0x22>
 8006154:	2302      	movs	r3, #2
 8006156:	e126      	b.n	80063a6 <HAL_SPI_Transmit+0x270>
 8006158:	68fb      	ldr	r3, [r7, #12]
 800615a:	2201      	movs	r2, #1
 800615c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006160:	f7fc fa58 	bl	8002614 <HAL_GetTick>
 8006164:	61b8      	str	r0, [r7, #24]
 8006166:	88fb      	ldrh	r3, [r7, #6]
 8006168:	82fb      	strh	r3, [r7, #22]
 800616a:	68fb      	ldr	r3, [r7, #12]
 800616c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006170:	b2db      	uxtb	r3, r3
 8006172:	2b01      	cmp	r3, #1
 8006174:	d002      	beq.n	800617c <HAL_SPI_Transmit+0x46>
 8006176:	2302      	movs	r3, #2
 8006178:	77fb      	strb	r3, [r7, #31]
 800617a:	e10b      	b.n	8006394 <HAL_SPI_Transmit+0x25e>
 800617c:	68bb      	ldr	r3, [r7, #8]
 800617e:	2b00      	cmp	r3, #0
 8006180:	d002      	beq.n	8006188 <HAL_SPI_Transmit+0x52>
 8006182:	88fb      	ldrh	r3, [r7, #6]
 8006184:	2b00      	cmp	r3, #0
 8006186:	d102      	bne.n	800618e <HAL_SPI_Transmit+0x58>
 8006188:	2301      	movs	r3, #1
 800618a:	77fb      	strb	r3, [r7, #31]
 800618c:	e102      	b.n	8006394 <HAL_SPI_Transmit+0x25e>
 800618e:	68fb      	ldr	r3, [r7, #12]
 8006190:	2203      	movs	r2, #3
 8006192:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	2200      	movs	r2, #0
 800619a:	655a      	str	r2, [r3, #84]	; 0x54
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	68ba      	ldr	r2, [r7, #8]
 80061a0:	631a      	str	r2, [r3, #48]	; 0x30
 80061a2:	68fb      	ldr	r3, [r7, #12]
 80061a4:	88fa      	ldrh	r2, [r7, #6]
 80061a6:	869a      	strh	r2, [r3, #52]	; 0x34
 80061a8:	68fb      	ldr	r3, [r7, #12]
 80061aa:	88fa      	ldrh	r2, [r7, #6]
 80061ac:	86da      	strh	r2, [r3, #54]	; 0x36
 80061ae:	68fb      	ldr	r3, [r7, #12]
 80061b0:	2200      	movs	r2, #0
 80061b2:	639a      	str	r2, [r3, #56]	; 0x38
 80061b4:	68fb      	ldr	r3, [r7, #12]
 80061b6:	2200      	movs	r2, #0
 80061b8:	879a      	strh	r2, [r3, #60]	; 0x3c
 80061ba:	68fb      	ldr	r3, [r7, #12]
 80061bc:	2200      	movs	r2, #0
 80061be:	87da      	strh	r2, [r3, #62]	; 0x3e
 80061c0:	68fb      	ldr	r3, [r7, #12]
 80061c2:	2200      	movs	r2, #0
 80061c4:	645a      	str	r2, [r3, #68]	; 0x44
 80061c6:	68fb      	ldr	r3, [r7, #12]
 80061c8:	2200      	movs	r2, #0
 80061ca:	641a      	str	r2, [r3, #64]	; 0x40
 80061cc:	68fb      	ldr	r3, [r7, #12]
 80061ce:	689b      	ldr	r3, [r3, #8]
 80061d0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80061d4:	d10f      	bne.n	80061f6 <HAL_SPI_Transmit+0xc0>
 80061d6:	68fb      	ldr	r3, [r7, #12]
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	681a      	ldr	r2, [r3, #0]
 80061dc:	68fb      	ldr	r3, [r7, #12]
 80061de:	681b      	ldr	r3, [r3, #0]
 80061e0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80061e4:	601a      	str	r2, [r3, #0]
 80061e6:	68fb      	ldr	r3, [r7, #12]
 80061e8:	681b      	ldr	r3, [r3, #0]
 80061ea:	681a      	ldr	r2, [r3, #0]
 80061ec:	68fb      	ldr	r3, [r7, #12]
 80061ee:	681b      	ldr	r3, [r3, #0]
 80061f0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80061f4:	601a      	str	r2, [r3, #0]
 80061f6:	68fb      	ldr	r3, [r7, #12]
 80061f8:	681b      	ldr	r3, [r3, #0]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006200:	2b40      	cmp	r3, #64	; 0x40
 8006202:	d007      	beq.n	8006214 <HAL_SPI_Transmit+0xde>
 8006204:	68fb      	ldr	r3, [r7, #12]
 8006206:	681b      	ldr	r3, [r3, #0]
 8006208:	681a      	ldr	r2, [r3, #0]
 800620a:	68fb      	ldr	r3, [r7, #12]
 800620c:	681b      	ldr	r3, [r3, #0]
 800620e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006212:	601a      	str	r2, [r3, #0]
 8006214:	68fb      	ldr	r3, [r7, #12]
 8006216:	68db      	ldr	r3, [r3, #12]
 8006218:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800621c:	d14b      	bne.n	80062b6 <HAL_SPI_Transmit+0x180>
 800621e:	68fb      	ldr	r3, [r7, #12]
 8006220:	685b      	ldr	r3, [r3, #4]
 8006222:	2b00      	cmp	r3, #0
 8006224:	d002      	beq.n	800622c <HAL_SPI_Transmit+0xf6>
 8006226:	8afb      	ldrh	r3, [r7, #22]
 8006228:	2b01      	cmp	r3, #1
 800622a:	d13e      	bne.n	80062aa <HAL_SPI_Transmit+0x174>
 800622c:	68fb      	ldr	r3, [r7, #12]
 800622e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006230:	881a      	ldrh	r2, [r3, #0]
 8006232:	68fb      	ldr	r3, [r7, #12]
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	60da      	str	r2, [r3, #12]
 8006238:	68fb      	ldr	r3, [r7, #12]
 800623a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800623c:	1c9a      	adds	r2, r3, #2
 800623e:	68fb      	ldr	r3, [r7, #12]
 8006240:	631a      	str	r2, [r3, #48]	; 0x30
 8006242:	68fb      	ldr	r3, [r7, #12]
 8006244:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006246:	b29b      	uxth	r3, r3
 8006248:	3b01      	subs	r3, #1
 800624a:	b29a      	uxth	r2, r3
 800624c:	68fb      	ldr	r3, [r7, #12]
 800624e:	86da      	strh	r2, [r3, #54]	; 0x36
 8006250:	e02b      	b.n	80062aa <HAL_SPI_Transmit+0x174>
 8006252:	68fb      	ldr	r3, [r7, #12]
 8006254:	681b      	ldr	r3, [r3, #0]
 8006256:	689b      	ldr	r3, [r3, #8]
 8006258:	f003 0302 	and.w	r3, r3, #2
 800625c:	2b02      	cmp	r3, #2
 800625e:	d112      	bne.n	8006286 <HAL_SPI_Transmit+0x150>
 8006260:	68fb      	ldr	r3, [r7, #12]
 8006262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006264:	881a      	ldrh	r2, [r3, #0]
 8006266:	68fb      	ldr	r3, [r7, #12]
 8006268:	681b      	ldr	r3, [r3, #0]
 800626a:	60da      	str	r2, [r3, #12]
 800626c:	68fb      	ldr	r3, [r7, #12]
 800626e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006270:	1c9a      	adds	r2, r3, #2
 8006272:	68fb      	ldr	r3, [r7, #12]
 8006274:	631a      	str	r2, [r3, #48]	; 0x30
 8006276:	68fb      	ldr	r3, [r7, #12]
 8006278:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800627a:	b29b      	uxth	r3, r3
 800627c:	3b01      	subs	r3, #1
 800627e:	b29a      	uxth	r2, r3
 8006280:	68fb      	ldr	r3, [r7, #12]
 8006282:	86da      	strh	r2, [r3, #54]	; 0x36
 8006284:	e011      	b.n	80062aa <HAL_SPI_Transmit+0x174>
 8006286:	f7fc f9c5 	bl	8002614 <HAL_GetTick>
 800628a:	4602      	mov	r2, r0
 800628c:	69bb      	ldr	r3, [r7, #24]
 800628e:	1ad3      	subs	r3, r2, r3
 8006290:	683a      	ldr	r2, [r7, #0]
 8006292:	429a      	cmp	r2, r3
 8006294:	d803      	bhi.n	800629e <HAL_SPI_Transmit+0x168>
 8006296:	683b      	ldr	r3, [r7, #0]
 8006298:	f1b3 3fff 	cmp.w	r3, #4294967295
 800629c:	d102      	bne.n	80062a4 <HAL_SPI_Transmit+0x16e>
 800629e:	683b      	ldr	r3, [r7, #0]
 80062a0:	2b00      	cmp	r3, #0
 80062a2:	d102      	bne.n	80062aa <HAL_SPI_Transmit+0x174>
 80062a4:	2303      	movs	r3, #3
 80062a6:	77fb      	strb	r3, [r7, #31]
 80062a8:	e074      	b.n	8006394 <HAL_SPI_Transmit+0x25e>
 80062aa:	68fb      	ldr	r3, [r7, #12]
 80062ac:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80062ae:	b29b      	uxth	r3, r3
 80062b0:	2b00      	cmp	r3, #0
 80062b2:	d1ce      	bne.n	8006252 <HAL_SPI_Transmit+0x11c>
 80062b4:	e04c      	b.n	8006350 <HAL_SPI_Transmit+0x21a>
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	685b      	ldr	r3, [r3, #4]
 80062ba:	2b00      	cmp	r3, #0
 80062bc:	d002      	beq.n	80062c4 <HAL_SPI_Transmit+0x18e>
 80062be:	8afb      	ldrh	r3, [r7, #22]
 80062c0:	2b01      	cmp	r3, #1
 80062c2:	d140      	bne.n	8006346 <HAL_SPI_Transmit+0x210>
 80062c4:	68fb      	ldr	r3, [r7, #12]
 80062c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80062c8:	68fb      	ldr	r3, [r7, #12]
 80062ca:	681b      	ldr	r3, [r3, #0]
 80062cc:	330c      	adds	r3, #12
 80062ce:	7812      	ldrb	r2, [r2, #0]
 80062d0:	701a      	strb	r2, [r3, #0]
 80062d2:	68fb      	ldr	r3, [r7, #12]
 80062d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80062d6:	1c5a      	adds	r2, r3, #1
 80062d8:	68fb      	ldr	r3, [r7, #12]
 80062da:	631a      	str	r2, [r3, #48]	; 0x30
 80062dc:	68fb      	ldr	r3, [r7, #12]
 80062de:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80062e0:	b29b      	uxth	r3, r3
 80062e2:	3b01      	subs	r3, #1
 80062e4:	b29a      	uxth	r2, r3
 80062e6:	68fb      	ldr	r3, [r7, #12]
 80062e8:	86da      	strh	r2, [r3, #54]	; 0x36
 80062ea:	e02c      	b.n	8006346 <HAL_SPI_Transmit+0x210>
 80062ec:	68fb      	ldr	r3, [r7, #12]
 80062ee:	681b      	ldr	r3, [r3, #0]
 80062f0:	689b      	ldr	r3, [r3, #8]
 80062f2:	f003 0302 	and.w	r3, r3, #2
 80062f6:	2b02      	cmp	r3, #2
 80062f8:	d113      	bne.n	8006322 <HAL_SPI_Transmit+0x1ec>
 80062fa:	68fb      	ldr	r3, [r7, #12]
 80062fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80062fe:	68fb      	ldr	r3, [r7, #12]
 8006300:	681b      	ldr	r3, [r3, #0]
 8006302:	330c      	adds	r3, #12
 8006304:	7812      	ldrb	r2, [r2, #0]
 8006306:	701a      	strb	r2, [r3, #0]
 8006308:	68fb      	ldr	r3, [r7, #12]
 800630a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800630c:	1c5a      	adds	r2, r3, #1
 800630e:	68fb      	ldr	r3, [r7, #12]
 8006310:	631a      	str	r2, [r3, #48]	; 0x30
 8006312:	68fb      	ldr	r3, [r7, #12]
 8006314:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006316:	b29b      	uxth	r3, r3
 8006318:	3b01      	subs	r3, #1
 800631a:	b29a      	uxth	r2, r3
 800631c:	68fb      	ldr	r3, [r7, #12]
 800631e:	86da      	strh	r2, [r3, #54]	; 0x36
 8006320:	e011      	b.n	8006346 <HAL_SPI_Transmit+0x210>
 8006322:	f7fc f977 	bl	8002614 <HAL_GetTick>
 8006326:	4602      	mov	r2, r0
 8006328:	69bb      	ldr	r3, [r7, #24]
 800632a:	1ad3      	subs	r3, r2, r3
 800632c:	683a      	ldr	r2, [r7, #0]
 800632e:	429a      	cmp	r2, r3
 8006330:	d803      	bhi.n	800633a <HAL_SPI_Transmit+0x204>
 8006332:	683b      	ldr	r3, [r7, #0]
 8006334:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006338:	d102      	bne.n	8006340 <HAL_SPI_Transmit+0x20a>
 800633a:	683b      	ldr	r3, [r7, #0]
 800633c:	2b00      	cmp	r3, #0
 800633e:	d102      	bne.n	8006346 <HAL_SPI_Transmit+0x210>
 8006340:	2303      	movs	r3, #3
 8006342:	77fb      	strb	r3, [r7, #31]
 8006344:	e026      	b.n	8006394 <HAL_SPI_Transmit+0x25e>
 8006346:	68fb      	ldr	r3, [r7, #12]
 8006348:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800634a:	b29b      	uxth	r3, r3
 800634c:	2b00      	cmp	r3, #0
 800634e:	d1cd      	bne.n	80062ec <HAL_SPI_Transmit+0x1b6>
 8006350:	69ba      	ldr	r2, [r7, #24]
 8006352:	6839      	ldr	r1, [r7, #0]
 8006354:	68f8      	ldr	r0, [r7, #12]
 8006356:	f000 f9d1 	bl	80066fc <SPI_EndRxTxTransaction>
 800635a:	4603      	mov	r3, r0
 800635c:	2b00      	cmp	r3, #0
 800635e:	d002      	beq.n	8006366 <HAL_SPI_Transmit+0x230>
 8006360:	68fb      	ldr	r3, [r7, #12]
 8006362:	2220      	movs	r2, #32
 8006364:	655a      	str	r2, [r3, #84]	; 0x54
 8006366:	68fb      	ldr	r3, [r7, #12]
 8006368:	689b      	ldr	r3, [r3, #8]
 800636a:	2b00      	cmp	r3, #0
 800636c:	d10a      	bne.n	8006384 <HAL_SPI_Transmit+0x24e>
 800636e:	2300      	movs	r3, #0
 8006370:	613b      	str	r3, [r7, #16]
 8006372:	68fb      	ldr	r3, [r7, #12]
 8006374:	681b      	ldr	r3, [r3, #0]
 8006376:	68db      	ldr	r3, [r3, #12]
 8006378:	613b      	str	r3, [r7, #16]
 800637a:	68fb      	ldr	r3, [r7, #12]
 800637c:	681b      	ldr	r3, [r3, #0]
 800637e:	689b      	ldr	r3, [r3, #8]
 8006380:	613b      	str	r3, [r7, #16]
 8006382:	693b      	ldr	r3, [r7, #16]
 8006384:	68fb      	ldr	r3, [r7, #12]
 8006386:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006388:	2b00      	cmp	r3, #0
 800638a:	d002      	beq.n	8006392 <HAL_SPI_Transmit+0x25c>
 800638c:	2301      	movs	r3, #1
 800638e:	77fb      	strb	r3, [r7, #31]
 8006390:	e000      	b.n	8006394 <HAL_SPI_Transmit+0x25e>
 8006392:	bf00      	nop
 8006394:	68fb      	ldr	r3, [r7, #12]
 8006396:	2201      	movs	r2, #1
 8006398:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800639c:	68fb      	ldr	r3, [r7, #12]
 800639e:	2200      	movs	r2, #0
 80063a0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80063a4:	7ffb      	ldrb	r3, [r7, #31]
 80063a6:	4618      	mov	r0, r3
 80063a8:	3720      	adds	r7, #32
 80063aa:	46bd      	mov	sp, r7
 80063ac:	bd80      	pop	{r7, pc}
	...

080063b0 <HAL_SPI_IRQHandler>:
 80063b0:	b580      	push	{r7, lr}
 80063b2:	b088      	sub	sp, #32
 80063b4:	af00      	add	r7, sp, #0
 80063b6:	6078      	str	r0, [r7, #4]
 80063b8:	687b      	ldr	r3, [r7, #4]
 80063ba:	681b      	ldr	r3, [r3, #0]
 80063bc:	685b      	ldr	r3, [r3, #4]
 80063be:	61fb      	str	r3, [r7, #28]
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	681b      	ldr	r3, [r3, #0]
 80063c4:	689b      	ldr	r3, [r3, #8]
 80063c6:	61bb      	str	r3, [r7, #24]
 80063c8:	69bb      	ldr	r3, [r7, #24]
 80063ca:	099b      	lsrs	r3, r3, #6
 80063cc:	f003 0301 	and.w	r3, r3, #1
 80063d0:	2b00      	cmp	r3, #0
 80063d2:	d10f      	bne.n	80063f4 <HAL_SPI_IRQHandler+0x44>
 80063d4:	69bb      	ldr	r3, [r7, #24]
 80063d6:	f003 0301 	and.w	r3, r3, #1
 80063da:	2b00      	cmp	r3, #0
 80063dc:	d00a      	beq.n	80063f4 <HAL_SPI_IRQHandler+0x44>
 80063de:	69fb      	ldr	r3, [r7, #28]
 80063e0:	099b      	lsrs	r3, r3, #6
 80063e2:	f003 0301 	and.w	r3, r3, #1
 80063e6:	2b00      	cmp	r3, #0
 80063e8:	d004      	beq.n	80063f4 <HAL_SPI_IRQHandler+0x44>
 80063ea:	687b      	ldr	r3, [r7, #4]
 80063ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80063ee:	6878      	ldr	r0, [r7, #4]
 80063f0:	4798      	blx	r3
 80063f2:	e0d7      	b.n	80065a4 <HAL_SPI_IRQHandler+0x1f4>
 80063f4:	69bb      	ldr	r3, [r7, #24]
 80063f6:	085b      	lsrs	r3, r3, #1
 80063f8:	f003 0301 	and.w	r3, r3, #1
 80063fc:	2b00      	cmp	r3, #0
 80063fe:	d00a      	beq.n	8006416 <HAL_SPI_IRQHandler+0x66>
 8006400:	69fb      	ldr	r3, [r7, #28]
 8006402:	09db      	lsrs	r3, r3, #7
 8006404:	f003 0301 	and.w	r3, r3, #1
 8006408:	2b00      	cmp	r3, #0
 800640a:	d004      	beq.n	8006416 <HAL_SPI_IRQHandler+0x66>
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006410:	6878      	ldr	r0, [r7, #4]
 8006412:	4798      	blx	r3
 8006414:	e0c6      	b.n	80065a4 <HAL_SPI_IRQHandler+0x1f4>
 8006416:	69bb      	ldr	r3, [r7, #24]
 8006418:	095b      	lsrs	r3, r3, #5
 800641a:	f003 0301 	and.w	r3, r3, #1
 800641e:	2b00      	cmp	r3, #0
 8006420:	d10c      	bne.n	800643c <HAL_SPI_IRQHandler+0x8c>
 8006422:	69bb      	ldr	r3, [r7, #24]
 8006424:	099b      	lsrs	r3, r3, #6
 8006426:	f003 0301 	and.w	r3, r3, #1
 800642a:	2b00      	cmp	r3, #0
 800642c:	d106      	bne.n	800643c <HAL_SPI_IRQHandler+0x8c>
 800642e:	69bb      	ldr	r3, [r7, #24]
 8006430:	0a1b      	lsrs	r3, r3, #8
 8006432:	f003 0301 	and.w	r3, r3, #1
 8006436:	2b00      	cmp	r3, #0
 8006438:	f000 80b4 	beq.w	80065a4 <HAL_SPI_IRQHandler+0x1f4>
 800643c:	69fb      	ldr	r3, [r7, #28]
 800643e:	095b      	lsrs	r3, r3, #5
 8006440:	f003 0301 	and.w	r3, r3, #1
 8006444:	2b00      	cmp	r3, #0
 8006446:	f000 80ad 	beq.w	80065a4 <HAL_SPI_IRQHandler+0x1f4>
 800644a:	69bb      	ldr	r3, [r7, #24]
 800644c:	099b      	lsrs	r3, r3, #6
 800644e:	f003 0301 	and.w	r3, r3, #1
 8006452:	2b00      	cmp	r3, #0
 8006454:	d023      	beq.n	800649e <HAL_SPI_IRQHandler+0xee>
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800645c:	b2db      	uxtb	r3, r3
 800645e:	2b03      	cmp	r3, #3
 8006460:	d011      	beq.n	8006486 <HAL_SPI_IRQHandler+0xd6>
 8006462:	687b      	ldr	r3, [r7, #4]
 8006464:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006466:	f043 0204 	orr.w	r2, r3, #4
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	655a      	str	r2, [r3, #84]	; 0x54
 800646e:	2300      	movs	r3, #0
 8006470:	617b      	str	r3, [r7, #20]
 8006472:	687b      	ldr	r3, [r7, #4]
 8006474:	681b      	ldr	r3, [r3, #0]
 8006476:	68db      	ldr	r3, [r3, #12]
 8006478:	617b      	str	r3, [r7, #20]
 800647a:	687b      	ldr	r3, [r7, #4]
 800647c:	681b      	ldr	r3, [r3, #0]
 800647e:	689b      	ldr	r3, [r3, #8]
 8006480:	617b      	str	r3, [r7, #20]
 8006482:	697b      	ldr	r3, [r7, #20]
 8006484:	e00b      	b.n	800649e <HAL_SPI_IRQHandler+0xee>
 8006486:	2300      	movs	r3, #0
 8006488:	613b      	str	r3, [r7, #16]
 800648a:	687b      	ldr	r3, [r7, #4]
 800648c:	681b      	ldr	r3, [r3, #0]
 800648e:	68db      	ldr	r3, [r3, #12]
 8006490:	613b      	str	r3, [r7, #16]
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	681b      	ldr	r3, [r3, #0]
 8006496:	689b      	ldr	r3, [r3, #8]
 8006498:	613b      	str	r3, [r7, #16]
 800649a:	693b      	ldr	r3, [r7, #16]
 800649c:	e082      	b.n	80065a4 <HAL_SPI_IRQHandler+0x1f4>
 800649e:	69bb      	ldr	r3, [r7, #24]
 80064a0:	095b      	lsrs	r3, r3, #5
 80064a2:	f003 0301 	and.w	r3, r3, #1
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d014      	beq.n	80064d4 <HAL_SPI_IRQHandler+0x124>
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80064ae:	f043 0201 	orr.w	r2, r3, #1
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	655a      	str	r2, [r3, #84]	; 0x54
 80064b6:	2300      	movs	r3, #0
 80064b8:	60fb      	str	r3, [r7, #12]
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	681b      	ldr	r3, [r3, #0]
 80064be:	689b      	ldr	r3, [r3, #8]
 80064c0:	60fb      	str	r3, [r7, #12]
 80064c2:	687b      	ldr	r3, [r7, #4]
 80064c4:	681b      	ldr	r3, [r3, #0]
 80064c6:	681a      	ldr	r2, [r3, #0]
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80064d0:	601a      	str	r2, [r3, #0]
 80064d2:	68fb      	ldr	r3, [r7, #12]
 80064d4:	69bb      	ldr	r3, [r7, #24]
 80064d6:	0a1b      	lsrs	r3, r3, #8
 80064d8:	f003 0301 	and.w	r3, r3, #1
 80064dc:	2b00      	cmp	r3, #0
 80064de:	d00c      	beq.n	80064fa <HAL_SPI_IRQHandler+0x14a>
 80064e0:	687b      	ldr	r3, [r7, #4]
 80064e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80064e4:	f043 0208 	orr.w	r2, r3, #8
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	655a      	str	r2, [r3, #84]	; 0x54
 80064ec:	2300      	movs	r3, #0
 80064ee:	60bb      	str	r3, [r7, #8]
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	681b      	ldr	r3, [r3, #0]
 80064f4:	689b      	ldr	r3, [r3, #8]
 80064f6:	60bb      	str	r3, [r7, #8]
 80064f8:	68bb      	ldr	r3, [r7, #8]
 80064fa:	687b      	ldr	r3, [r7, #4]
 80064fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d04f      	beq.n	80065a2 <HAL_SPI_IRQHandler+0x1f2>
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	681b      	ldr	r3, [r3, #0]
 8006506:	685a      	ldr	r2, [r3, #4]
 8006508:	687b      	ldr	r3, [r7, #4]
 800650a:	681b      	ldr	r3, [r3, #0]
 800650c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006510:	605a      	str	r2, [r3, #4]
 8006512:	687b      	ldr	r3, [r7, #4]
 8006514:	2201      	movs	r2, #1
 8006516:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800651a:	69fb      	ldr	r3, [r7, #28]
 800651c:	f003 0302 	and.w	r3, r3, #2
 8006520:	2b00      	cmp	r3, #0
 8006522:	d104      	bne.n	800652e <HAL_SPI_IRQHandler+0x17e>
 8006524:	69fb      	ldr	r3, [r7, #28]
 8006526:	f003 0301 	and.w	r3, r3, #1
 800652a:	2b00      	cmp	r3, #0
 800652c:	d034      	beq.n	8006598 <HAL_SPI_IRQHandler+0x1e8>
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	681b      	ldr	r3, [r3, #0]
 8006532:	685a      	ldr	r2, [r3, #4]
 8006534:	687b      	ldr	r3, [r7, #4]
 8006536:	681b      	ldr	r3, [r3, #0]
 8006538:	f022 0203 	bic.w	r2, r2, #3
 800653c:	605a      	str	r2, [r3, #4]
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006542:	2b00      	cmp	r3, #0
 8006544:	d011      	beq.n	800656a <HAL_SPI_IRQHandler+0x1ba>
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800654a:	4a18      	ldr	r2, [pc, #96]	; (80065ac <HAL_SPI_IRQHandler+0x1fc>)
 800654c:	651a      	str	r2, [r3, #80]	; 0x50
 800654e:	687b      	ldr	r3, [r7, #4]
 8006550:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006552:	4618      	mov	r0, r3
 8006554:	f7fd f8b5 	bl	80036c2 <HAL_DMA_Abort_IT>
 8006558:	4603      	mov	r3, r0
 800655a:	2b00      	cmp	r3, #0
 800655c:	d005      	beq.n	800656a <HAL_SPI_IRQHandler+0x1ba>
 800655e:	687b      	ldr	r3, [r7, #4]
 8006560:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006562:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006566:	687b      	ldr	r3, [r7, #4]
 8006568:	655a      	str	r2, [r3, #84]	; 0x54
 800656a:	687b      	ldr	r3, [r7, #4]
 800656c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800656e:	2b00      	cmp	r3, #0
 8006570:	d016      	beq.n	80065a0 <HAL_SPI_IRQHandler+0x1f0>
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006576:	4a0d      	ldr	r2, [pc, #52]	; (80065ac <HAL_SPI_IRQHandler+0x1fc>)
 8006578:	651a      	str	r2, [r3, #80]	; 0x50
 800657a:	687b      	ldr	r3, [r7, #4]
 800657c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800657e:	4618      	mov	r0, r3
 8006580:	f7fd f89f 	bl	80036c2 <HAL_DMA_Abort_IT>
 8006584:	4603      	mov	r3, r0
 8006586:	2b00      	cmp	r3, #0
 8006588:	d00a      	beq.n	80065a0 <HAL_SPI_IRQHandler+0x1f0>
 800658a:	687b      	ldr	r3, [r7, #4]
 800658c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800658e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006592:	687b      	ldr	r3, [r7, #4]
 8006594:	655a      	str	r2, [r3, #84]	; 0x54
 8006596:	e003      	b.n	80065a0 <HAL_SPI_IRQHandler+0x1f0>
 8006598:	6878      	ldr	r0, [r7, #4]
 800659a:	f000 f809 	bl	80065b0 <HAL_SPI_ErrorCallback>
 800659e:	e000      	b.n	80065a2 <HAL_SPI_IRQHandler+0x1f2>
 80065a0:	bf00      	nop
 80065a2:	bf00      	nop
 80065a4:	3720      	adds	r7, #32
 80065a6:	46bd      	mov	sp, r7
 80065a8:	bd80      	pop	{r7, pc}
 80065aa:	bf00      	nop
 80065ac:	080065c5 	.word	0x080065c5

080065b0 <HAL_SPI_ErrorCallback>:
 80065b0:	b480      	push	{r7}
 80065b2:	b083      	sub	sp, #12
 80065b4:	af00      	add	r7, sp, #0
 80065b6:	6078      	str	r0, [r7, #4]
 80065b8:	bf00      	nop
 80065ba:	370c      	adds	r7, #12
 80065bc:	46bd      	mov	sp, r7
 80065be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065c2:	4770      	bx	lr

080065c4 <SPI_DMAAbortOnError>:
 80065c4:	b580      	push	{r7, lr}
 80065c6:	b084      	sub	sp, #16
 80065c8:	af00      	add	r7, sp, #0
 80065ca:	6078      	str	r0, [r7, #4]
 80065cc:	687b      	ldr	r3, [r7, #4]
 80065ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80065d0:	60fb      	str	r3, [r7, #12]
 80065d2:	68fb      	ldr	r3, [r7, #12]
 80065d4:	2200      	movs	r2, #0
 80065d6:	87da      	strh	r2, [r3, #62]	; 0x3e
 80065d8:	68fb      	ldr	r3, [r7, #12]
 80065da:	2200      	movs	r2, #0
 80065dc:	86da      	strh	r2, [r3, #54]	; 0x36
 80065de:	68f8      	ldr	r0, [r7, #12]
 80065e0:	f7ff ffe6 	bl	80065b0 <HAL_SPI_ErrorCallback>
 80065e4:	bf00      	nop
 80065e6:	3710      	adds	r7, #16
 80065e8:	46bd      	mov	sp, r7
 80065ea:	bd80      	pop	{r7, pc}

080065ec <SPI_WaitFlagStateUntilTimeout>:
 80065ec:	b580      	push	{r7, lr}
 80065ee:	b088      	sub	sp, #32
 80065f0:	af00      	add	r7, sp, #0
 80065f2:	60f8      	str	r0, [r7, #12]
 80065f4:	60b9      	str	r1, [r7, #8]
 80065f6:	603b      	str	r3, [r7, #0]
 80065f8:	4613      	mov	r3, r2
 80065fa:	71fb      	strb	r3, [r7, #7]
 80065fc:	f7fc f80a 	bl	8002614 <HAL_GetTick>
 8006600:	4602      	mov	r2, r0
 8006602:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006604:	1a9b      	subs	r3, r3, r2
 8006606:	683a      	ldr	r2, [r7, #0]
 8006608:	4413      	add	r3, r2
 800660a:	61fb      	str	r3, [r7, #28]
 800660c:	f7fc f802 	bl	8002614 <HAL_GetTick>
 8006610:	61b8      	str	r0, [r7, #24]
 8006612:	4b39      	ldr	r3, [pc, #228]	; (80066f8 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006614:	681b      	ldr	r3, [r3, #0]
 8006616:	015b      	lsls	r3, r3, #5
 8006618:	0d1b      	lsrs	r3, r3, #20
 800661a:	69fa      	ldr	r2, [r7, #28]
 800661c:	fb02 f303 	mul.w	r3, r2, r3
 8006620:	617b      	str	r3, [r7, #20]
 8006622:	e054      	b.n	80066ce <SPI_WaitFlagStateUntilTimeout+0xe2>
 8006624:	683b      	ldr	r3, [r7, #0]
 8006626:	f1b3 3fff 	cmp.w	r3, #4294967295
 800662a:	d050      	beq.n	80066ce <SPI_WaitFlagStateUntilTimeout+0xe2>
 800662c:	f7fb fff2 	bl	8002614 <HAL_GetTick>
 8006630:	4602      	mov	r2, r0
 8006632:	69bb      	ldr	r3, [r7, #24]
 8006634:	1ad3      	subs	r3, r2, r3
 8006636:	69fa      	ldr	r2, [r7, #28]
 8006638:	429a      	cmp	r2, r3
 800663a:	d902      	bls.n	8006642 <SPI_WaitFlagStateUntilTimeout+0x56>
 800663c:	69fb      	ldr	r3, [r7, #28]
 800663e:	2b00      	cmp	r3, #0
 8006640:	d13d      	bne.n	80066be <SPI_WaitFlagStateUntilTimeout+0xd2>
 8006642:	68fb      	ldr	r3, [r7, #12]
 8006644:	681b      	ldr	r3, [r3, #0]
 8006646:	685a      	ldr	r2, [r3, #4]
 8006648:	68fb      	ldr	r3, [r7, #12]
 800664a:	681b      	ldr	r3, [r3, #0]
 800664c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006650:	605a      	str	r2, [r3, #4]
 8006652:	68fb      	ldr	r3, [r7, #12]
 8006654:	685b      	ldr	r3, [r3, #4]
 8006656:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800665a:	d111      	bne.n	8006680 <SPI_WaitFlagStateUntilTimeout+0x94>
 800665c:	68fb      	ldr	r3, [r7, #12]
 800665e:	689b      	ldr	r3, [r3, #8]
 8006660:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006664:	d004      	beq.n	8006670 <SPI_WaitFlagStateUntilTimeout+0x84>
 8006666:	68fb      	ldr	r3, [r7, #12]
 8006668:	689b      	ldr	r3, [r3, #8]
 800666a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800666e:	d107      	bne.n	8006680 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006670:	68fb      	ldr	r3, [r7, #12]
 8006672:	681b      	ldr	r3, [r3, #0]
 8006674:	681a      	ldr	r2, [r3, #0]
 8006676:	68fb      	ldr	r3, [r7, #12]
 8006678:	681b      	ldr	r3, [r3, #0]
 800667a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800667e:	601a      	str	r2, [r3, #0]
 8006680:	68fb      	ldr	r3, [r7, #12]
 8006682:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006684:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006688:	d10f      	bne.n	80066aa <SPI_WaitFlagStateUntilTimeout+0xbe>
 800668a:	68fb      	ldr	r3, [r7, #12]
 800668c:	681b      	ldr	r3, [r3, #0]
 800668e:	681a      	ldr	r2, [r3, #0]
 8006690:	68fb      	ldr	r3, [r7, #12]
 8006692:	681b      	ldr	r3, [r3, #0]
 8006694:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006698:	601a      	str	r2, [r3, #0]
 800669a:	68fb      	ldr	r3, [r7, #12]
 800669c:	681b      	ldr	r3, [r3, #0]
 800669e:	681a      	ldr	r2, [r3, #0]
 80066a0:	68fb      	ldr	r3, [r7, #12]
 80066a2:	681b      	ldr	r3, [r3, #0]
 80066a4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80066a8:	601a      	str	r2, [r3, #0]
 80066aa:	68fb      	ldr	r3, [r7, #12]
 80066ac:	2201      	movs	r2, #1
 80066ae:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80066b2:	68fb      	ldr	r3, [r7, #12]
 80066b4:	2200      	movs	r2, #0
 80066b6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80066ba:	2303      	movs	r3, #3
 80066bc:	e017      	b.n	80066ee <SPI_WaitFlagStateUntilTimeout+0x102>
 80066be:	697b      	ldr	r3, [r7, #20]
 80066c0:	2b00      	cmp	r3, #0
 80066c2:	d101      	bne.n	80066c8 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80066c4:	2300      	movs	r3, #0
 80066c6:	61fb      	str	r3, [r7, #28]
 80066c8:	697b      	ldr	r3, [r7, #20]
 80066ca:	3b01      	subs	r3, #1
 80066cc:	617b      	str	r3, [r7, #20]
 80066ce:	68fb      	ldr	r3, [r7, #12]
 80066d0:	681b      	ldr	r3, [r3, #0]
 80066d2:	689a      	ldr	r2, [r3, #8]
 80066d4:	68bb      	ldr	r3, [r7, #8]
 80066d6:	4013      	ands	r3, r2
 80066d8:	68ba      	ldr	r2, [r7, #8]
 80066da:	429a      	cmp	r2, r3
 80066dc:	bf0c      	ite	eq
 80066de:	2301      	moveq	r3, #1
 80066e0:	2300      	movne	r3, #0
 80066e2:	b2db      	uxtb	r3, r3
 80066e4:	461a      	mov	r2, r3
 80066e6:	79fb      	ldrb	r3, [r7, #7]
 80066e8:	429a      	cmp	r2, r3
 80066ea:	d19b      	bne.n	8006624 <SPI_WaitFlagStateUntilTimeout+0x38>
 80066ec:	2300      	movs	r3, #0
 80066ee:	4618      	mov	r0, r3
 80066f0:	3720      	adds	r7, #32
 80066f2:	46bd      	mov	sp, r7
 80066f4:	bd80      	pop	{r7, pc}
 80066f6:	bf00      	nop
 80066f8:	20012c40 	.word	0x20012c40

080066fc <SPI_EndRxTxTransaction>:
 80066fc:	b580      	push	{r7, lr}
 80066fe:	b088      	sub	sp, #32
 8006700:	af02      	add	r7, sp, #8
 8006702:	60f8      	str	r0, [r7, #12]
 8006704:	60b9      	str	r1, [r7, #8]
 8006706:	607a      	str	r2, [r7, #4]
 8006708:	4b1b      	ldr	r3, [pc, #108]	; (8006778 <SPI_EndRxTxTransaction+0x7c>)
 800670a:	681b      	ldr	r3, [r3, #0]
 800670c:	4a1b      	ldr	r2, [pc, #108]	; (800677c <SPI_EndRxTxTransaction+0x80>)
 800670e:	fba2 2303 	umull	r2, r3, r2, r3
 8006712:	0d5b      	lsrs	r3, r3, #21
 8006714:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006718:	fb02 f303 	mul.w	r3, r2, r3
 800671c:	617b      	str	r3, [r7, #20]
 800671e:	68fb      	ldr	r3, [r7, #12]
 8006720:	685b      	ldr	r3, [r3, #4]
 8006722:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006726:	d112      	bne.n	800674e <SPI_EndRxTxTransaction+0x52>
 8006728:	687b      	ldr	r3, [r7, #4]
 800672a:	9300      	str	r3, [sp, #0]
 800672c:	68bb      	ldr	r3, [r7, #8]
 800672e:	2200      	movs	r2, #0
 8006730:	2180      	movs	r1, #128	; 0x80
 8006732:	68f8      	ldr	r0, [r7, #12]
 8006734:	f7ff ff5a 	bl	80065ec <SPI_WaitFlagStateUntilTimeout>
 8006738:	4603      	mov	r3, r0
 800673a:	2b00      	cmp	r3, #0
 800673c:	d016      	beq.n	800676c <SPI_EndRxTxTransaction+0x70>
 800673e:	68fb      	ldr	r3, [r7, #12]
 8006740:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006742:	f043 0220 	orr.w	r2, r3, #32
 8006746:	68fb      	ldr	r3, [r7, #12]
 8006748:	655a      	str	r2, [r3, #84]	; 0x54
 800674a:	2303      	movs	r3, #3
 800674c:	e00f      	b.n	800676e <SPI_EndRxTxTransaction+0x72>
 800674e:	697b      	ldr	r3, [r7, #20]
 8006750:	2b00      	cmp	r3, #0
 8006752:	d00a      	beq.n	800676a <SPI_EndRxTxTransaction+0x6e>
 8006754:	697b      	ldr	r3, [r7, #20]
 8006756:	3b01      	subs	r3, #1
 8006758:	617b      	str	r3, [r7, #20]
 800675a:	68fb      	ldr	r3, [r7, #12]
 800675c:	681b      	ldr	r3, [r3, #0]
 800675e:	689b      	ldr	r3, [r3, #8]
 8006760:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006764:	2b80      	cmp	r3, #128	; 0x80
 8006766:	d0f2      	beq.n	800674e <SPI_EndRxTxTransaction+0x52>
 8006768:	e000      	b.n	800676c <SPI_EndRxTxTransaction+0x70>
 800676a:	bf00      	nop
 800676c:	2300      	movs	r3, #0
 800676e:	4618      	mov	r0, r3
 8006770:	3718      	adds	r7, #24
 8006772:	46bd      	mov	sp, r7
 8006774:	bd80      	pop	{r7, pc}
 8006776:	bf00      	nop
 8006778:	20012c40 	.word	0x20012c40
 800677c:	165e9f81 	.word	0x165e9f81

08006780 <HAL_TIM_Base_Init>:
 8006780:	b580      	push	{r7, lr}
 8006782:	b082      	sub	sp, #8
 8006784:	af00      	add	r7, sp, #0
 8006786:	6078      	str	r0, [r7, #4]
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	2b00      	cmp	r3, #0
 800678c:	d101      	bne.n	8006792 <HAL_TIM_Base_Init+0x12>
 800678e:	2301      	movs	r3, #1
 8006790:	e041      	b.n	8006816 <HAL_TIM_Base_Init+0x96>
 8006792:	687b      	ldr	r3, [r7, #4]
 8006794:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006798:	b2db      	uxtb	r3, r3
 800679a:	2b00      	cmp	r3, #0
 800679c:	d106      	bne.n	80067ac <HAL_TIM_Base_Init+0x2c>
 800679e:	687b      	ldr	r3, [r7, #4]
 80067a0:	2200      	movs	r2, #0
 80067a2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80067a6:	6878      	ldr	r0, [r7, #4]
 80067a8:	f7fb fb0e 	bl	8001dc8 <HAL_TIM_Base_MspInit>
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	2202      	movs	r2, #2
 80067b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	681a      	ldr	r2, [r3, #0]
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	3304      	adds	r3, #4
 80067bc:	4619      	mov	r1, r3
 80067be:	4610      	mov	r0, r2
 80067c0:	f000 fd94 	bl	80072ec <TIM_Base_SetConfig>
 80067c4:	687b      	ldr	r3, [r7, #4]
 80067c6:	2201      	movs	r2, #1
 80067c8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	2201      	movs	r2, #1
 80067d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	2201      	movs	r2, #1
 80067d8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	2201      	movs	r2, #1
 80067e0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80067e4:	687b      	ldr	r3, [r7, #4]
 80067e6:	2201      	movs	r2, #1
 80067e8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80067ec:	687b      	ldr	r3, [r7, #4]
 80067ee:	2201      	movs	r2, #1
 80067f0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	2201      	movs	r2, #1
 80067f8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	2201      	movs	r2, #1
 8006800:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	2201      	movs	r2, #1
 8006808:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	2201      	movs	r2, #1
 8006810:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006814:	2300      	movs	r3, #0
 8006816:	4618      	mov	r0, r3
 8006818:	3708      	adds	r7, #8
 800681a:	46bd      	mov	sp, r7
 800681c:	bd80      	pop	{r7, pc}
	...

08006820 <HAL_TIM_Base_Start_IT>:
 8006820:	b480      	push	{r7}
 8006822:	b085      	sub	sp, #20
 8006824:	af00      	add	r7, sp, #0
 8006826:	6078      	str	r0, [r7, #4]
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800682e:	b2db      	uxtb	r3, r3
 8006830:	2b01      	cmp	r3, #1
 8006832:	d001      	beq.n	8006838 <HAL_TIM_Base_Start_IT+0x18>
 8006834:	2301      	movs	r3, #1
 8006836:	e04e      	b.n	80068d6 <HAL_TIM_Base_Start_IT+0xb6>
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	2202      	movs	r2, #2
 800683c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	681b      	ldr	r3, [r3, #0]
 8006844:	68da      	ldr	r2, [r3, #12]
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	681b      	ldr	r3, [r3, #0]
 800684a:	f042 0201 	orr.w	r2, r2, #1
 800684e:	60da      	str	r2, [r3, #12]
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	681b      	ldr	r3, [r3, #0]
 8006854:	4a23      	ldr	r2, [pc, #140]	; (80068e4 <HAL_TIM_Base_Start_IT+0xc4>)
 8006856:	4293      	cmp	r3, r2
 8006858:	d022      	beq.n	80068a0 <HAL_TIM_Base_Start_IT+0x80>
 800685a:	687b      	ldr	r3, [r7, #4]
 800685c:	681b      	ldr	r3, [r3, #0]
 800685e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006862:	d01d      	beq.n	80068a0 <HAL_TIM_Base_Start_IT+0x80>
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	681b      	ldr	r3, [r3, #0]
 8006868:	4a1f      	ldr	r2, [pc, #124]	; (80068e8 <HAL_TIM_Base_Start_IT+0xc8>)
 800686a:	4293      	cmp	r3, r2
 800686c:	d018      	beq.n	80068a0 <HAL_TIM_Base_Start_IT+0x80>
 800686e:	687b      	ldr	r3, [r7, #4]
 8006870:	681b      	ldr	r3, [r3, #0]
 8006872:	4a1e      	ldr	r2, [pc, #120]	; (80068ec <HAL_TIM_Base_Start_IT+0xcc>)
 8006874:	4293      	cmp	r3, r2
 8006876:	d013      	beq.n	80068a0 <HAL_TIM_Base_Start_IT+0x80>
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	681b      	ldr	r3, [r3, #0]
 800687c:	4a1c      	ldr	r2, [pc, #112]	; (80068f0 <HAL_TIM_Base_Start_IT+0xd0>)
 800687e:	4293      	cmp	r3, r2
 8006880:	d00e      	beq.n	80068a0 <HAL_TIM_Base_Start_IT+0x80>
 8006882:	687b      	ldr	r3, [r7, #4]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	4a1b      	ldr	r2, [pc, #108]	; (80068f4 <HAL_TIM_Base_Start_IT+0xd4>)
 8006888:	4293      	cmp	r3, r2
 800688a:	d009      	beq.n	80068a0 <HAL_TIM_Base_Start_IT+0x80>
 800688c:	687b      	ldr	r3, [r7, #4]
 800688e:	681b      	ldr	r3, [r3, #0]
 8006890:	4a19      	ldr	r2, [pc, #100]	; (80068f8 <HAL_TIM_Base_Start_IT+0xd8>)
 8006892:	4293      	cmp	r3, r2
 8006894:	d004      	beq.n	80068a0 <HAL_TIM_Base_Start_IT+0x80>
 8006896:	687b      	ldr	r3, [r7, #4]
 8006898:	681b      	ldr	r3, [r3, #0]
 800689a:	4a18      	ldr	r2, [pc, #96]	; (80068fc <HAL_TIM_Base_Start_IT+0xdc>)
 800689c:	4293      	cmp	r3, r2
 800689e:	d111      	bne.n	80068c4 <HAL_TIM_Base_Start_IT+0xa4>
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	689b      	ldr	r3, [r3, #8]
 80068a6:	f003 0307 	and.w	r3, r3, #7
 80068aa:	60fb      	str	r3, [r7, #12]
 80068ac:	68fb      	ldr	r3, [r7, #12]
 80068ae:	2b06      	cmp	r3, #6
 80068b0:	d010      	beq.n	80068d4 <HAL_TIM_Base_Start_IT+0xb4>
 80068b2:	687b      	ldr	r3, [r7, #4]
 80068b4:	681b      	ldr	r3, [r3, #0]
 80068b6:	681a      	ldr	r2, [r3, #0]
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	681b      	ldr	r3, [r3, #0]
 80068bc:	f042 0201 	orr.w	r2, r2, #1
 80068c0:	601a      	str	r2, [r3, #0]
 80068c2:	e007      	b.n	80068d4 <HAL_TIM_Base_Start_IT+0xb4>
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	681b      	ldr	r3, [r3, #0]
 80068c8:	681a      	ldr	r2, [r3, #0]
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	f042 0201 	orr.w	r2, r2, #1
 80068d2:	601a      	str	r2, [r3, #0]
 80068d4:	2300      	movs	r3, #0
 80068d6:	4618      	mov	r0, r3
 80068d8:	3714      	adds	r7, #20
 80068da:	46bd      	mov	sp, r7
 80068dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068e0:	4770      	bx	lr
 80068e2:	bf00      	nop
 80068e4:	40010000 	.word	0x40010000
 80068e8:	40000400 	.word	0x40000400
 80068ec:	40000800 	.word	0x40000800
 80068f0:	40000c00 	.word	0x40000c00
 80068f4:	40010400 	.word	0x40010400
 80068f8:	40014000 	.word	0x40014000
 80068fc:	40001800 	.word	0x40001800

08006900 <HAL_TIM_OC_Init>:
 8006900:	b580      	push	{r7, lr}
 8006902:	b082      	sub	sp, #8
 8006904:	af00      	add	r7, sp, #0
 8006906:	6078      	str	r0, [r7, #4]
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	2b00      	cmp	r3, #0
 800690c:	d101      	bne.n	8006912 <HAL_TIM_OC_Init+0x12>
 800690e:	2301      	movs	r3, #1
 8006910:	e041      	b.n	8006996 <HAL_TIM_OC_Init+0x96>
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006918:	b2db      	uxtb	r3, r3
 800691a:	2b00      	cmp	r3, #0
 800691c:	d106      	bne.n	800692c <HAL_TIM_OC_Init+0x2c>
 800691e:	687b      	ldr	r3, [r7, #4]
 8006920:	2200      	movs	r2, #0
 8006922:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006926:	6878      	ldr	r0, [r7, #4]
 8006928:	f7fb fa0a 	bl	8001d40 <HAL_TIM_OC_MspInit>
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	2202      	movs	r2, #2
 8006930:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	681a      	ldr	r2, [r3, #0]
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	3304      	adds	r3, #4
 800693c:	4619      	mov	r1, r3
 800693e:	4610      	mov	r0, r2
 8006940:	f000 fcd4 	bl	80072ec <TIM_Base_SetConfig>
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	2201      	movs	r2, #1
 8006948:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	2201      	movs	r2, #1
 8006950:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	2201      	movs	r2, #1
 8006958:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800695c:	687b      	ldr	r3, [r7, #4]
 800695e:	2201      	movs	r2, #1
 8006960:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006964:	687b      	ldr	r3, [r7, #4]
 8006966:	2201      	movs	r2, #1
 8006968:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800696c:	687b      	ldr	r3, [r7, #4]
 800696e:	2201      	movs	r2, #1
 8006970:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006974:	687b      	ldr	r3, [r7, #4]
 8006976:	2201      	movs	r2, #1
 8006978:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	2201      	movs	r2, #1
 8006980:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	2201      	movs	r2, #1
 8006988:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	2201      	movs	r2, #1
 8006990:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006994:	2300      	movs	r3, #0
 8006996:	4618      	mov	r0, r3
 8006998:	3708      	adds	r7, #8
 800699a:	46bd      	mov	sp, r7
 800699c:	bd80      	pop	{r7, pc}

0800699e <HAL_TIM_PWM_Init>:
 800699e:	b580      	push	{r7, lr}
 80069a0:	b082      	sub	sp, #8
 80069a2:	af00      	add	r7, sp, #0
 80069a4:	6078      	str	r0, [r7, #4]
 80069a6:	687b      	ldr	r3, [r7, #4]
 80069a8:	2b00      	cmp	r3, #0
 80069aa:	d101      	bne.n	80069b0 <HAL_TIM_PWM_Init+0x12>
 80069ac:	2301      	movs	r3, #1
 80069ae:	e041      	b.n	8006a34 <HAL_TIM_PWM_Init+0x96>
 80069b0:	687b      	ldr	r3, [r7, #4]
 80069b2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80069b6:	b2db      	uxtb	r3, r3
 80069b8:	2b00      	cmp	r3, #0
 80069ba:	d106      	bne.n	80069ca <HAL_TIM_PWM_Init+0x2c>
 80069bc:	687b      	ldr	r3, [r7, #4]
 80069be:	2200      	movs	r2, #0
 80069c0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80069c4:	6878      	ldr	r0, [r7, #4]
 80069c6:	f000 f839 	bl	8006a3c <HAL_TIM_PWM_MspInit>
 80069ca:	687b      	ldr	r3, [r7, #4]
 80069cc:	2202      	movs	r2, #2
 80069ce:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	681a      	ldr	r2, [r3, #0]
 80069d6:	687b      	ldr	r3, [r7, #4]
 80069d8:	3304      	adds	r3, #4
 80069da:	4619      	mov	r1, r3
 80069dc:	4610      	mov	r0, r2
 80069de:	f000 fc85 	bl	80072ec <TIM_Base_SetConfig>
 80069e2:	687b      	ldr	r3, [r7, #4]
 80069e4:	2201      	movs	r2, #1
 80069e6:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80069ea:	687b      	ldr	r3, [r7, #4]
 80069ec:	2201      	movs	r2, #1
 80069ee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	2201      	movs	r2, #1
 80069f6:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	2201      	movs	r2, #1
 80069fe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	2201      	movs	r2, #1
 8006a06:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	2201      	movs	r2, #1
 8006a0e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006a12:	687b      	ldr	r3, [r7, #4]
 8006a14:	2201      	movs	r2, #1
 8006a16:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006a1a:	687b      	ldr	r3, [r7, #4]
 8006a1c:	2201      	movs	r2, #1
 8006a1e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	2201      	movs	r2, #1
 8006a26:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006a2a:	687b      	ldr	r3, [r7, #4]
 8006a2c:	2201      	movs	r2, #1
 8006a2e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006a32:	2300      	movs	r3, #0
 8006a34:	4618      	mov	r0, r3
 8006a36:	3708      	adds	r7, #8
 8006a38:	46bd      	mov	sp, r7
 8006a3a:	bd80      	pop	{r7, pc}

08006a3c <HAL_TIM_PWM_MspInit>:
 8006a3c:	b480      	push	{r7}
 8006a3e:	b083      	sub	sp, #12
 8006a40:	af00      	add	r7, sp, #0
 8006a42:	6078      	str	r0, [r7, #4]
 8006a44:	bf00      	nop
 8006a46:	370c      	adds	r7, #12
 8006a48:	46bd      	mov	sp, r7
 8006a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a4e:	4770      	bx	lr

08006a50 <HAL_TIM_PWM_Start>:
 8006a50:	b580      	push	{r7, lr}
 8006a52:	b084      	sub	sp, #16
 8006a54:	af00      	add	r7, sp, #0
 8006a56:	6078      	str	r0, [r7, #4]
 8006a58:	6039      	str	r1, [r7, #0]
 8006a5a:	683b      	ldr	r3, [r7, #0]
 8006a5c:	2b00      	cmp	r3, #0
 8006a5e:	d109      	bne.n	8006a74 <HAL_TIM_PWM_Start+0x24>
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006a66:	b2db      	uxtb	r3, r3
 8006a68:	2b01      	cmp	r3, #1
 8006a6a:	bf14      	ite	ne
 8006a6c:	2301      	movne	r3, #1
 8006a6e:	2300      	moveq	r3, #0
 8006a70:	b2db      	uxtb	r3, r3
 8006a72:	e022      	b.n	8006aba <HAL_TIM_PWM_Start+0x6a>
 8006a74:	683b      	ldr	r3, [r7, #0]
 8006a76:	2b04      	cmp	r3, #4
 8006a78:	d109      	bne.n	8006a8e <HAL_TIM_PWM_Start+0x3e>
 8006a7a:	687b      	ldr	r3, [r7, #4]
 8006a7c:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8006a80:	b2db      	uxtb	r3, r3
 8006a82:	2b01      	cmp	r3, #1
 8006a84:	bf14      	ite	ne
 8006a86:	2301      	movne	r3, #1
 8006a88:	2300      	moveq	r3, #0
 8006a8a:	b2db      	uxtb	r3, r3
 8006a8c:	e015      	b.n	8006aba <HAL_TIM_PWM_Start+0x6a>
 8006a8e:	683b      	ldr	r3, [r7, #0]
 8006a90:	2b08      	cmp	r3, #8
 8006a92:	d109      	bne.n	8006aa8 <HAL_TIM_PWM_Start+0x58>
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8006a9a:	b2db      	uxtb	r3, r3
 8006a9c:	2b01      	cmp	r3, #1
 8006a9e:	bf14      	ite	ne
 8006aa0:	2301      	movne	r3, #1
 8006aa2:	2300      	moveq	r3, #0
 8006aa4:	b2db      	uxtb	r3, r3
 8006aa6:	e008      	b.n	8006aba <HAL_TIM_PWM_Start+0x6a>
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006aae:	b2db      	uxtb	r3, r3
 8006ab0:	2b01      	cmp	r3, #1
 8006ab2:	bf14      	ite	ne
 8006ab4:	2301      	movne	r3, #1
 8006ab6:	2300      	moveq	r3, #0
 8006ab8:	b2db      	uxtb	r3, r3
 8006aba:	2b00      	cmp	r3, #0
 8006abc:	d001      	beq.n	8006ac2 <HAL_TIM_PWM_Start+0x72>
 8006abe:	2301      	movs	r3, #1
 8006ac0:	e07c      	b.n	8006bbc <HAL_TIM_PWM_Start+0x16c>
 8006ac2:	683b      	ldr	r3, [r7, #0]
 8006ac4:	2b00      	cmp	r3, #0
 8006ac6:	d104      	bne.n	8006ad2 <HAL_TIM_PWM_Start+0x82>
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	2202      	movs	r2, #2
 8006acc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006ad0:	e013      	b.n	8006afa <HAL_TIM_PWM_Start+0xaa>
 8006ad2:	683b      	ldr	r3, [r7, #0]
 8006ad4:	2b04      	cmp	r3, #4
 8006ad6:	d104      	bne.n	8006ae2 <HAL_TIM_PWM_Start+0x92>
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	2202      	movs	r2, #2
 8006adc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006ae0:	e00b      	b.n	8006afa <HAL_TIM_PWM_Start+0xaa>
 8006ae2:	683b      	ldr	r3, [r7, #0]
 8006ae4:	2b08      	cmp	r3, #8
 8006ae6:	d104      	bne.n	8006af2 <HAL_TIM_PWM_Start+0xa2>
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	2202      	movs	r2, #2
 8006aec:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006af0:	e003      	b.n	8006afa <HAL_TIM_PWM_Start+0xaa>
 8006af2:	687b      	ldr	r3, [r7, #4]
 8006af4:	2202      	movs	r2, #2
 8006af6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	2201      	movs	r2, #1
 8006b00:	6839      	ldr	r1, [r7, #0]
 8006b02:	4618      	mov	r0, r3
 8006b04:	f000 fedc 	bl	80078c0 <TIM_CCxChannelCmd>
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	681b      	ldr	r3, [r3, #0]
 8006b0c:	4a2d      	ldr	r2, [pc, #180]	; (8006bc4 <HAL_TIM_PWM_Start+0x174>)
 8006b0e:	4293      	cmp	r3, r2
 8006b10:	d004      	beq.n	8006b1c <HAL_TIM_PWM_Start+0xcc>
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	681b      	ldr	r3, [r3, #0]
 8006b16:	4a2c      	ldr	r2, [pc, #176]	; (8006bc8 <HAL_TIM_PWM_Start+0x178>)
 8006b18:	4293      	cmp	r3, r2
 8006b1a:	d101      	bne.n	8006b20 <HAL_TIM_PWM_Start+0xd0>
 8006b1c:	2301      	movs	r3, #1
 8006b1e:	e000      	b.n	8006b22 <HAL_TIM_PWM_Start+0xd2>
 8006b20:	2300      	movs	r3, #0
 8006b22:	2b00      	cmp	r3, #0
 8006b24:	d007      	beq.n	8006b36 <HAL_TIM_PWM_Start+0xe6>
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	681b      	ldr	r3, [r3, #0]
 8006b2a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006b34:	645a      	str	r2, [r3, #68]	; 0x44
 8006b36:	687b      	ldr	r3, [r7, #4]
 8006b38:	681b      	ldr	r3, [r3, #0]
 8006b3a:	4a22      	ldr	r2, [pc, #136]	; (8006bc4 <HAL_TIM_PWM_Start+0x174>)
 8006b3c:	4293      	cmp	r3, r2
 8006b3e:	d022      	beq.n	8006b86 <HAL_TIM_PWM_Start+0x136>
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006b48:	d01d      	beq.n	8006b86 <HAL_TIM_PWM_Start+0x136>
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	4a1f      	ldr	r2, [pc, #124]	; (8006bcc <HAL_TIM_PWM_Start+0x17c>)
 8006b50:	4293      	cmp	r3, r2
 8006b52:	d018      	beq.n	8006b86 <HAL_TIM_PWM_Start+0x136>
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	681b      	ldr	r3, [r3, #0]
 8006b58:	4a1d      	ldr	r2, [pc, #116]	; (8006bd0 <HAL_TIM_PWM_Start+0x180>)
 8006b5a:	4293      	cmp	r3, r2
 8006b5c:	d013      	beq.n	8006b86 <HAL_TIM_PWM_Start+0x136>
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	681b      	ldr	r3, [r3, #0]
 8006b62:	4a1c      	ldr	r2, [pc, #112]	; (8006bd4 <HAL_TIM_PWM_Start+0x184>)
 8006b64:	4293      	cmp	r3, r2
 8006b66:	d00e      	beq.n	8006b86 <HAL_TIM_PWM_Start+0x136>
 8006b68:	687b      	ldr	r3, [r7, #4]
 8006b6a:	681b      	ldr	r3, [r3, #0]
 8006b6c:	4a16      	ldr	r2, [pc, #88]	; (8006bc8 <HAL_TIM_PWM_Start+0x178>)
 8006b6e:	4293      	cmp	r3, r2
 8006b70:	d009      	beq.n	8006b86 <HAL_TIM_PWM_Start+0x136>
 8006b72:	687b      	ldr	r3, [r7, #4]
 8006b74:	681b      	ldr	r3, [r3, #0]
 8006b76:	4a18      	ldr	r2, [pc, #96]	; (8006bd8 <HAL_TIM_PWM_Start+0x188>)
 8006b78:	4293      	cmp	r3, r2
 8006b7a:	d004      	beq.n	8006b86 <HAL_TIM_PWM_Start+0x136>
 8006b7c:	687b      	ldr	r3, [r7, #4]
 8006b7e:	681b      	ldr	r3, [r3, #0]
 8006b80:	4a16      	ldr	r2, [pc, #88]	; (8006bdc <HAL_TIM_PWM_Start+0x18c>)
 8006b82:	4293      	cmp	r3, r2
 8006b84:	d111      	bne.n	8006baa <HAL_TIM_PWM_Start+0x15a>
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	681b      	ldr	r3, [r3, #0]
 8006b8a:	689b      	ldr	r3, [r3, #8]
 8006b8c:	f003 0307 	and.w	r3, r3, #7
 8006b90:	60fb      	str	r3, [r7, #12]
 8006b92:	68fb      	ldr	r3, [r7, #12]
 8006b94:	2b06      	cmp	r3, #6
 8006b96:	d010      	beq.n	8006bba <HAL_TIM_PWM_Start+0x16a>
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	681a      	ldr	r2, [r3, #0]
 8006b9e:	687b      	ldr	r3, [r7, #4]
 8006ba0:	681b      	ldr	r3, [r3, #0]
 8006ba2:	f042 0201 	orr.w	r2, r2, #1
 8006ba6:	601a      	str	r2, [r3, #0]
 8006ba8:	e007      	b.n	8006bba <HAL_TIM_PWM_Start+0x16a>
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	681b      	ldr	r3, [r3, #0]
 8006bae:	681a      	ldr	r2, [r3, #0]
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	f042 0201 	orr.w	r2, r2, #1
 8006bb8:	601a      	str	r2, [r3, #0]
 8006bba:	2300      	movs	r3, #0
 8006bbc:	4618      	mov	r0, r3
 8006bbe:	3710      	adds	r7, #16
 8006bc0:	46bd      	mov	sp, r7
 8006bc2:	bd80      	pop	{r7, pc}
 8006bc4:	40010000 	.word	0x40010000
 8006bc8:	40010400 	.word	0x40010400
 8006bcc:	40000400 	.word	0x40000400
 8006bd0:	40000800 	.word	0x40000800
 8006bd4:	40000c00 	.word	0x40000c00
 8006bd8:	40014000 	.word	0x40014000
 8006bdc:	40001800 	.word	0x40001800

08006be0 <HAL_TIM_PWM_Stop>:
 8006be0:	b580      	push	{r7, lr}
 8006be2:	b082      	sub	sp, #8
 8006be4:	af00      	add	r7, sp, #0
 8006be6:	6078      	str	r0, [r7, #4]
 8006be8:	6039      	str	r1, [r7, #0]
 8006bea:	687b      	ldr	r3, [r7, #4]
 8006bec:	681b      	ldr	r3, [r3, #0]
 8006bee:	2200      	movs	r2, #0
 8006bf0:	6839      	ldr	r1, [r7, #0]
 8006bf2:	4618      	mov	r0, r3
 8006bf4:	f000 fe64 	bl	80078c0 <TIM_CCxChannelCmd>
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	681b      	ldr	r3, [r3, #0]
 8006bfc:	4a2e      	ldr	r2, [pc, #184]	; (8006cb8 <HAL_TIM_PWM_Stop+0xd8>)
 8006bfe:	4293      	cmp	r3, r2
 8006c00:	d004      	beq.n	8006c0c <HAL_TIM_PWM_Stop+0x2c>
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	681b      	ldr	r3, [r3, #0]
 8006c06:	4a2d      	ldr	r2, [pc, #180]	; (8006cbc <HAL_TIM_PWM_Stop+0xdc>)
 8006c08:	4293      	cmp	r3, r2
 8006c0a:	d101      	bne.n	8006c10 <HAL_TIM_PWM_Stop+0x30>
 8006c0c:	2301      	movs	r3, #1
 8006c0e:	e000      	b.n	8006c12 <HAL_TIM_PWM_Stop+0x32>
 8006c10:	2300      	movs	r3, #0
 8006c12:	2b00      	cmp	r3, #0
 8006c14:	d017      	beq.n	8006c46 <HAL_TIM_PWM_Stop+0x66>
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	681b      	ldr	r3, [r3, #0]
 8006c1a:	6a1a      	ldr	r2, [r3, #32]
 8006c1c:	f241 1311 	movw	r3, #4369	; 0x1111
 8006c20:	4013      	ands	r3, r2
 8006c22:	2b00      	cmp	r3, #0
 8006c24:	d10f      	bne.n	8006c46 <HAL_TIM_PWM_Stop+0x66>
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	6a1a      	ldr	r2, [r3, #32]
 8006c2c:	f240 4344 	movw	r3, #1092	; 0x444
 8006c30:	4013      	ands	r3, r2
 8006c32:	2b00      	cmp	r3, #0
 8006c34:	d107      	bne.n	8006c46 <HAL_TIM_PWM_Stop+0x66>
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	681b      	ldr	r3, [r3, #0]
 8006c3a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	681b      	ldr	r3, [r3, #0]
 8006c40:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006c44:	645a      	str	r2, [r3, #68]	; 0x44
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	681b      	ldr	r3, [r3, #0]
 8006c4a:	6a1a      	ldr	r2, [r3, #32]
 8006c4c:	f241 1311 	movw	r3, #4369	; 0x1111
 8006c50:	4013      	ands	r3, r2
 8006c52:	2b00      	cmp	r3, #0
 8006c54:	d10f      	bne.n	8006c76 <HAL_TIM_PWM_Stop+0x96>
 8006c56:	687b      	ldr	r3, [r7, #4]
 8006c58:	681b      	ldr	r3, [r3, #0]
 8006c5a:	6a1a      	ldr	r2, [r3, #32]
 8006c5c:	f240 4344 	movw	r3, #1092	; 0x444
 8006c60:	4013      	ands	r3, r2
 8006c62:	2b00      	cmp	r3, #0
 8006c64:	d107      	bne.n	8006c76 <HAL_TIM_PWM_Stop+0x96>
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	681b      	ldr	r3, [r3, #0]
 8006c6a:	681a      	ldr	r2, [r3, #0]
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	681b      	ldr	r3, [r3, #0]
 8006c70:	f022 0201 	bic.w	r2, r2, #1
 8006c74:	601a      	str	r2, [r3, #0]
 8006c76:	683b      	ldr	r3, [r7, #0]
 8006c78:	2b00      	cmp	r3, #0
 8006c7a:	d104      	bne.n	8006c86 <HAL_TIM_PWM_Stop+0xa6>
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	2201      	movs	r2, #1
 8006c80:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006c84:	e013      	b.n	8006cae <HAL_TIM_PWM_Stop+0xce>
 8006c86:	683b      	ldr	r3, [r7, #0]
 8006c88:	2b04      	cmp	r3, #4
 8006c8a:	d104      	bne.n	8006c96 <HAL_TIM_PWM_Stop+0xb6>
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	2201      	movs	r2, #1
 8006c90:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006c94:	e00b      	b.n	8006cae <HAL_TIM_PWM_Stop+0xce>
 8006c96:	683b      	ldr	r3, [r7, #0]
 8006c98:	2b08      	cmp	r3, #8
 8006c9a:	d104      	bne.n	8006ca6 <HAL_TIM_PWM_Stop+0xc6>
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	2201      	movs	r2, #1
 8006ca0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006ca4:	e003      	b.n	8006cae <HAL_TIM_PWM_Stop+0xce>
 8006ca6:	687b      	ldr	r3, [r7, #4]
 8006ca8:	2201      	movs	r2, #1
 8006caa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006cae:	2300      	movs	r3, #0
 8006cb0:	4618      	mov	r0, r3
 8006cb2:	3708      	adds	r7, #8
 8006cb4:	46bd      	mov	sp, r7
 8006cb6:	bd80      	pop	{r7, pc}
 8006cb8:	40010000 	.word	0x40010000
 8006cbc:	40010400 	.word	0x40010400

08006cc0 <HAL_TIM_IRQHandler>:
 8006cc0:	b580      	push	{r7, lr}
 8006cc2:	b082      	sub	sp, #8
 8006cc4:	af00      	add	r7, sp, #0
 8006cc6:	6078      	str	r0, [r7, #4]
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	681b      	ldr	r3, [r3, #0]
 8006ccc:	691b      	ldr	r3, [r3, #16]
 8006cce:	f003 0302 	and.w	r3, r3, #2
 8006cd2:	2b02      	cmp	r3, #2
 8006cd4:	d122      	bne.n	8006d1c <HAL_TIM_IRQHandler+0x5c>
 8006cd6:	687b      	ldr	r3, [r7, #4]
 8006cd8:	681b      	ldr	r3, [r3, #0]
 8006cda:	68db      	ldr	r3, [r3, #12]
 8006cdc:	f003 0302 	and.w	r3, r3, #2
 8006ce0:	2b02      	cmp	r3, #2
 8006ce2:	d11b      	bne.n	8006d1c <HAL_TIM_IRQHandler+0x5c>
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	681b      	ldr	r3, [r3, #0]
 8006ce8:	f06f 0202 	mvn.w	r2, #2
 8006cec:	611a      	str	r2, [r3, #16]
 8006cee:	687b      	ldr	r3, [r7, #4]
 8006cf0:	2201      	movs	r2, #1
 8006cf2:	771a      	strb	r2, [r3, #28]
 8006cf4:	687b      	ldr	r3, [r7, #4]
 8006cf6:	681b      	ldr	r3, [r3, #0]
 8006cf8:	699b      	ldr	r3, [r3, #24]
 8006cfa:	f003 0303 	and.w	r3, r3, #3
 8006cfe:	2b00      	cmp	r3, #0
 8006d00:	d003      	beq.n	8006d0a <HAL_TIM_IRQHandler+0x4a>
 8006d02:	6878      	ldr	r0, [r7, #4]
 8006d04:	f000 fad3 	bl	80072ae <HAL_TIM_IC_CaptureCallback>
 8006d08:	e005      	b.n	8006d16 <HAL_TIM_IRQHandler+0x56>
 8006d0a:	6878      	ldr	r0, [r7, #4]
 8006d0c:	f000 fac5 	bl	800729a <HAL_TIM_OC_DelayElapsedCallback>
 8006d10:	6878      	ldr	r0, [r7, #4]
 8006d12:	f000 fad6 	bl	80072c2 <HAL_TIM_PWM_PulseFinishedCallback>
 8006d16:	687b      	ldr	r3, [r7, #4]
 8006d18:	2200      	movs	r2, #0
 8006d1a:	771a      	strb	r2, [r3, #28]
 8006d1c:	687b      	ldr	r3, [r7, #4]
 8006d1e:	681b      	ldr	r3, [r3, #0]
 8006d20:	691b      	ldr	r3, [r3, #16]
 8006d22:	f003 0304 	and.w	r3, r3, #4
 8006d26:	2b04      	cmp	r3, #4
 8006d28:	d122      	bne.n	8006d70 <HAL_TIM_IRQHandler+0xb0>
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	681b      	ldr	r3, [r3, #0]
 8006d2e:	68db      	ldr	r3, [r3, #12]
 8006d30:	f003 0304 	and.w	r3, r3, #4
 8006d34:	2b04      	cmp	r3, #4
 8006d36:	d11b      	bne.n	8006d70 <HAL_TIM_IRQHandler+0xb0>
 8006d38:	687b      	ldr	r3, [r7, #4]
 8006d3a:	681b      	ldr	r3, [r3, #0]
 8006d3c:	f06f 0204 	mvn.w	r2, #4
 8006d40:	611a      	str	r2, [r3, #16]
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	2202      	movs	r2, #2
 8006d46:	771a      	strb	r2, [r3, #28]
 8006d48:	687b      	ldr	r3, [r7, #4]
 8006d4a:	681b      	ldr	r3, [r3, #0]
 8006d4c:	699b      	ldr	r3, [r3, #24]
 8006d4e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006d52:	2b00      	cmp	r3, #0
 8006d54:	d003      	beq.n	8006d5e <HAL_TIM_IRQHandler+0x9e>
 8006d56:	6878      	ldr	r0, [r7, #4]
 8006d58:	f000 faa9 	bl	80072ae <HAL_TIM_IC_CaptureCallback>
 8006d5c:	e005      	b.n	8006d6a <HAL_TIM_IRQHandler+0xaa>
 8006d5e:	6878      	ldr	r0, [r7, #4]
 8006d60:	f000 fa9b 	bl	800729a <HAL_TIM_OC_DelayElapsedCallback>
 8006d64:	6878      	ldr	r0, [r7, #4]
 8006d66:	f000 faac 	bl	80072c2 <HAL_TIM_PWM_PulseFinishedCallback>
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	2200      	movs	r2, #0
 8006d6e:	771a      	strb	r2, [r3, #28]
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	681b      	ldr	r3, [r3, #0]
 8006d74:	691b      	ldr	r3, [r3, #16]
 8006d76:	f003 0308 	and.w	r3, r3, #8
 8006d7a:	2b08      	cmp	r3, #8
 8006d7c:	d122      	bne.n	8006dc4 <HAL_TIM_IRQHandler+0x104>
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	681b      	ldr	r3, [r3, #0]
 8006d82:	68db      	ldr	r3, [r3, #12]
 8006d84:	f003 0308 	and.w	r3, r3, #8
 8006d88:	2b08      	cmp	r3, #8
 8006d8a:	d11b      	bne.n	8006dc4 <HAL_TIM_IRQHandler+0x104>
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	681b      	ldr	r3, [r3, #0]
 8006d90:	f06f 0208 	mvn.w	r2, #8
 8006d94:	611a      	str	r2, [r3, #16]
 8006d96:	687b      	ldr	r3, [r7, #4]
 8006d98:	2204      	movs	r2, #4
 8006d9a:	771a      	strb	r2, [r3, #28]
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	681b      	ldr	r3, [r3, #0]
 8006da0:	69db      	ldr	r3, [r3, #28]
 8006da2:	f003 0303 	and.w	r3, r3, #3
 8006da6:	2b00      	cmp	r3, #0
 8006da8:	d003      	beq.n	8006db2 <HAL_TIM_IRQHandler+0xf2>
 8006daa:	6878      	ldr	r0, [r7, #4]
 8006dac:	f000 fa7f 	bl	80072ae <HAL_TIM_IC_CaptureCallback>
 8006db0:	e005      	b.n	8006dbe <HAL_TIM_IRQHandler+0xfe>
 8006db2:	6878      	ldr	r0, [r7, #4]
 8006db4:	f000 fa71 	bl	800729a <HAL_TIM_OC_DelayElapsedCallback>
 8006db8:	6878      	ldr	r0, [r7, #4]
 8006dba:	f000 fa82 	bl	80072c2 <HAL_TIM_PWM_PulseFinishedCallback>
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	2200      	movs	r2, #0
 8006dc2:	771a      	strb	r2, [r3, #28]
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	691b      	ldr	r3, [r3, #16]
 8006dca:	f003 0310 	and.w	r3, r3, #16
 8006dce:	2b10      	cmp	r3, #16
 8006dd0:	d122      	bne.n	8006e18 <HAL_TIM_IRQHandler+0x158>
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	68db      	ldr	r3, [r3, #12]
 8006dd8:	f003 0310 	and.w	r3, r3, #16
 8006ddc:	2b10      	cmp	r3, #16
 8006dde:	d11b      	bne.n	8006e18 <HAL_TIM_IRQHandler+0x158>
 8006de0:	687b      	ldr	r3, [r7, #4]
 8006de2:	681b      	ldr	r3, [r3, #0]
 8006de4:	f06f 0210 	mvn.w	r2, #16
 8006de8:	611a      	str	r2, [r3, #16]
 8006dea:	687b      	ldr	r3, [r7, #4]
 8006dec:	2208      	movs	r2, #8
 8006dee:	771a      	strb	r2, [r3, #28]
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	69db      	ldr	r3, [r3, #28]
 8006df6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006dfa:	2b00      	cmp	r3, #0
 8006dfc:	d003      	beq.n	8006e06 <HAL_TIM_IRQHandler+0x146>
 8006dfe:	6878      	ldr	r0, [r7, #4]
 8006e00:	f000 fa55 	bl	80072ae <HAL_TIM_IC_CaptureCallback>
 8006e04:	e005      	b.n	8006e12 <HAL_TIM_IRQHandler+0x152>
 8006e06:	6878      	ldr	r0, [r7, #4]
 8006e08:	f000 fa47 	bl	800729a <HAL_TIM_OC_DelayElapsedCallback>
 8006e0c:	6878      	ldr	r0, [r7, #4]
 8006e0e:	f000 fa58 	bl	80072c2 <HAL_TIM_PWM_PulseFinishedCallback>
 8006e12:	687b      	ldr	r3, [r7, #4]
 8006e14:	2200      	movs	r2, #0
 8006e16:	771a      	strb	r2, [r3, #28]
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	681b      	ldr	r3, [r3, #0]
 8006e1c:	691b      	ldr	r3, [r3, #16]
 8006e1e:	f003 0301 	and.w	r3, r3, #1
 8006e22:	2b01      	cmp	r3, #1
 8006e24:	d10e      	bne.n	8006e44 <HAL_TIM_IRQHandler+0x184>
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	681b      	ldr	r3, [r3, #0]
 8006e2a:	68db      	ldr	r3, [r3, #12]
 8006e2c:	f003 0301 	and.w	r3, r3, #1
 8006e30:	2b01      	cmp	r3, #1
 8006e32:	d107      	bne.n	8006e44 <HAL_TIM_IRQHandler+0x184>
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	f06f 0201 	mvn.w	r2, #1
 8006e3c:	611a      	str	r2, [r3, #16]
 8006e3e:	6878      	ldr	r0, [r7, #4]
 8006e40:	f7fb f8a4 	bl	8001f8c <HAL_TIM_PeriodElapsedCallback>
 8006e44:	687b      	ldr	r3, [r7, #4]
 8006e46:	681b      	ldr	r3, [r3, #0]
 8006e48:	691b      	ldr	r3, [r3, #16]
 8006e4a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006e4e:	2b80      	cmp	r3, #128	; 0x80
 8006e50:	d10e      	bne.n	8006e70 <HAL_TIM_IRQHandler+0x1b0>
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	681b      	ldr	r3, [r3, #0]
 8006e56:	68db      	ldr	r3, [r3, #12]
 8006e58:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006e5c:	2b80      	cmp	r3, #128	; 0x80
 8006e5e:	d107      	bne.n	8006e70 <HAL_TIM_IRQHandler+0x1b0>
 8006e60:	687b      	ldr	r3, [r7, #4]
 8006e62:	681b      	ldr	r3, [r3, #0]
 8006e64:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006e68:	611a      	str	r2, [r3, #16]
 8006e6a:	6878      	ldr	r0, [r7, #4]
 8006e6c:	f000 fe26 	bl	8007abc <HAL_TIMEx_BreakCallback>
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	681b      	ldr	r3, [r3, #0]
 8006e74:	691b      	ldr	r3, [r3, #16]
 8006e76:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006e7a:	2b40      	cmp	r3, #64	; 0x40
 8006e7c:	d10e      	bne.n	8006e9c <HAL_TIM_IRQHandler+0x1dc>
 8006e7e:	687b      	ldr	r3, [r7, #4]
 8006e80:	681b      	ldr	r3, [r3, #0]
 8006e82:	68db      	ldr	r3, [r3, #12]
 8006e84:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006e88:	2b40      	cmp	r3, #64	; 0x40
 8006e8a:	d107      	bne.n	8006e9c <HAL_TIM_IRQHandler+0x1dc>
 8006e8c:	687b      	ldr	r3, [r7, #4]
 8006e8e:	681b      	ldr	r3, [r3, #0]
 8006e90:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006e94:	611a      	str	r2, [r3, #16]
 8006e96:	6878      	ldr	r0, [r7, #4]
 8006e98:	f000 fa1d 	bl	80072d6 <HAL_TIM_TriggerCallback>
 8006e9c:	687b      	ldr	r3, [r7, #4]
 8006e9e:	681b      	ldr	r3, [r3, #0]
 8006ea0:	691b      	ldr	r3, [r3, #16]
 8006ea2:	f003 0320 	and.w	r3, r3, #32
 8006ea6:	2b20      	cmp	r3, #32
 8006ea8:	d10e      	bne.n	8006ec8 <HAL_TIM_IRQHandler+0x208>
 8006eaa:	687b      	ldr	r3, [r7, #4]
 8006eac:	681b      	ldr	r3, [r3, #0]
 8006eae:	68db      	ldr	r3, [r3, #12]
 8006eb0:	f003 0320 	and.w	r3, r3, #32
 8006eb4:	2b20      	cmp	r3, #32
 8006eb6:	d107      	bne.n	8006ec8 <HAL_TIM_IRQHandler+0x208>
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	681b      	ldr	r3, [r3, #0]
 8006ebc:	f06f 0220 	mvn.w	r2, #32
 8006ec0:	611a      	str	r2, [r3, #16]
 8006ec2:	6878      	ldr	r0, [r7, #4]
 8006ec4:	f000 fdf0 	bl	8007aa8 <HAL_TIMEx_CommutCallback>
 8006ec8:	bf00      	nop
 8006eca:	3708      	adds	r7, #8
 8006ecc:	46bd      	mov	sp, r7
 8006ece:	bd80      	pop	{r7, pc}

08006ed0 <HAL_TIM_OC_ConfigChannel>:
 8006ed0:	b580      	push	{r7, lr}
 8006ed2:	b086      	sub	sp, #24
 8006ed4:	af00      	add	r7, sp, #0
 8006ed6:	60f8      	str	r0, [r7, #12]
 8006ed8:	60b9      	str	r1, [r7, #8]
 8006eda:	607a      	str	r2, [r7, #4]
 8006edc:	2300      	movs	r3, #0
 8006ede:	75fb      	strb	r3, [r7, #23]
 8006ee0:	68fb      	ldr	r3, [r7, #12]
 8006ee2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006ee6:	2b01      	cmp	r3, #1
 8006ee8:	d101      	bne.n	8006eee <HAL_TIM_OC_ConfigChannel+0x1e>
 8006eea:	2302      	movs	r3, #2
 8006eec:	e048      	b.n	8006f80 <HAL_TIM_OC_ConfigChannel+0xb0>
 8006eee:	68fb      	ldr	r3, [r7, #12]
 8006ef0:	2201      	movs	r2, #1
 8006ef2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	2b0c      	cmp	r3, #12
 8006efa:	d839      	bhi.n	8006f70 <HAL_TIM_OC_ConfigChannel+0xa0>
 8006efc:	a201      	add	r2, pc, #4	; (adr r2, 8006f04 <HAL_TIM_OC_ConfigChannel+0x34>)
 8006efe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006f02:	bf00      	nop
 8006f04:	08006f39 	.word	0x08006f39
 8006f08:	08006f71 	.word	0x08006f71
 8006f0c:	08006f71 	.word	0x08006f71
 8006f10:	08006f71 	.word	0x08006f71
 8006f14:	08006f47 	.word	0x08006f47
 8006f18:	08006f71 	.word	0x08006f71
 8006f1c:	08006f71 	.word	0x08006f71
 8006f20:	08006f71 	.word	0x08006f71
 8006f24:	08006f55 	.word	0x08006f55
 8006f28:	08006f71 	.word	0x08006f71
 8006f2c:	08006f71 	.word	0x08006f71
 8006f30:	08006f71 	.word	0x08006f71
 8006f34:	08006f63 	.word	0x08006f63
 8006f38:	68fb      	ldr	r3, [r7, #12]
 8006f3a:	681b      	ldr	r3, [r3, #0]
 8006f3c:	68b9      	ldr	r1, [r7, #8]
 8006f3e:	4618      	mov	r0, r3
 8006f40:	f000 fa74 	bl	800742c <TIM_OC1_SetConfig>
 8006f44:	e017      	b.n	8006f76 <HAL_TIM_OC_ConfigChannel+0xa6>
 8006f46:	68fb      	ldr	r3, [r7, #12]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	68b9      	ldr	r1, [r7, #8]
 8006f4c:	4618      	mov	r0, r3
 8006f4e:	f000 fadd 	bl	800750c <TIM_OC2_SetConfig>
 8006f52:	e010      	b.n	8006f76 <HAL_TIM_OC_ConfigChannel+0xa6>
 8006f54:	68fb      	ldr	r3, [r7, #12]
 8006f56:	681b      	ldr	r3, [r3, #0]
 8006f58:	68b9      	ldr	r1, [r7, #8]
 8006f5a:	4618      	mov	r0, r3
 8006f5c:	f000 fb4c 	bl	80075f8 <TIM_OC3_SetConfig>
 8006f60:	e009      	b.n	8006f76 <HAL_TIM_OC_ConfigChannel+0xa6>
 8006f62:	68fb      	ldr	r3, [r7, #12]
 8006f64:	681b      	ldr	r3, [r3, #0]
 8006f66:	68b9      	ldr	r1, [r7, #8]
 8006f68:	4618      	mov	r0, r3
 8006f6a:	f000 fbb9 	bl	80076e0 <TIM_OC4_SetConfig>
 8006f6e:	e002      	b.n	8006f76 <HAL_TIM_OC_ConfigChannel+0xa6>
 8006f70:	2301      	movs	r3, #1
 8006f72:	75fb      	strb	r3, [r7, #23]
 8006f74:	bf00      	nop
 8006f76:	68fb      	ldr	r3, [r7, #12]
 8006f78:	2200      	movs	r2, #0
 8006f7a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006f7e:	7dfb      	ldrb	r3, [r7, #23]
 8006f80:	4618      	mov	r0, r3
 8006f82:	3718      	adds	r7, #24
 8006f84:	46bd      	mov	sp, r7
 8006f86:	bd80      	pop	{r7, pc}

08006f88 <HAL_TIM_PWM_ConfigChannel>:
 8006f88:	b580      	push	{r7, lr}
 8006f8a:	b086      	sub	sp, #24
 8006f8c:	af00      	add	r7, sp, #0
 8006f8e:	60f8      	str	r0, [r7, #12]
 8006f90:	60b9      	str	r1, [r7, #8]
 8006f92:	607a      	str	r2, [r7, #4]
 8006f94:	2300      	movs	r3, #0
 8006f96:	75fb      	strb	r3, [r7, #23]
 8006f98:	68fb      	ldr	r3, [r7, #12]
 8006f9a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006f9e:	2b01      	cmp	r3, #1
 8006fa0:	d101      	bne.n	8006fa6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006fa2:	2302      	movs	r3, #2
 8006fa4:	e0ae      	b.n	8007104 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8006fa6:	68fb      	ldr	r3, [r7, #12]
 8006fa8:	2201      	movs	r2, #1
 8006faa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006fae:	687b      	ldr	r3, [r7, #4]
 8006fb0:	2b0c      	cmp	r3, #12
 8006fb2:	f200 809f 	bhi.w	80070f4 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8006fb6:	a201      	add	r2, pc, #4	; (adr r2, 8006fbc <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006fb8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006fbc:	08006ff1 	.word	0x08006ff1
 8006fc0:	080070f5 	.word	0x080070f5
 8006fc4:	080070f5 	.word	0x080070f5
 8006fc8:	080070f5 	.word	0x080070f5
 8006fcc:	08007031 	.word	0x08007031
 8006fd0:	080070f5 	.word	0x080070f5
 8006fd4:	080070f5 	.word	0x080070f5
 8006fd8:	080070f5 	.word	0x080070f5
 8006fdc:	08007073 	.word	0x08007073
 8006fe0:	080070f5 	.word	0x080070f5
 8006fe4:	080070f5 	.word	0x080070f5
 8006fe8:	080070f5 	.word	0x080070f5
 8006fec:	080070b3 	.word	0x080070b3
 8006ff0:	68fb      	ldr	r3, [r7, #12]
 8006ff2:	681b      	ldr	r3, [r3, #0]
 8006ff4:	68b9      	ldr	r1, [r7, #8]
 8006ff6:	4618      	mov	r0, r3
 8006ff8:	f000 fa18 	bl	800742c <TIM_OC1_SetConfig>
 8006ffc:	68fb      	ldr	r3, [r7, #12]
 8006ffe:	681b      	ldr	r3, [r3, #0]
 8007000:	699a      	ldr	r2, [r3, #24]
 8007002:	68fb      	ldr	r3, [r7, #12]
 8007004:	681b      	ldr	r3, [r3, #0]
 8007006:	f042 0208 	orr.w	r2, r2, #8
 800700a:	619a      	str	r2, [r3, #24]
 800700c:	68fb      	ldr	r3, [r7, #12]
 800700e:	681b      	ldr	r3, [r3, #0]
 8007010:	699a      	ldr	r2, [r3, #24]
 8007012:	68fb      	ldr	r3, [r7, #12]
 8007014:	681b      	ldr	r3, [r3, #0]
 8007016:	f022 0204 	bic.w	r2, r2, #4
 800701a:	619a      	str	r2, [r3, #24]
 800701c:	68fb      	ldr	r3, [r7, #12]
 800701e:	681b      	ldr	r3, [r3, #0]
 8007020:	6999      	ldr	r1, [r3, #24]
 8007022:	68bb      	ldr	r3, [r7, #8]
 8007024:	691a      	ldr	r2, [r3, #16]
 8007026:	68fb      	ldr	r3, [r7, #12]
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	430a      	orrs	r2, r1
 800702c:	619a      	str	r2, [r3, #24]
 800702e:	e064      	b.n	80070fa <HAL_TIM_PWM_ConfigChannel+0x172>
 8007030:	68fb      	ldr	r3, [r7, #12]
 8007032:	681b      	ldr	r3, [r3, #0]
 8007034:	68b9      	ldr	r1, [r7, #8]
 8007036:	4618      	mov	r0, r3
 8007038:	f000 fa68 	bl	800750c <TIM_OC2_SetConfig>
 800703c:	68fb      	ldr	r3, [r7, #12]
 800703e:	681b      	ldr	r3, [r3, #0]
 8007040:	699a      	ldr	r2, [r3, #24]
 8007042:	68fb      	ldr	r3, [r7, #12]
 8007044:	681b      	ldr	r3, [r3, #0]
 8007046:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800704a:	619a      	str	r2, [r3, #24]
 800704c:	68fb      	ldr	r3, [r7, #12]
 800704e:	681b      	ldr	r3, [r3, #0]
 8007050:	699a      	ldr	r2, [r3, #24]
 8007052:	68fb      	ldr	r3, [r7, #12]
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800705a:	619a      	str	r2, [r3, #24]
 800705c:	68fb      	ldr	r3, [r7, #12]
 800705e:	681b      	ldr	r3, [r3, #0]
 8007060:	6999      	ldr	r1, [r3, #24]
 8007062:	68bb      	ldr	r3, [r7, #8]
 8007064:	691b      	ldr	r3, [r3, #16]
 8007066:	021a      	lsls	r2, r3, #8
 8007068:	68fb      	ldr	r3, [r7, #12]
 800706a:	681b      	ldr	r3, [r3, #0]
 800706c:	430a      	orrs	r2, r1
 800706e:	619a      	str	r2, [r3, #24]
 8007070:	e043      	b.n	80070fa <HAL_TIM_PWM_ConfigChannel+0x172>
 8007072:	68fb      	ldr	r3, [r7, #12]
 8007074:	681b      	ldr	r3, [r3, #0]
 8007076:	68b9      	ldr	r1, [r7, #8]
 8007078:	4618      	mov	r0, r3
 800707a:	f000 fabd 	bl	80075f8 <TIM_OC3_SetConfig>
 800707e:	68fb      	ldr	r3, [r7, #12]
 8007080:	681b      	ldr	r3, [r3, #0]
 8007082:	69da      	ldr	r2, [r3, #28]
 8007084:	68fb      	ldr	r3, [r7, #12]
 8007086:	681b      	ldr	r3, [r3, #0]
 8007088:	f042 0208 	orr.w	r2, r2, #8
 800708c:	61da      	str	r2, [r3, #28]
 800708e:	68fb      	ldr	r3, [r7, #12]
 8007090:	681b      	ldr	r3, [r3, #0]
 8007092:	69da      	ldr	r2, [r3, #28]
 8007094:	68fb      	ldr	r3, [r7, #12]
 8007096:	681b      	ldr	r3, [r3, #0]
 8007098:	f022 0204 	bic.w	r2, r2, #4
 800709c:	61da      	str	r2, [r3, #28]
 800709e:	68fb      	ldr	r3, [r7, #12]
 80070a0:	681b      	ldr	r3, [r3, #0]
 80070a2:	69d9      	ldr	r1, [r3, #28]
 80070a4:	68bb      	ldr	r3, [r7, #8]
 80070a6:	691a      	ldr	r2, [r3, #16]
 80070a8:	68fb      	ldr	r3, [r7, #12]
 80070aa:	681b      	ldr	r3, [r3, #0]
 80070ac:	430a      	orrs	r2, r1
 80070ae:	61da      	str	r2, [r3, #28]
 80070b0:	e023      	b.n	80070fa <HAL_TIM_PWM_ConfigChannel+0x172>
 80070b2:	68fb      	ldr	r3, [r7, #12]
 80070b4:	681b      	ldr	r3, [r3, #0]
 80070b6:	68b9      	ldr	r1, [r7, #8]
 80070b8:	4618      	mov	r0, r3
 80070ba:	f000 fb11 	bl	80076e0 <TIM_OC4_SetConfig>
 80070be:	68fb      	ldr	r3, [r7, #12]
 80070c0:	681b      	ldr	r3, [r3, #0]
 80070c2:	69da      	ldr	r2, [r3, #28]
 80070c4:	68fb      	ldr	r3, [r7, #12]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80070cc:	61da      	str	r2, [r3, #28]
 80070ce:	68fb      	ldr	r3, [r7, #12]
 80070d0:	681b      	ldr	r3, [r3, #0]
 80070d2:	69da      	ldr	r2, [r3, #28]
 80070d4:	68fb      	ldr	r3, [r7, #12]
 80070d6:	681b      	ldr	r3, [r3, #0]
 80070d8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070dc:	61da      	str	r2, [r3, #28]
 80070de:	68fb      	ldr	r3, [r7, #12]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	69d9      	ldr	r1, [r3, #28]
 80070e4:	68bb      	ldr	r3, [r7, #8]
 80070e6:	691b      	ldr	r3, [r3, #16]
 80070e8:	021a      	lsls	r2, r3, #8
 80070ea:	68fb      	ldr	r3, [r7, #12]
 80070ec:	681b      	ldr	r3, [r3, #0]
 80070ee:	430a      	orrs	r2, r1
 80070f0:	61da      	str	r2, [r3, #28]
 80070f2:	e002      	b.n	80070fa <HAL_TIM_PWM_ConfigChannel+0x172>
 80070f4:	2301      	movs	r3, #1
 80070f6:	75fb      	strb	r3, [r7, #23]
 80070f8:	bf00      	nop
 80070fa:	68fb      	ldr	r3, [r7, #12]
 80070fc:	2200      	movs	r2, #0
 80070fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007102:	7dfb      	ldrb	r3, [r7, #23]
 8007104:	4618      	mov	r0, r3
 8007106:	3718      	adds	r7, #24
 8007108:	46bd      	mov	sp, r7
 800710a:	bd80      	pop	{r7, pc}

0800710c <HAL_TIM_ConfigClockSource>:
 800710c:	b580      	push	{r7, lr}
 800710e:	b084      	sub	sp, #16
 8007110:	af00      	add	r7, sp, #0
 8007112:	6078      	str	r0, [r7, #4]
 8007114:	6039      	str	r1, [r7, #0]
 8007116:	2300      	movs	r3, #0
 8007118:	73fb      	strb	r3, [r7, #15]
 800711a:	687b      	ldr	r3, [r7, #4]
 800711c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007120:	2b01      	cmp	r3, #1
 8007122:	d101      	bne.n	8007128 <HAL_TIM_ConfigClockSource+0x1c>
 8007124:	2302      	movs	r3, #2
 8007126:	e0b4      	b.n	8007292 <HAL_TIM_ConfigClockSource+0x186>
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	2201      	movs	r2, #1
 800712c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007130:	687b      	ldr	r3, [r7, #4]
 8007132:	2202      	movs	r2, #2
 8007134:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	681b      	ldr	r3, [r3, #0]
 800713c:	689b      	ldr	r3, [r3, #8]
 800713e:	60bb      	str	r3, [r7, #8]
 8007140:	68bb      	ldr	r3, [r7, #8]
 8007142:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8007146:	60bb      	str	r3, [r7, #8]
 8007148:	68bb      	ldr	r3, [r7, #8]
 800714a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800714e:	60bb      	str	r3, [r7, #8]
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	681b      	ldr	r3, [r3, #0]
 8007154:	68ba      	ldr	r2, [r7, #8]
 8007156:	609a      	str	r2, [r3, #8]
 8007158:	683b      	ldr	r3, [r7, #0]
 800715a:	681b      	ldr	r3, [r3, #0]
 800715c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007160:	d03e      	beq.n	80071e0 <HAL_TIM_ConfigClockSource+0xd4>
 8007162:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007166:	f200 8087 	bhi.w	8007278 <HAL_TIM_ConfigClockSource+0x16c>
 800716a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800716e:	f000 8086 	beq.w	800727e <HAL_TIM_ConfigClockSource+0x172>
 8007172:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007176:	d87f      	bhi.n	8007278 <HAL_TIM_ConfigClockSource+0x16c>
 8007178:	2b70      	cmp	r3, #112	; 0x70
 800717a:	d01a      	beq.n	80071b2 <HAL_TIM_ConfigClockSource+0xa6>
 800717c:	2b70      	cmp	r3, #112	; 0x70
 800717e:	d87b      	bhi.n	8007278 <HAL_TIM_ConfigClockSource+0x16c>
 8007180:	2b60      	cmp	r3, #96	; 0x60
 8007182:	d050      	beq.n	8007226 <HAL_TIM_ConfigClockSource+0x11a>
 8007184:	2b60      	cmp	r3, #96	; 0x60
 8007186:	d877      	bhi.n	8007278 <HAL_TIM_ConfigClockSource+0x16c>
 8007188:	2b50      	cmp	r3, #80	; 0x50
 800718a:	d03c      	beq.n	8007206 <HAL_TIM_ConfigClockSource+0xfa>
 800718c:	2b50      	cmp	r3, #80	; 0x50
 800718e:	d873      	bhi.n	8007278 <HAL_TIM_ConfigClockSource+0x16c>
 8007190:	2b40      	cmp	r3, #64	; 0x40
 8007192:	d058      	beq.n	8007246 <HAL_TIM_ConfigClockSource+0x13a>
 8007194:	2b40      	cmp	r3, #64	; 0x40
 8007196:	d86f      	bhi.n	8007278 <HAL_TIM_ConfigClockSource+0x16c>
 8007198:	2b30      	cmp	r3, #48	; 0x30
 800719a:	d064      	beq.n	8007266 <HAL_TIM_ConfigClockSource+0x15a>
 800719c:	2b30      	cmp	r3, #48	; 0x30
 800719e:	d86b      	bhi.n	8007278 <HAL_TIM_ConfigClockSource+0x16c>
 80071a0:	2b20      	cmp	r3, #32
 80071a2:	d060      	beq.n	8007266 <HAL_TIM_ConfigClockSource+0x15a>
 80071a4:	2b20      	cmp	r3, #32
 80071a6:	d867      	bhi.n	8007278 <HAL_TIM_ConfigClockSource+0x16c>
 80071a8:	2b00      	cmp	r3, #0
 80071aa:	d05c      	beq.n	8007266 <HAL_TIM_ConfigClockSource+0x15a>
 80071ac:	2b10      	cmp	r3, #16
 80071ae:	d05a      	beq.n	8007266 <HAL_TIM_ConfigClockSource+0x15a>
 80071b0:	e062      	b.n	8007278 <HAL_TIM_ConfigClockSource+0x16c>
 80071b2:	687b      	ldr	r3, [r7, #4]
 80071b4:	6818      	ldr	r0, [r3, #0]
 80071b6:	683b      	ldr	r3, [r7, #0]
 80071b8:	6899      	ldr	r1, [r3, #8]
 80071ba:	683b      	ldr	r3, [r7, #0]
 80071bc:	685a      	ldr	r2, [r3, #4]
 80071be:	683b      	ldr	r3, [r7, #0]
 80071c0:	68db      	ldr	r3, [r3, #12]
 80071c2:	f000 fb5d 	bl	8007880 <TIM_ETR_SetConfig>
 80071c6:	687b      	ldr	r3, [r7, #4]
 80071c8:	681b      	ldr	r3, [r3, #0]
 80071ca:	689b      	ldr	r3, [r3, #8]
 80071cc:	60bb      	str	r3, [r7, #8]
 80071ce:	68bb      	ldr	r3, [r7, #8]
 80071d0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80071d4:	60bb      	str	r3, [r7, #8]
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	681b      	ldr	r3, [r3, #0]
 80071da:	68ba      	ldr	r2, [r7, #8]
 80071dc:	609a      	str	r2, [r3, #8]
 80071de:	e04f      	b.n	8007280 <HAL_TIM_ConfigClockSource+0x174>
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	6818      	ldr	r0, [r3, #0]
 80071e4:	683b      	ldr	r3, [r7, #0]
 80071e6:	6899      	ldr	r1, [r3, #8]
 80071e8:	683b      	ldr	r3, [r7, #0]
 80071ea:	685a      	ldr	r2, [r3, #4]
 80071ec:	683b      	ldr	r3, [r7, #0]
 80071ee:	68db      	ldr	r3, [r3, #12]
 80071f0:	f000 fb46 	bl	8007880 <TIM_ETR_SetConfig>
 80071f4:	687b      	ldr	r3, [r7, #4]
 80071f6:	681b      	ldr	r3, [r3, #0]
 80071f8:	689a      	ldr	r2, [r3, #8]
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	681b      	ldr	r3, [r3, #0]
 80071fe:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8007202:	609a      	str	r2, [r3, #8]
 8007204:	e03c      	b.n	8007280 <HAL_TIM_ConfigClockSource+0x174>
 8007206:	687b      	ldr	r3, [r7, #4]
 8007208:	6818      	ldr	r0, [r3, #0]
 800720a:	683b      	ldr	r3, [r7, #0]
 800720c:	6859      	ldr	r1, [r3, #4]
 800720e:	683b      	ldr	r3, [r7, #0]
 8007210:	68db      	ldr	r3, [r3, #12]
 8007212:	461a      	mov	r2, r3
 8007214:	f000 faba 	bl	800778c <TIM_TI1_ConfigInputStage>
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	681b      	ldr	r3, [r3, #0]
 800721c:	2150      	movs	r1, #80	; 0x50
 800721e:	4618      	mov	r0, r3
 8007220:	f000 fb13 	bl	800784a <TIM_ITRx_SetConfig>
 8007224:	e02c      	b.n	8007280 <HAL_TIM_ConfigClockSource+0x174>
 8007226:	687b      	ldr	r3, [r7, #4]
 8007228:	6818      	ldr	r0, [r3, #0]
 800722a:	683b      	ldr	r3, [r7, #0]
 800722c:	6859      	ldr	r1, [r3, #4]
 800722e:	683b      	ldr	r3, [r7, #0]
 8007230:	68db      	ldr	r3, [r3, #12]
 8007232:	461a      	mov	r2, r3
 8007234:	f000 fad9 	bl	80077ea <TIM_TI2_ConfigInputStage>
 8007238:	687b      	ldr	r3, [r7, #4]
 800723a:	681b      	ldr	r3, [r3, #0]
 800723c:	2160      	movs	r1, #96	; 0x60
 800723e:	4618      	mov	r0, r3
 8007240:	f000 fb03 	bl	800784a <TIM_ITRx_SetConfig>
 8007244:	e01c      	b.n	8007280 <HAL_TIM_ConfigClockSource+0x174>
 8007246:	687b      	ldr	r3, [r7, #4]
 8007248:	6818      	ldr	r0, [r3, #0]
 800724a:	683b      	ldr	r3, [r7, #0]
 800724c:	6859      	ldr	r1, [r3, #4]
 800724e:	683b      	ldr	r3, [r7, #0]
 8007250:	68db      	ldr	r3, [r3, #12]
 8007252:	461a      	mov	r2, r3
 8007254:	f000 fa9a 	bl	800778c <TIM_TI1_ConfigInputStage>
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	2140      	movs	r1, #64	; 0x40
 800725e:	4618      	mov	r0, r3
 8007260:	f000 faf3 	bl	800784a <TIM_ITRx_SetConfig>
 8007264:	e00c      	b.n	8007280 <HAL_TIM_ConfigClockSource+0x174>
 8007266:	687b      	ldr	r3, [r7, #4]
 8007268:	681a      	ldr	r2, [r3, #0]
 800726a:	683b      	ldr	r3, [r7, #0]
 800726c:	681b      	ldr	r3, [r3, #0]
 800726e:	4619      	mov	r1, r3
 8007270:	4610      	mov	r0, r2
 8007272:	f000 faea 	bl	800784a <TIM_ITRx_SetConfig>
 8007276:	e003      	b.n	8007280 <HAL_TIM_ConfigClockSource+0x174>
 8007278:	2301      	movs	r3, #1
 800727a:	73fb      	strb	r3, [r7, #15]
 800727c:	e000      	b.n	8007280 <HAL_TIM_ConfigClockSource+0x174>
 800727e:	bf00      	nop
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	2201      	movs	r2, #1
 8007284:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	2200      	movs	r2, #0
 800728c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007290:	7bfb      	ldrb	r3, [r7, #15]
 8007292:	4618      	mov	r0, r3
 8007294:	3710      	adds	r7, #16
 8007296:	46bd      	mov	sp, r7
 8007298:	bd80      	pop	{r7, pc}

0800729a <HAL_TIM_OC_DelayElapsedCallback>:
 800729a:	b480      	push	{r7}
 800729c:	b083      	sub	sp, #12
 800729e:	af00      	add	r7, sp, #0
 80072a0:	6078      	str	r0, [r7, #4]
 80072a2:	bf00      	nop
 80072a4:	370c      	adds	r7, #12
 80072a6:	46bd      	mov	sp, r7
 80072a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072ac:	4770      	bx	lr

080072ae <HAL_TIM_IC_CaptureCallback>:
 80072ae:	b480      	push	{r7}
 80072b0:	b083      	sub	sp, #12
 80072b2:	af00      	add	r7, sp, #0
 80072b4:	6078      	str	r0, [r7, #4]
 80072b6:	bf00      	nop
 80072b8:	370c      	adds	r7, #12
 80072ba:	46bd      	mov	sp, r7
 80072bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072c0:	4770      	bx	lr

080072c2 <HAL_TIM_PWM_PulseFinishedCallback>:
 80072c2:	b480      	push	{r7}
 80072c4:	b083      	sub	sp, #12
 80072c6:	af00      	add	r7, sp, #0
 80072c8:	6078      	str	r0, [r7, #4]
 80072ca:	bf00      	nop
 80072cc:	370c      	adds	r7, #12
 80072ce:	46bd      	mov	sp, r7
 80072d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072d4:	4770      	bx	lr

080072d6 <HAL_TIM_TriggerCallback>:
 80072d6:	b480      	push	{r7}
 80072d8:	b083      	sub	sp, #12
 80072da:	af00      	add	r7, sp, #0
 80072dc:	6078      	str	r0, [r7, #4]
 80072de:	bf00      	nop
 80072e0:	370c      	adds	r7, #12
 80072e2:	46bd      	mov	sp, r7
 80072e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072e8:	4770      	bx	lr
	...

080072ec <TIM_Base_SetConfig>:
 80072ec:	b480      	push	{r7}
 80072ee:	b085      	sub	sp, #20
 80072f0:	af00      	add	r7, sp, #0
 80072f2:	6078      	str	r0, [r7, #4]
 80072f4:	6039      	str	r1, [r7, #0]
 80072f6:	687b      	ldr	r3, [r7, #4]
 80072f8:	681b      	ldr	r3, [r3, #0]
 80072fa:	60fb      	str	r3, [r7, #12]
 80072fc:	687b      	ldr	r3, [r7, #4]
 80072fe:	4a40      	ldr	r2, [pc, #256]	; (8007400 <TIM_Base_SetConfig+0x114>)
 8007300:	4293      	cmp	r3, r2
 8007302:	d013      	beq.n	800732c <TIM_Base_SetConfig+0x40>
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800730a:	d00f      	beq.n	800732c <TIM_Base_SetConfig+0x40>
 800730c:	687b      	ldr	r3, [r7, #4]
 800730e:	4a3d      	ldr	r2, [pc, #244]	; (8007404 <TIM_Base_SetConfig+0x118>)
 8007310:	4293      	cmp	r3, r2
 8007312:	d00b      	beq.n	800732c <TIM_Base_SetConfig+0x40>
 8007314:	687b      	ldr	r3, [r7, #4]
 8007316:	4a3c      	ldr	r2, [pc, #240]	; (8007408 <TIM_Base_SetConfig+0x11c>)
 8007318:	4293      	cmp	r3, r2
 800731a:	d007      	beq.n	800732c <TIM_Base_SetConfig+0x40>
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	4a3b      	ldr	r2, [pc, #236]	; (800740c <TIM_Base_SetConfig+0x120>)
 8007320:	4293      	cmp	r3, r2
 8007322:	d003      	beq.n	800732c <TIM_Base_SetConfig+0x40>
 8007324:	687b      	ldr	r3, [r7, #4]
 8007326:	4a3a      	ldr	r2, [pc, #232]	; (8007410 <TIM_Base_SetConfig+0x124>)
 8007328:	4293      	cmp	r3, r2
 800732a:	d108      	bne.n	800733e <TIM_Base_SetConfig+0x52>
 800732c:	68fb      	ldr	r3, [r7, #12]
 800732e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007332:	60fb      	str	r3, [r7, #12]
 8007334:	683b      	ldr	r3, [r7, #0]
 8007336:	685b      	ldr	r3, [r3, #4]
 8007338:	68fa      	ldr	r2, [r7, #12]
 800733a:	4313      	orrs	r3, r2
 800733c:	60fb      	str	r3, [r7, #12]
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	4a2f      	ldr	r2, [pc, #188]	; (8007400 <TIM_Base_SetConfig+0x114>)
 8007342:	4293      	cmp	r3, r2
 8007344:	d02b      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 8007346:	687b      	ldr	r3, [r7, #4]
 8007348:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800734c:	d027      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	4a2c      	ldr	r2, [pc, #176]	; (8007404 <TIM_Base_SetConfig+0x118>)
 8007352:	4293      	cmp	r3, r2
 8007354:	d023      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 8007356:	687b      	ldr	r3, [r7, #4]
 8007358:	4a2b      	ldr	r2, [pc, #172]	; (8007408 <TIM_Base_SetConfig+0x11c>)
 800735a:	4293      	cmp	r3, r2
 800735c:	d01f      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 800735e:	687b      	ldr	r3, [r7, #4]
 8007360:	4a2a      	ldr	r2, [pc, #168]	; (800740c <TIM_Base_SetConfig+0x120>)
 8007362:	4293      	cmp	r3, r2
 8007364:	d01b      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	4a29      	ldr	r2, [pc, #164]	; (8007410 <TIM_Base_SetConfig+0x124>)
 800736a:	4293      	cmp	r3, r2
 800736c:	d017      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 800736e:	687b      	ldr	r3, [r7, #4]
 8007370:	4a28      	ldr	r2, [pc, #160]	; (8007414 <TIM_Base_SetConfig+0x128>)
 8007372:	4293      	cmp	r3, r2
 8007374:	d013      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	4a27      	ldr	r2, [pc, #156]	; (8007418 <TIM_Base_SetConfig+0x12c>)
 800737a:	4293      	cmp	r3, r2
 800737c:	d00f      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	4a26      	ldr	r2, [pc, #152]	; (800741c <TIM_Base_SetConfig+0x130>)
 8007382:	4293      	cmp	r3, r2
 8007384:	d00b      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	4a25      	ldr	r2, [pc, #148]	; (8007420 <TIM_Base_SetConfig+0x134>)
 800738a:	4293      	cmp	r3, r2
 800738c:	d007      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	4a24      	ldr	r2, [pc, #144]	; (8007424 <TIM_Base_SetConfig+0x138>)
 8007392:	4293      	cmp	r3, r2
 8007394:	d003      	beq.n	800739e <TIM_Base_SetConfig+0xb2>
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	4a23      	ldr	r2, [pc, #140]	; (8007428 <TIM_Base_SetConfig+0x13c>)
 800739a:	4293      	cmp	r3, r2
 800739c:	d108      	bne.n	80073b0 <TIM_Base_SetConfig+0xc4>
 800739e:	68fb      	ldr	r3, [r7, #12]
 80073a0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80073a4:	60fb      	str	r3, [r7, #12]
 80073a6:	683b      	ldr	r3, [r7, #0]
 80073a8:	68db      	ldr	r3, [r3, #12]
 80073aa:	68fa      	ldr	r2, [r7, #12]
 80073ac:	4313      	orrs	r3, r2
 80073ae:	60fb      	str	r3, [r7, #12]
 80073b0:	68fb      	ldr	r3, [r7, #12]
 80073b2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80073b6:	683b      	ldr	r3, [r7, #0]
 80073b8:	695b      	ldr	r3, [r3, #20]
 80073ba:	4313      	orrs	r3, r2
 80073bc:	60fb      	str	r3, [r7, #12]
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	68fa      	ldr	r2, [r7, #12]
 80073c2:	601a      	str	r2, [r3, #0]
 80073c4:	683b      	ldr	r3, [r7, #0]
 80073c6:	689a      	ldr	r2, [r3, #8]
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	62da      	str	r2, [r3, #44]	; 0x2c
 80073cc:	683b      	ldr	r3, [r7, #0]
 80073ce:	681a      	ldr	r2, [r3, #0]
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	629a      	str	r2, [r3, #40]	; 0x28
 80073d4:	687b      	ldr	r3, [r7, #4]
 80073d6:	4a0a      	ldr	r2, [pc, #40]	; (8007400 <TIM_Base_SetConfig+0x114>)
 80073d8:	4293      	cmp	r3, r2
 80073da:	d003      	beq.n	80073e4 <TIM_Base_SetConfig+0xf8>
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	4a0c      	ldr	r2, [pc, #48]	; (8007410 <TIM_Base_SetConfig+0x124>)
 80073e0:	4293      	cmp	r3, r2
 80073e2:	d103      	bne.n	80073ec <TIM_Base_SetConfig+0x100>
 80073e4:	683b      	ldr	r3, [r7, #0]
 80073e6:	691a      	ldr	r2, [r3, #16]
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	631a      	str	r2, [r3, #48]	; 0x30
 80073ec:	687b      	ldr	r3, [r7, #4]
 80073ee:	2201      	movs	r2, #1
 80073f0:	615a      	str	r2, [r3, #20]
 80073f2:	bf00      	nop
 80073f4:	3714      	adds	r7, #20
 80073f6:	46bd      	mov	sp, r7
 80073f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073fc:	4770      	bx	lr
 80073fe:	bf00      	nop
 8007400:	40010000 	.word	0x40010000
 8007404:	40000400 	.word	0x40000400
 8007408:	40000800 	.word	0x40000800
 800740c:	40000c00 	.word	0x40000c00
 8007410:	40010400 	.word	0x40010400
 8007414:	40014000 	.word	0x40014000
 8007418:	40014400 	.word	0x40014400
 800741c:	40014800 	.word	0x40014800
 8007420:	40001800 	.word	0x40001800
 8007424:	40001c00 	.word	0x40001c00
 8007428:	40002000 	.word	0x40002000

0800742c <TIM_OC1_SetConfig>:
 800742c:	b480      	push	{r7}
 800742e:	b087      	sub	sp, #28
 8007430:	af00      	add	r7, sp, #0
 8007432:	6078      	str	r0, [r7, #4]
 8007434:	6039      	str	r1, [r7, #0]
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	6a1b      	ldr	r3, [r3, #32]
 800743a:	f023 0201 	bic.w	r2, r3, #1
 800743e:	687b      	ldr	r3, [r7, #4]
 8007440:	621a      	str	r2, [r3, #32]
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	6a1b      	ldr	r3, [r3, #32]
 8007446:	617b      	str	r3, [r7, #20]
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	685b      	ldr	r3, [r3, #4]
 800744c:	613b      	str	r3, [r7, #16]
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	699b      	ldr	r3, [r3, #24]
 8007452:	60fb      	str	r3, [r7, #12]
 8007454:	68fb      	ldr	r3, [r7, #12]
 8007456:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800745a:	60fb      	str	r3, [r7, #12]
 800745c:	68fb      	ldr	r3, [r7, #12]
 800745e:	f023 0303 	bic.w	r3, r3, #3
 8007462:	60fb      	str	r3, [r7, #12]
 8007464:	683b      	ldr	r3, [r7, #0]
 8007466:	681b      	ldr	r3, [r3, #0]
 8007468:	68fa      	ldr	r2, [r7, #12]
 800746a:	4313      	orrs	r3, r2
 800746c:	60fb      	str	r3, [r7, #12]
 800746e:	697b      	ldr	r3, [r7, #20]
 8007470:	f023 0302 	bic.w	r3, r3, #2
 8007474:	617b      	str	r3, [r7, #20]
 8007476:	683b      	ldr	r3, [r7, #0]
 8007478:	689b      	ldr	r3, [r3, #8]
 800747a:	697a      	ldr	r2, [r7, #20]
 800747c:	4313      	orrs	r3, r2
 800747e:	617b      	str	r3, [r7, #20]
 8007480:	687b      	ldr	r3, [r7, #4]
 8007482:	4a20      	ldr	r2, [pc, #128]	; (8007504 <TIM_OC1_SetConfig+0xd8>)
 8007484:	4293      	cmp	r3, r2
 8007486:	d003      	beq.n	8007490 <TIM_OC1_SetConfig+0x64>
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	4a1f      	ldr	r2, [pc, #124]	; (8007508 <TIM_OC1_SetConfig+0xdc>)
 800748c:	4293      	cmp	r3, r2
 800748e:	d10c      	bne.n	80074aa <TIM_OC1_SetConfig+0x7e>
 8007490:	697b      	ldr	r3, [r7, #20]
 8007492:	f023 0308 	bic.w	r3, r3, #8
 8007496:	617b      	str	r3, [r7, #20]
 8007498:	683b      	ldr	r3, [r7, #0]
 800749a:	68db      	ldr	r3, [r3, #12]
 800749c:	697a      	ldr	r2, [r7, #20]
 800749e:	4313      	orrs	r3, r2
 80074a0:	617b      	str	r3, [r7, #20]
 80074a2:	697b      	ldr	r3, [r7, #20]
 80074a4:	f023 0304 	bic.w	r3, r3, #4
 80074a8:	617b      	str	r3, [r7, #20]
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	4a15      	ldr	r2, [pc, #84]	; (8007504 <TIM_OC1_SetConfig+0xd8>)
 80074ae:	4293      	cmp	r3, r2
 80074b0:	d003      	beq.n	80074ba <TIM_OC1_SetConfig+0x8e>
 80074b2:	687b      	ldr	r3, [r7, #4]
 80074b4:	4a14      	ldr	r2, [pc, #80]	; (8007508 <TIM_OC1_SetConfig+0xdc>)
 80074b6:	4293      	cmp	r3, r2
 80074b8:	d111      	bne.n	80074de <TIM_OC1_SetConfig+0xb2>
 80074ba:	693b      	ldr	r3, [r7, #16]
 80074bc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80074c0:	613b      	str	r3, [r7, #16]
 80074c2:	693b      	ldr	r3, [r7, #16]
 80074c4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80074c8:	613b      	str	r3, [r7, #16]
 80074ca:	683b      	ldr	r3, [r7, #0]
 80074cc:	695b      	ldr	r3, [r3, #20]
 80074ce:	693a      	ldr	r2, [r7, #16]
 80074d0:	4313      	orrs	r3, r2
 80074d2:	613b      	str	r3, [r7, #16]
 80074d4:	683b      	ldr	r3, [r7, #0]
 80074d6:	699b      	ldr	r3, [r3, #24]
 80074d8:	693a      	ldr	r2, [r7, #16]
 80074da:	4313      	orrs	r3, r2
 80074dc:	613b      	str	r3, [r7, #16]
 80074de:	687b      	ldr	r3, [r7, #4]
 80074e0:	693a      	ldr	r2, [r7, #16]
 80074e2:	605a      	str	r2, [r3, #4]
 80074e4:	687b      	ldr	r3, [r7, #4]
 80074e6:	68fa      	ldr	r2, [r7, #12]
 80074e8:	619a      	str	r2, [r3, #24]
 80074ea:	683b      	ldr	r3, [r7, #0]
 80074ec:	685a      	ldr	r2, [r3, #4]
 80074ee:	687b      	ldr	r3, [r7, #4]
 80074f0:	635a      	str	r2, [r3, #52]	; 0x34
 80074f2:	687b      	ldr	r3, [r7, #4]
 80074f4:	697a      	ldr	r2, [r7, #20]
 80074f6:	621a      	str	r2, [r3, #32]
 80074f8:	bf00      	nop
 80074fa:	371c      	adds	r7, #28
 80074fc:	46bd      	mov	sp, r7
 80074fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007502:	4770      	bx	lr
 8007504:	40010000 	.word	0x40010000
 8007508:	40010400 	.word	0x40010400

0800750c <TIM_OC2_SetConfig>:
 800750c:	b480      	push	{r7}
 800750e:	b087      	sub	sp, #28
 8007510:	af00      	add	r7, sp, #0
 8007512:	6078      	str	r0, [r7, #4]
 8007514:	6039      	str	r1, [r7, #0]
 8007516:	687b      	ldr	r3, [r7, #4]
 8007518:	6a1b      	ldr	r3, [r3, #32]
 800751a:	f023 0210 	bic.w	r2, r3, #16
 800751e:	687b      	ldr	r3, [r7, #4]
 8007520:	621a      	str	r2, [r3, #32]
 8007522:	687b      	ldr	r3, [r7, #4]
 8007524:	6a1b      	ldr	r3, [r3, #32]
 8007526:	617b      	str	r3, [r7, #20]
 8007528:	687b      	ldr	r3, [r7, #4]
 800752a:	685b      	ldr	r3, [r3, #4]
 800752c:	613b      	str	r3, [r7, #16]
 800752e:	687b      	ldr	r3, [r7, #4]
 8007530:	699b      	ldr	r3, [r3, #24]
 8007532:	60fb      	str	r3, [r7, #12]
 8007534:	68fb      	ldr	r3, [r7, #12]
 8007536:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800753a:	60fb      	str	r3, [r7, #12]
 800753c:	68fb      	ldr	r3, [r7, #12]
 800753e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007542:	60fb      	str	r3, [r7, #12]
 8007544:	683b      	ldr	r3, [r7, #0]
 8007546:	681b      	ldr	r3, [r3, #0]
 8007548:	021b      	lsls	r3, r3, #8
 800754a:	68fa      	ldr	r2, [r7, #12]
 800754c:	4313      	orrs	r3, r2
 800754e:	60fb      	str	r3, [r7, #12]
 8007550:	697b      	ldr	r3, [r7, #20]
 8007552:	f023 0320 	bic.w	r3, r3, #32
 8007556:	617b      	str	r3, [r7, #20]
 8007558:	683b      	ldr	r3, [r7, #0]
 800755a:	689b      	ldr	r3, [r3, #8]
 800755c:	011b      	lsls	r3, r3, #4
 800755e:	697a      	ldr	r2, [r7, #20]
 8007560:	4313      	orrs	r3, r2
 8007562:	617b      	str	r3, [r7, #20]
 8007564:	687b      	ldr	r3, [r7, #4]
 8007566:	4a22      	ldr	r2, [pc, #136]	; (80075f0 <TIM_OC2_SetConfig+0xe4>)
 8007568:	4293      	cmp	r3, r2
 800756a:	d003      	beq.n	8007574 <TIM_OC2_SetConfig+0x68>
 800756c:	687b      	ldr	r3, [r7, #4]
 800756e:	4a21      	ldr	r2, [pc, #132]	; (80075f4 <TIM_OC2_SetConfig+0xe8>)
 8007570:	4293      	cmp	r3, r2
 8007572:	d10d      	bne.n	8007590 <TIM_OC2_SetConfig+0x84>
 8007574:	697b      	ldr	r3, [r7, #20]
 8007576:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800757a:	617b      	str	r3, [r7, #20]
 800757c:	683b      	ldr	r3, [r7, #0]
 800757e:	68db      	ldr	r3, [r3, #12]
 8007580:	011b      	lsls	r3, r3, #4
 8007582:	697a      	ldr	r2, [r7, #20]
 8007584:	4313      	orrs	r3, r2
 8007586:	617b      	str	r3, [r7, #20]
 8007588:	697b      	ldr	r3, [r7, #20]
 800758a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800758e:	617b      	str	r3, [r7, #20]
 8007590:	687b      	ldr	r3, [r7, #4]
 8007592:	4a17      	ldr	r2, [pc, #92]	; (80075f0 <TIM_OC2_SetConfig+0xe4>)
 8007594:	4293      	cmp	r3, r2
 8007596:	d003      	beq.n	80075a0 <TIM_OC2_SetConfig+0x94>
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	4a16      	ldr	r2, [pc, #88]	; (80075f4 <TIM_OC2_SetConfig+0xe8>)
 800759c:	4293      	cmp	r3, r2
 800759e:	d113      	bne.n	80075c8 <TIM_OC2_SetConfig+0xbc>
 80075a0:	693b      	ldr	r3, [r7, #16]
 80075a2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80075a6:	613b      	str	r3, [r7, #16]
 80075a8:	693b      	ldr	r3, [r7, #16]
 80075aa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80075ae:	613b      	str	r3, [r7, #16]
 80075b0:	683b      	ldr	r3, [r7, #0]
 80075b2:	695b      	ldr	r3, [r3, #20]
 80075b4:	009b      	lsls	r3, r3, #2
 80075b6:	693a      	ldr	r2, [r7, #16]
 80075b8:	4313      	orrs	r3, r2
 80075ba:	613b      	str	r3, [r7, #16]
 80075bc:	683b      	ldr	r3, [r7, #0]
 80075be:	699b      	ldr	r3, [r3, #24]
 80075c0:	009b      	lsls	r3, r3, #2
 80075c2:	693a      	ldr	r2, [r7, #16]
 80075c4:	4313      	orrs	r3, r2
 80075c6:	613b      	str	r3, [r7, #16]
 80075c8:	687b      	ldr	r3, [r7, #4]
 80075ca:	693a      	ldr	r2, [r7, #16]
 80075cc:	605a      	str	r2, [r3, #4]
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	68fa      	ldr	r2, [r7, #12]
 80075d2:	619a      	str	r2, [r3, #24]
 80075d4:	683b      	ldr	r3, [r7, #0]
 80075d6:	685a      	ldr	r2, [r3, #4]
 80075d8:	687b      	ldr	r3, [r7, #4]
 80075da:	639a      	str	r2, [r3, #56]	; 0x38
 80075dc:	687b      	ldr	r3, [r7, #4]
 80075de:	697a      	ldr	r2, [r7, #20]
 80075e0:	621a      	str	r2, [r3, #32]
 80075e2:	bf00      	nop
 80075e4:	371c      	adds	r7, #28
 80075e6:	46bd      	mov	sp, r7
 80075e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075ec:	4770      	bx	lr
 80075ee:	bf00      	nop
 80075f0:	40010000 	.word	0x40010000
 80075f4:	40010400 	.word	0x40010400

080075f8 <TIM_OC3_SetConfig>:
 80075f8:	b480      	push	{r7}
 80075fa:	b087      	sub	sp, #28
 80075fc:	af00      	add	r7, sp, #0
 80075fe:	6078      	str	r0, [r7, #4]
 8007600:	6039      	str	r1, [r7, #0]
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	6a1b      	ldr	r3, [r3, #32]
 8007606:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800760a:	687b      	ldr	r3, [r7, #4]
 800760c:	621a      	str	r2, [r3, #32]
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	6a1b      	ldr	r3, [r3, #32]
 8007612:	617b      	str	r3, [r7, #20]
 8007614:	687b      	ldr	r3, [r7, #4]
 8007616:	685b      	ldr	r3, [r3, #4]
 8007618:	613b      	str	r3, [r7, #16]
 800761a:	687b      	ldr	r3, [r7, #4]
 800761c:	69db      	ldr	r3, [r3, #28]
 800761e:	60fb      	str	r3, [r7, #12]
 8007620:	68fb      	ldr	r3, [r7, #12]
 8007622:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007626:	60fb      	str	r3, [r7, #12]
 8007628:	68fb      	ldr	r3, [r7, #12]
 800762a:	f023 0303 	bic.w	r3, r3, #3
 800762e:	60fb      	str	r3, [r7, #12]
 8007630:	683b      	ldr	r3, [r7, #0]
 8007632:	681b      	ldr	r3, [r3, #0]
 8007634:	68fa      	ldr	r2, [r7, #12]
 8007636:	4313      	orrs	r3, r2
 8007638:	60fb      	str	r3, [r7, #12]
 800763a:	697b      	ldr	r3, [r7, #20]
 800763c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007640:	617b      	str	r3, [r7, #20]
 8007642:	683b      	ldr	r3, [r7, #0]
 8007644:	689b      	ldr	r3, [r3, #8]
 8007646:	021b      	lsls	r3, r3, #8
 8007648:	697a      	ldr	r2, [r7, #20]
 800764a:	4313      	orrs	r3, r2
 800764c:	617b      	str	r3, [r7, #20]
 800764e:	687b      	ldr	r3, [r7, #4]
 8007650:	4a21      	ldr	r2, [pc, #132]	; (80076d8 <TIM_OC3_SetConfig+0xe0>)
 8007652:	4293      	cmp	r3, r2
 8007654:	d003      	beq.n	800765e <TIM_OC3_SetConfig+0x66>
 8007656:	687b      	ldr	r3, [r7, #4]
 8007658:	4a20      	ldr	r2, [pc, #128]	; (80076dc <TIM_OC3_SetConfig+0xe4>)
 800765a:	4293      	cmp	r3, r2
 800765c:	d10d      	bne.n	800767a <TIM_OC3_SetConfig+0x82>
 800765e:	697b      	ldr	r3, [r7, #20]
 8007660:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007664:	617b      	str	r3, [r7, #20]
 8007666:	683b      	ldr	r3, [r7, #0]
 8007668:	68db      	ldr	r3, [r3, #12]
 800766a:	021b      	lsls	r3, r3, #8
 800766c:	697a      	ldr	r2, [r7, #20]
 800766e:	4313      	orrs	r3, r2
 8007670:	617b      	str	r3, [r7, #20]
 8007672:	697b      	ldr	r3, [r7, #20]
 8007674:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007678:	617b      	str	r3, [r7, #20]
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	4a16      	ldr	r2, [pc, #88]	; (80076d8 <TIM_OC3_SetConfig+0xe0>)
 800767e:	4293      	cmp	r3, r2
 8007680:	d003      	beq.n	800768a <TIM_OC3_SetConfig+0x92>
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	4a15      	ldr	r2, [pc, #84]	; (80076dc <TIM_OC3_SetConfig+0xe4>)
 8007686:	4293      	cmp	r3, r2
 8007688:	d113      	bne.n	80076b2 <TIM_OC3_SetConfig+0xba>
 800768a:	693b      	ldr	r3, [r7, #16]
 800768c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007690:	613b      	str	r3, [r7, #16]
 8007692:	693b      	ldr	r3, [r7, #16]
 8007694:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8007698:	613b      	str	r3, [r7, #16]
 800769a:	683b      	ldr	r3, [r7, #0]
 800769c:	695b      	ldr	r3, [r3, #20]
 800769e:	011b      	lsls	r3, r3, #4
 80076a0:	693a      	ldr	r2, [r7, #16]
 80076a2:	4313      	orrs	r3, r2
 80076a4:	613b      	str	r3, [r7, #16]
 80076a6:	683b      	ldr	r3, [r7, #0]
 80076a8:	699b      	ldr	r3, [r3, #24]
 80076aa:	011b      	lsls	r3, r3, #4
 80076ac:	693a      	ldr	r2, [r7, #16]
 80076ae:	4313      	orrs	r3, r2
 80076b0:	613b      	str	r3, [r7, #16]
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	693a      	ldr	r2, [r7, #16]
 80076b6:	605a      	str	r2, [r3, #4]
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	68fa      	ldr	r2, [r7, #12]
 80076bc:	61da      	str	r2, [r3, #28]
 80076be:	683b      	ldr	r3, [r7, #0]
 80076c0:	685a      	ldr	r2, [r3, #4]
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	63da      	str	r2, [r3, #60]	; 0x3c
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	697a      	ldr	r2, [r7, #20]
 80076ca:	621a      	str	r2, [r3, #32]
 80076cc:	bf00      	nop
 80076ce:	371c      	adds	r7, #28
 80076d0:	46bd      	mov	sp, r7
 80076d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076d6:	4770      	bx	lr
 80076d8:	40010000 	.word	0x40010000
 80076dc:	40010400 	.word	0x40010400

080076e0 <TIM_OC4_SetConfig>:
 80076e0:	b480      	push	{r7}
 80076e2:	b087      	sub	sp, #28
 80076e4:	af00      	add	r7, sp, #0
 80076e6:	6078      	str	r0, [r7, #4]
 80076e8:	6039      	str	r1, [r7, #0]
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	6a1b      	ldr	r3, [r3, #32]
 80076ee:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80076f2:	687b      	ldr	r3, [r7, #4]
 80076f4:	621a      	str	r2, [r3, #32]
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	6a1b      	ldr	r3, [r3, #32]
 80076fa:	613b      	str	r3, [r7, #16]
 80076fc:	687b      	ldr	r3, [r7, #4]
 80076fe:	685b      	ldr	r3, [r3, #4]
 8007700:	617b      	str	r3, [r7, #20]
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	69db      	ldr	r3, [r3, #28]
 8007706:	60fb      	str	r3, [r7, #12]
 8007708:	68fb      	ldr	r3, [r7, #12]
 800770a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800770e:	60fb      	str	r3, [r7, #12]
 8007710:	68fb      	ldr	r3, [r7, #12]
 8007712:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007716:	60fb      	str	r3, [r7, #12]
 8007718:	683b      	ldr	r3, [r7, #0]
 800771a:	681b      	ldr	r3, [r3, #0]
 800771c:	021b      	lsls	r3, r3, #8
 800771e:	68fa      	ldr	r2, [r7, #12]
 8007720:	4313      	orrs	r3, r2
 8007722:	60fb      	str	r3, [r7, #12]
 8007724:	693b      	ldr	r3, [r7, #16]
 8007726:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800772a:	613b      	str	r3, [r7, #16]
 800772c:	683b      	ldr	r3, [r7, #0]
 800772e:	689b      	ldr	r3, [r3, #8]
 8007730:	031b      	lsls	r3, r3, #12
 8007732:	693a      	ldr	r2, [r7, #16]
 8007734:	4313      	orrs	r3, r2
 8007736:	613b      	str	r3, [r7, #16]
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	4a12      	ldr	r2, [pc, #72]	; (8007784 <TIM_OC4_SetConfig+0xa4>)
 800773c:	4293      	cmp	r3, r2
 800773e:	d003      	beq.n	8007748 <TIM_OC4_SetConfig+0x68>
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	4a11      	ldr	r2, [pc, #68]	; (8007788 <TIM_OC4_SetConfig+0xa8>)
 8007744:	4293      	cmp	r3, r2
 8007746:	d109      	bne.n	800775c <TIM_OC4_SetConfig+0x7c>
 8007748:	697b      	ldr	r3, [r7, #20]
 800774a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800774e:	617b      	str	r3, [r7, #20]
 8007750:	683b      	ldr	r3, [r7, #0]
 8007752:	695b      	ldr	r3, [r3, #20]
 8007754:	019b      	lsls	r3, r3, #6
 8007756:	697a      	ldr	r2, [r7, #20]
 8007758:	4313      	orrs	r3, r2
 800775a:	617b      	str	r3, [r7, #20]
 800775c:	687b      	ldr	r3, [r7, #4]
 800775e:	697a      	ldr	r2, [r7, #20]
 8007760:	605a      	str	r2, [r3, #4]
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	68fa      	ldr	r2, [r7, #12]
 8007766:	61da      	str	r2, [r3, #28]
 8007768:	683b      	ldr	r3, [r7, #0]
 800776a:	685a      	ldr	r2, [r3, #4]
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	641a      	str	r2, [r3, #64]	; 0x40
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	693a      	ldr	r2, [r7, #16]
 8007774:	621a      	str	r2, [r3, #32]
 8007776:	bf00      	nop
 8007778:	371c      	adds	r7, #28
 800777a:	46bd      	mov	sp, r7
 800777c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007780:	4770      	bx	lr
 8007782:	bf00      	nop
 8007784:	40010000 	.word	0x40010000
 8007788:	40010400 	.word	0x40010400

0800778c <TIM_TI1_ConfigInputStage>:
 800778c:	b480      	push	{r7}
 800778e:	b087      	sub	sp, #28
 8007790:	af00      	add	r7, sp, #0
 8007792:	60f8      	str	r0, [r7, #12]
 8007794:	60b9      	str	r1, [r7, #8]
 8007796:	607a      	str	r2, [r7, #4]
 8007798:	68fb      	ldr	r3, [r7, #12]
 800779a:	6a1b      	ldr	r3, [r3, #32]
 800779c:	617b      	str	r3, [r7, #20]
 800779e:	68fb      	ldr	r3, [r7, #12]
 80077a0:	6a1b      	ldr	r3, [r3, #32]
 80077a2:	f023 0201 	bic.w	r2, r3, #1
 80077a6:	68fb      	ldr	r3, [r7, #12]
 80077a8:	621a      	str	r2, [r3, #32]
 80077aa:	68fb      	ldr	r3, [r7, #12]
 80077ac:	699b      	ldr	r3, [r3, #24]
 80077ae:	613b      	str	r3, [r7, #16]
 80077b0:	693b      	ldr	r3, [r7, #16]
 80077b2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80077b6:	613b      	str	r3, [r7, #16]
 80077b8:	687b      	ldr	r3, [r7, #4]
 80077ba:	011b      	lsls	r3, r3, #4
 80077bc:	693a      	ldr	r2, [r7, #16]
 80077be:	4313      	orrs	r3, r2
 80077c0:	613b      	str	r3, [r7, #16]
 80077c2:	697b      	ldr	r3, [r7, #20]
 80077c4:	f023 030a 	bic.w	r3, r3, #10
 80077c8:	617b      	str	r3, [r7, #20]
 80077ca:	697a      	ldr	r2, [r7, #20]
 80077cc:	68bb      	ldr	r3, [r7, #8]
 80077ce:	4313      	orrs	r3, r2
 80077d0:	617b      	str	r3, [r7, #20]
 80077d2:	68fb      	ldr	r3, [r7, #12]
 80077d4:	693a      	ldr	r2, [r7, #16]
 80077d6:	619a      	str	r2, [r3, #24]
 80077d8:	68fb      	ldr	r3, [r7, #12]
 80077da:	697a      	ldr	r2, [r7, #20]
 80077dc:	621a      	str	r2, [r3, #32]
 80077de:	bf00      	nop
 80077e0:	371c      	adds	r7, #28
 80077e2:	46bd      	mov	sp, r7
 80077e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077e8:	4770      	bx	lr

080077ea <TIM_TI2_ConfigInputStage>:
 80077ea:	b480      	push	{r7}
 80077ec:	b087      	sub	sp, #28
 80077ee:	af00      	add	r7, sp, #0
 80077f0:	60f8      	str	r0, [r7, #12]
 80077f2:	60b9      	str	r1, [r7, #8]
 80077f4:	607a      	str	r2, [r7, #4]
 80077f6:	68fb      	ldr	r3, [r7, #12]
 80077f8:	6a1b      	ldr	r3, [r3, #32]
 80077fa:	f023 0210 	bic.w	r2, r3, #16
 80077fe:	68fb      	ldr	r3, [r7, #12]
 8007800:	621a      	str	r2, [r3, #32]
 8007802:	68fb      	ldr	r3, [r7, #12]
 8007804:	699b      	ldr	r3, [r3, #24]
 8007806:	617b      	str	r3, [r7, #20]
 8007808:	68fb      	ldr	r3, [r7, #12]
 800780a:	6a1b      	ldr	r3, [r3, #32]
 800780c:	613b      	str	r3, [r7, #16]
 800780e:	697b      	ldr	r3, [r7, #20]
 8007810:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8007814:	617b      	str	r3, [r7, #20]
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	031b      	lsls	r3, r3, #12
 800781a:	697a      	ldr	r2, [r7, #20]
 800781c:	4313      	orrs	r3, r2
 800781e:	617b      	str	r3, [r7, #20]
 8007820:	693b      	ldr	r3, [r7, #16]
 8007822:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8007826:	613b      	str	r3, [r7, #16]
 8007828:	68bb      	ldr	r3, [r7, #8]
 800782a:	011b      	lsls	r3, r3, #4
 800782c:	693a      	ldr	r2, [r7, #16]
 800782e:	4313      	orrs	r3, r2
 8007830:	613b      	str	r3, [r7, #16]
 8007832:	68fb      	ldr	r3, [r7, #12]
 8007834:	697a      	ldr	r2, [r7, #20]
 8007836:	619a      	str	r2, [r3, #24]
 8007838:	68fb      	ldr	r3, [r7, #12]
 800783a:	693a      	ldr	r2, [r7, #16]
 800783c:	621a      	str	r2, [r3, #32]
 800783e:	bf00      	nop
 8007840:	371c      	adds	r7, #28
 8007842:	46bd      	mov	sp, r7
 8007844:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007848:	4770      	bx	lr

0800784a <TIM_ITRx_SetConfig>:
 800784a:	b480      	push	{r7}
 800784c:	b085      	sub	sp, #20
 800784e:	af00      	add	r7, sp, #0
 8007850:	6078      	str	r0, [r7, #4]
 8007852:	6039      	str	r1, [r7, #0]
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	689b      	ldr	r3, [r3, #8]
 8007858:	60fb      	str	r3, [r7, #12]
 800785a:	68fb      	ldr	r3, [r7, #12]
 800785c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007860:	60fb      	str	r3, [r7, #12]
 8007862:	683a      	ldr	r2, [r7, #0]
 8007864:	68fb      	ldr	r3, [r7, #12]
 8007866:	4313      	orrs	r3, r2
 8007868:	f043 0307 	orr.w	r3, r3, #7
 800786c:	60fb      	str	r3, [r7, #12]
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	68fa      	ldr	r2, [r7, #12]
 8007872:	609a      	str	r2, [r3, #8]
 8007874:	bf00      	nop
 8007876:	3714      	adds	r7, #20
 8007878:	46bd      	mov	sp, r7
 800787a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800787e:	4770      	bx	lr

08007880 <TIM_ETR_SetConfig>:
 8007880:	b480      	push	{r7}
 8007882:	b087      	sub	sp, #28
 8007884:	af00      	add	r7, sp, #0
 8007886:	60f8      	str	r0, [r7, #12]
 8007888:	60b9      	str	r1, [r7, #8]
 800788a:	607a      	str	r2, [r7, #4]
 800788c:	603b      	str	r3, [r7, #0]
 800788e:	68fb      	ldr	r3, [r7, #12]
 8007890:	689b      	ldr	r3, [r3, #8]
 8007892:	617b      	str	r3, [r7, #20]
 8007894:	697b      	ldr	r3, [r7, #20]
 8007896:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800789a:	617b      	str	r3, [r7, #20]
 800789c:	683b      	ldr	r3, [r7, #0]
 800789e:	021a      	lsls	r2, r3, #8
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	431a      	orrs	r2, r3
 80078a4:	68bb      	ldr	r3, [r7, #8]
 80078a6:	4313      	orrs	r3, r2
 80078a8:	697a      	ldr	r2, [r7, #20]
 80078aa:	4313      	orrs	r3, r2
 80078ac:	617b      	str	r3, [r7, #20]
 80078ae:	68fb      	ldr	r3, [r7, #12]
 80078b0:	697a      	ldr	r2, [r7, #20]
 80078b2:	609a      	str	r2, [r3, #8]
 80078b4:	bf00      	nop
 80078b6:	371c      	adds	r7, #28
 80078b8:	46bd      	mov	sp, r7
 80078ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078be:	4770      	bx	lr

080078c0 <TIM_CCxChannelCmd>:
 80078c0:	b480      	push	{r7}
 80078c2:	b087      	sub	sp, #28
 80078c4:	af00      	add	r7, sp, #0
 80078c6:	60f8      	str	r0, [r7, #12]
 80078c8:	60b9      	str	r1, [r7, #8]
 80078ca:	607a      	str	r2, [r7, #4]
 80078cc:	68bb      	ldr	r3, [r7, #8]
 80078ce:	f003 031f 	and.w	r3, r3, #31
 80078d2:	2201      	movs	r2, #1
 80078d4:	fa02 f303 	lsl.w	r3, r2, r3
 80078d8:	617b      	str	r3, [r7, #20]
 80078da:	68fb      	ldr	r3, [r7, #12]
 80078dc:	6a1a      	ldr	r2, [r3, #32]
 80078de:	697b      	ldr	r3, [r7, #20]
 80078e0:	43db      	mvns	r3, r3
 80078e2:	401a      	ands	r2, r3
 80078e4:	68fb      	ldr	r3, [r7, #12]
 80078e6:	621a      	str	r2, [r3, #32]
 80078e8:	68fb      	ldr	r3, [r7, #12]
 80078ea:	6a1a      	ldr	r2, [r3, #32]
 80078ec:	68bb      	ldr	r3, [r7, #8]
 80078ee:	f003 031f 	and.w	r3, r3, #31
 80078f2:	6879      	ldr	r1, [r7, #4]
 80078f4:	fa01 f303 	lsl.w	r3, r1, r3
 80078f8:	431a      	orrs	r2, r3
 80078fa:	68fb      	ldr	r3, [r7, #12]
 80078fc:	621a      	str	r2, [r3, #32]
 80078fe:	bf00      	nop
 8007900:	371c      	adds	r7, #28
 8007902:	46bd      	mov	sp, r7
 8007904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007908:	4770      	bx	lr
	...

0800790c <HAL_TIMEx_MasterConfigSynchronization>:
 800790c:	b480      	push	{r7}
 800790e:	b085      	sub	sp, #20
 8007910:	af00      	add	r7, sp, #0
 8007912:	6078      	str	r0, [r7, #4]
 8007914:	6039      	str	r1, [r7, #0]
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800791c:	2b01      	cmp	r3, #1
 800791e:	d101      	bne.n	8007924 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007920:	2302      	movs	r3, #2
 8007922:	e05a      	b.n	80079da <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007924:	687b      	ldr	r3, [r7, #4]
 8007926:	2201      	movs	r2, #1
 8007928:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800792c:	687b      	ldr	r3, [r7, #4]
 800792e:	2202      	movs	r2, #2
 8007930:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007934:	687b      	ldr	r3, [r7, #4]
 8007936:	681b      	ldr	r3, [r3, #0]
 8007938:	685b      	ldr	r3, [r3, #4]
 800793a:	60fb      	str	r3, [r7, #12]
 800793c:	687b      	ldr	r3, [r7, #4]
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	689b      	ldr	r3, [r3, #8]
 8007942:	60bb      	str	r3, [r7, #8]
 8007944:	68fb      	ldr	r3, [r7, #12]
 8007946:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800794a:	60fb      	str	r3, [r7, #12]
 800794c:	683b      	ldr	r3, [r7, #0]
 800794e:	681b      	ldr	r3, [r3, #0]
 8007950:	68fa      	ldr	r2, [r7, #12]
 8007952:	4313      	orrs	r3, r2
 8007954:	60fb      	str	r3, [r7, #12]
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	681b      	ldr	r3, [r3, #0]
 800795a:	68fa      	ldr	r2, [r7, #12]
 800795c:	605a      	str	r2, [r3, #4]
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	681b      	ldr	r3, [r3, #0]
 8007962:	4a21      	ldr	r2, [pc, #132]	; (80079e8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007964:	4293      	cmp	r3, r2
 8007966:	d022      	beq.n	80079ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	681b      	ldr	r3, [r3, #0]
 800796c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007970:	d01d      	beq.n	80079ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007972:	687b      	ldr	r3, [r7, #4]
 8007974:	681b      	ldr	r3, [r3, #0]
 8007976:	4a1d      	ldr	r2, [pc, #116]	; (80079ec <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8007978:	4293      	cmp	r3, r2
 800797a:	d018      	beq.n	80079ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800797c:	687b      	ldr	r3, [r7, #4]
 800797e:	681b      	ldr	r3, [r3, #0]
 8007980:	4a1b      	ldr	r2, [pc, #108]	; (80079f0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007982:	4293      	cmp	r3, r2
 8007984:	d013      	beq.n	80079ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007986:	687b      	ldr	r3, [r7, #4]
 8007988:	681b      	ldr	r3, [r3, #0]
 800798a:	4a1a      	ldr	r2, [pc, #104]	; (80079f4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800798c:	4293      	cmp	r3, r2
 800798e:	d00e      	beq.n	80079ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	681b      	ldr	r3, [r3, #0]
 8007994:	4a18      	ldr	r2, [pc, #96]	; (80079f8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007996:	4293      	cmp	r3, r2
 8007998:	d009      	beq.n	80079ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	4a17      	ldr	r2, [pc, #92]	; (80079fc <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80079a0:	4293      	cmp	r3, r2
 80079a2:	d004      	beq.n	80079ae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80079a4:	687b      	ldr	r3, [r7, #4]
 80079a6:	681b      	ldr	r3, [r3, #0]
 80079a8:	4a15      	ldr	r2, [pc, #84]	; (8007a00 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80079aa:	4293      	cmp	r3, r2
 80079ac:	d10c      	bne.n	80079c8 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80079ae:	68bb      	ldr	r3, [r7, #8]
 80079b0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80079b4:	60bb      	str	r3, [r7, #8]
 80079b6:	683b      	ldr	r3, [r7, #0]
 80079b8:	685b      	ldr	r3, [r3, #4]
 80079ba:	68ba      	ldr	r2, [r7, #8]
 80079bc:	4313      	orrs	r3, r2
 80079be:	60bb      	str	r3, [r7, #8]
 80079c0:	687b      	ldr	r3, [r7, #4]
 80079c2:	681b      	ldr	r3, [r3, #0]
 80079c4:	68ba      	ldr	r2, [r7, #8]
 80079c6:	609a      	str	r2, [r3, #8]
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	2201      	movs	r2, #1
 80079cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	2200      	movs	r2, #0
 80079d4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80079d8:	2300      	movs	r3, #0
 80079da:	4618      	mov	r0, r3
 80079dc:	3714      	adds	r7, #20
 80079de:	46bd      	mov	sp, r7
 80079e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079e4:	4770      	bx	lr
 80079e6:	bf00      	nop
 80079e8:	40010000 	.word	0x40010000
 80079ec:	40000400 	.word	0x40000400
 80079f0:	40000800 	.word	0x40000800
 80079f4:	40000c00 	.word	0x40000c00
 80079f8:	40010400 	.word	0x40010400
 80079fc:	40014000 	.word	0x40014000
 8007a00:	40001800 	.word	0x40001800

08007a04 <HAL_TIMEx_ConfigBreakDeadTime>:
 8007a04:	b480      	push	{r7}
 8007a06:	b085      	sub	sp, #20
 8007a08:	af00      	add	r7, sp, #0
 8007a0a:	6078      	str	r0, [r7, #4]
 8007a0c:	6039      	str	r1, [r7, #0]
 8007a0e:	2300      	movs	r3, #0
 8007a10:	60fb      	str	r3, [r7, #12]
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007a18:	2b01      	cmp	r3, #1
 8007a1a:	d101      	bne.n	8007a20 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8007a1c:	2302      	movs	r3, #2
 8007a1e:	e03d      	b.n	8007a9c <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	2201      	movs	r2, #1
 8007a24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007a28:	68fb      	ldr	r3, [r7, #12]
 8007a2a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8007a2e:	683b      	ldr	r3, [r7, #0]
 8007a30:	68db      	ldr	r3, [r3, #12]
 8007a32:	4313      	orrs	r3, r2
 8007a34:	60fb      	str	r3, [r7, #12]
 8007a36:	68fb      	ldr	r3, [r7, #12]
 8007a38:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8007a3c:	683b      	ldr	r3, [r7, #0]
 8007a3e:	689b      	ldr	r3, [r3, #8]
 8007a40:	4313      	orrs	r3, r2
 8007a42:	60fb      	str	r3, [r7, #12]
 8007a44:	68fb      	ldr	r3, [r7, #12]
 8007a46:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8007a4a:	683b      	ldr	r3, [r7, #0]
 8007a4c:	685b      	ldr	r3, [r3, #4]
 8007a4e:	4313      	orrs	r3, r2
 8007a50:	60fb      	str	r3, [r7, #12]
 8007a52:	68fb      	ldr	r3, [r7, #12]
 8007a54:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8007a58:	683b      	ldr	r3, [r7, #0]
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	4313      	orrs	r3, r2
 8007a5e:	60fb      	str	r3, [r7, #12]
 8007a60:	68fb      	ldr	r3, [r7, #12]
 8007a62:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8007a66:	683b      	ldr	r3, [r7, #0]
 8007a68:	691b      	ldr	r3, [r3, #16]
 8007a6a:	4313      	orrs	r3, r2
 8007a6c:	60fb      	str	r3, [r7, #12]
 8007a6e:	68fb      	ldr	r3, [r7, #12]
 8007a70:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8007a74:	683b      	ldr	r3, [r7, #0]
 8007a76:	695b      	ldr	r3, [r3, #20]
 8007a78:	4313      	orrs	r3, r2
 8007a7a:	60fb      	str	r3, [r7, #12]
 8007a7c:	68fb      	ldr	r3, [r7, #12]
 8007a7e:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8007a82:	683b      	ldr	r3, [r7, #0]
 8007a84:	69db      	ldr	r3, [r3, #28]
 8007a86:	4313      	orrs	r3, r2
 8007a88:	60fb      	str	r3, [r7, #12]
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	681b      	ldr	r3, [r3, #0]
 8007a8e:	68fa      	ldr	r2, [r7, #12]
 8007a90:	645a      	str	r2, [r3, #68]	; 0x44
 8007a92:	687b      	ldr	r3, [r7, #4]
 8007a94:	2200      	movs	r2, #0
 8007a96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007a9a:	2300      	movs	r3, #0
 8007a9c:	4618      	mov	r0, r3
 8007a9e:	3714      	adds	r7, #20
 8007aa0:	46bd      	mov	sp, r7
 8007aa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aa6:	4770      	bx	lr

08007aa8 <HAL_TIMEx_CommutCallback>:
 8007aa8:	b480      	push	{r7}
 8007aaa:	b083      	sub	sp, #12
 8007aac:	af00      	add	r7, sp, #0
 8007aae:	6078      	str	r0, [r7, #4]
 8007ab0:	bf00      	nop
 8007ab2:	370c      	adds	r7, #12
 8007ab4:	46bd      	mov	sp, r7
 8007ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aba:	4770      	bx	lr

08007abc <HAL_TIMEx_BreakCallback>:
 8007abc:	b480      	push	{r7}
 8007abe:	b083      	sub	sp, #12
 8007ac0:	af00      	add	r7, sp, #0
 8007ac2:	6078      	str	r0, [r7, #4]
 8007ac4:	bf00      	nop
 8007ac6:	370c      	adds	r7, #12
 8007ac8:	46bd      	mov	sp, r7
 8007aca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ace:	4770      	bx	lr

08007ad0 <__libc_init_array>:
 8007ad0:	b570      	push	{r4, r5, r6, lr}
 8007ad2:	4d0d      	ldr	r5, [pc, #52]	; (8007b08 <__libc_init_array+0x38>)
 8007ad4:	4c0d      	ldr	r4, [pc, #52]	; (8007b0c <__libc_init_array+0x3c>)
 8007ad6:	1b64      	subs	r4, r4, r5
 8007ad8:	10a4      	asrs	r4, r4, #2
 8007ada:	2600      	movs	r6, #0
 8007adc:	42a6      	cmp	r6, r4
 8007ade:	d109      	bne.n	8007af4 <__libc_init_array+0x24>
 8007ae0:	4d0b      	ldr	r5, [pc, #44]	; (8007b10 <__libc_init_array+0x40>)
 8007ae2:	4c0c      	ldr	r4, [pc, #48]	; (8007b14 <__libc_init_array+0x44>)
 8007ae4:	f000 f820 	bl	8007b28 <_init>
 8007ae8:	1b64      	subs	r4, r4, r5
 8007aea:	10a4      	asrs	r4, r4, #2
 8007aec:	2600      	movs	r6, #0
 8007aee:	42a6      	cmp	r6, r4
 8007af0:	d105      	bne.n	8007afe <__libc_init_array+0x2e>
 8007af2:	bd70      	pop	{r4, r5, r6, pc}
 8007af4:	f855 3b04 	ldr.w	r3, [r5], #4
 8007af8:	4798      	blx	r3
 8007afa:	3601      	adds	r6, #1
 8007afc:	e7ee      	b.n	8007adc <__libc_init_array+0xc>
 8007afe:	f855 3b04 	ldr.w	r3, [r5], #4
 8007b02:	4798      	blx	r3
 8007b04:	3601      	adds	r6, #1
 8007b06:	e7f2      	b.n	8007aee <__libc_init_array+0x1e>
 8007b08:	08007c04 	.word	0x08007c04
 8007b0c:	08007c04 	.word	0x08007c04
 8007b10:	08007c04 	.word	0x08007c04
 8007b14:	08007c08 	.word	0x08007c08

08007b18 <memset>:
 8007b18:	4402      	add	r2, r0
 8007b1a:	4603      	mov	r3, r0
 8007b1c:	4293      	cmp	r3, r2
 8007b1e:	d100      	bne.n	8007b22 <memset+0xa>
 8007b20:	4770      	bx	lr
 8007b22:	f803 1b01 	strb.w	r1, [r3], #1
 8007b26:	e7f9      	b.n	8007b1c <memset+0x4>

08007b28 <_init>:
 8007b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b2a:	bf00      	nop
 8007b2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007b2e:	bc08      	pop	{r3}
 8007b30:	469e      	mov	lr, r3
 8007b32:	4770      	bx	lr

08007b34 <_fini>:
 8007b34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b36:	bf00      	nop
 8007b38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007b3a:	bc08      	pop	{r3}
 8007b3c:	469e      	mov	lr, r3
 8007b3e:	4770      	bx	lr
